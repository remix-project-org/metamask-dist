!function s(t,o,n){function e(a,c){if(!o[a]){if(!t[a]){var i="function"==typeof require&&require;if(!c&&i)return i(a,!0);if(r)return r(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var m=o[a]={exports:{}};t[a][0].call(m.exports,(function(s){return e(t[a][1][s]||s)}),m,m.exports,s,t,o,n)}return o[a].exports}for(var r="function"==typeof require&&require,a=0;a<n.length;a++)e(n[a]);return e}({1:[function(s,t,o){"use strict";let n=!1;const{chrome:e}=globalThis;globalThis.stateHooks=globalThis.stateHooks||{};const r=[];function a(...s){try{const t=(new Date).getTime();importScripts(...s);const o=(new Date).getTime();return r.push({name:s[0],value:o-t,children:[],startTime:t,endTime:o}),!0}catch(s){console.error(s)}return!1}function c(){if(n)return;n=!0;const s=[],t=t=>{s.push(t)},o=Date.now();t("../scripts/sentry-install.js");!self.document||t("../scripts/snow.js"),t("../scripts/use-snow.js");t("../scripts/init-globals.js"),t("../scripts/lockdown-install.js"),t("../scripts/lockdown-run.js"),t("../scripts/lockdown-more.js"),t("../scripts/runtime-cjs.js");"../common-0.js,../common-1.js,../common-2.js,../common-3.js,../common-4.js,../common-5.js,../common-6.js,../common-7.js,../common-8.js,../common-9.js,../common-10.js,../common-11.js,../common-12.js,../common-13.js,../common-14.js,../background-0.js,../background-1.js,../background-2.js,../background-3.js,../background-4.js,../background-5.js,../background-6.js,../background-7.js,../background-8.js".split(",").forEach((s=>t(s))),a(...s);Date.now();console.log("SCRIPTS IMPORT COMPLETE in Seconds: "+(Date.now()-o)/1e3)}self.addEventListener("install",c),e.runtime.onMessage.addListener((()=>(c(),!1))),"activated"===self.serviceWorker.state&&c();e.runtime.onInstalled.addListener((function s(t){"install"===t.reason&&(globalThis.stateHooks.metamaskTriggerOnInstall?(globalThis.stateHooks.metamaskTriggerOnInstall(),delete globalThis.stateHooks.metamaskTriggerOnInstall):globalThis.stateHooks.metamaskWasJustInstalled=!0,e.runtime.onInstalled.removeListener(s))})),(async()=>{try{await e.scripting.registerContentScripts([{id:"inpage",matches:["file://*/*","http://*/*","https://*/*"],js:["scripts/inpage.js"],runAt:"document_start",world:"MAIN",allFrames:!0}])}catch(s){console.warn(`Dropped attempt to register inpage content script. ${s}`)}})()},{}]},{},[1]);