LavaPack.loadBundle([[89,{"../../../shared/constants/hardware-wallets":5589,"../../../shared/constants/network":5596,"../../../shared/constants/preferences":5601,"@metamask/base-controller":1365,"@metamask/preferences-controller":2308},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultPreferencesControllerState=s.PreferencesController=void 0;var a=e("@metamask/base-controller"),n=e("@metamask/preferences-controller"),i=e("../../../shared/constants/network"),o=e("../../../shared/constants/hardware-wallets"),r=e("../../../shared/constants/preferences");function l(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}const c=()=>({selectedAddress:"",useBlockie:!1,usePhishDetect:!0,dismissSeedBackUpReminder:!1,overrideContentSecurityPolicyHeader:!0,useMultiAccountBalanceChecker:!0,useSafeChainsListValidation:!0,useTokenDetection:!0,useNftDetection:!0,use4ByteResolution:!0,useCurrencyRateCheck:!0,openSeaEnabled:!0,securityAlertsEnabled:!0,watchEthereumAccountEnabled:!1,bitcoinSupportEnabled:!1,bitcoinTestnetSupportEnabled:!1,addSnapAccountEnabled:!1,advancedGasFee:{},featureFlags:{},knownMethodData:{},currentLocale:"",identities:{},lostIdentities:{},forgottenPassword:!1,preferences:{autoLockTimeLimit:undefined,showExtensionInFullSizeView:!1,showFiatInTestnets:!1,showTestNetworks:!1,smartTransactionsOptInStatus:!0,smartTransactionsMigrationApplied:!1,showNativeTokenAsMainBalance:!1,useNativeCurrencyAsPrimaryCurrency:!0,hideZeroBalanceTokens:!1,petnamesEnabled:!0,featureNotificationsEnabled:!1,showConfirmationAdvancedDetails:!1,showMultiRpcModal:!1,privacyMode:!1,shouldShowAggregatedBalancePopover:!0,dismissSmartAccountSuggestionEnabled:!1,tokenSortConfig:{key:"tokenFiatAmount",order:"dsc",sortCallback:"stringNumeric"},tokenNetworkFilter:{}},ipfsGateway:i.IPFS_DEFAULT_GATEWAY_URL,isIpfsGatewayEnabled:!0,useAddressBarEnsResolution:!0,ledgerTransportType:window.navigator.hid?o.LedgerTransportTypes.webhid:o.LedgerTransportTypes.u2f,snapRegistryList:{},theme:r.ThemeType.os,snapsAddSnapAccountModalDismissed:!1,useExternalNameSources:!0,useTransactionSimulations:!0,enableMV3TimestampSave:!0,useExternalServices:!0,isMultiAccountBalancesEnabled:!0,showIncomingTransactions:{[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.MAINNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.GOERLI]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.BSC]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.BSC_TESTNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.OPTIMISM]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.OPTIMISM_SEPOLIA]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.POLYGON]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.POLYGON_TESTNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.AVALANCHE]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.AVALANCHE_TESTNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.FANTOM]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.FANTOM_TESTNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.SEPOLIA]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_GOERLI]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_SEPOLIA]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.LINEA_MAINNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONBEAM_TESTNET]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.MOONRIVER]:!0,[n.ETHERSCAN_SUPPORTED_CHAIN_IDS.GNOSIS]:!0},manageInstitutionalWallets:!1,disabledUpgradeAccountsByChain:{}});s.getDefaultPreferencesControllerState=c;const u={selectedAddress:{persist:!0,anonymous:!1},useBlockie:{persist:!0,anonymous:!0},usePhishDetect:{persist:!0,anonymous:!0},dismissSeedBackUpReminder:{persist:!0,anonymous:!0},overrideContentSecurityPolicyHeader:{persist:!0,anonymous:!0},useMultiAccountBalanceChecker:{persist:!0,anonymous:!0},useSafeChainsListValidation:{persist:!0,anonymous:!1},useTokenDetection:{persist:!0,anonymous:!0},useNftDetection:{persist:!0,anonymous:!0},use4ByteResolution:{persist:!0,anonymous:!0},useCurrencyRateCheck:{persist:!0,anonymous:!0},openSeaEnabled:{persist:!0,anonymous:!0},securityAlertsEnabled:{persist:!0,anonymous:!1},watchEthereumAccountEnabled:{persist:!0,anonymous:!1},bitcoinSupportEnabled:{persist:!0,anonymous:!1},bitcoinTestnetSupportEnabled:{persist:!0,anonymous:!1},addSnapAccountEnabled:{persist:!0,anonymous:!1},advancedGasFee:{persist:!0,anonymous:!0},featureFlags:{persist:!0,anonymous:!0},knownMethodData:{persist:!0,anonymous:!1},currentLocale:{persist:!0,anonymous:!0},identities:{persist:!0,anonymous:!1},lostIdentities:{persist:!0,anonymous:!1},forgottenPassword:{persist:!0,anonymous:!0},preferences:{persist:!0,anonymous:!0,properties:{smartTransactionsOptInStatus:{persist:!0,anonymous:!0},smartTransactionsMigrationApplied:{persist:!0,anonymous:!0}}},ipfsGateway:{persist:!0,anonymous:!1},isIpfsGatewayEnabled:{persist:!0,anonymous:!1},useAddressBarEnsResolution:{persist:!0,anonymous:!0},ledgerTransportType:{persist:!0,anonymous:!0},snapRegistryList:{persist:!0,anonymous:!1},theme:{persist:!0,anonymous:!0},snapsAddSnapAccountModalDismissed:{persist:!0,anonymous:!1},useExternalNameSources:{persist:!0,anonymous:!1},useTransactionSimulations:{persist:!0,anonymous:!0},enableMV3TimestampSave:{persist:!0,anonymous:!0},useExternalServices:{persist:!0,anonymous:!1},textDirection:{persist:!0,anonymous:!1},isMultiAccountBalancesEnabled:{persist:!0,anonymous:!0},showIncomingTransactions:{persist:!0,anonymous:!0},manageInstitutionalWallets:{persist:!0,anonymous:!1},disabledUpgradeAccountsByChain:{persist:!0,anonymous:!1}};var d=new WeakSet;class p extends a.BaseController{constructor({messenger:e,state:t}){super({messenger:e,metadata:u,name:"PreferencesController",state:{...c(),...t}}),l(this,d),this.messagingSystem.subscribe("AccountsController:stateChange",function(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}(d,this,h).bind(this)),globalThis.setPreference=(e,t)=>this.setFeatureFlag(e,t)}setPasswordForgotten(e){this.update((t=>{t.forgottenPassword=e}))}setUseBlockie(e){this.update((t=>{t.useBlockie=e}))}setUsePhishDetect(e){this.update((t=>{t.usePhishDetect=e}))}setUseMultiAccountBalanceChecker(e){this.update((t=>{t.useMultiAccountBalanceChecker=e}))}setUseSafeChainsListValidation(e){this.update((t=>{t.useSafeChainsListValidation=e}))}toggleExternalServices(e){this.update((t=>{t.useExternalServices=e})),this.setUseTokenDetection(e),this.setUseCurrencyRateCheck(e),this.setUsePhishDetect(e),this.setUseAddressBarEnsResolution(e),this.setOpenSeaEnabled(e),this.setUseNftDetection(e)}setUseTokenDetection(e){this.update((t=>{t.useTokenDetection=e}))}setUseNftDetection(e){this.update((t=>{t.useNftDetection=e}))}setUse4ByteResolution(e){this.update((t=>{t.use4ByteResolution=e}))}setUseCurrencyRateCheck(e){this.update((t=>{t.useCurrencyRateCheck=e}))}setOpenSeaEnabled(e){this.update((t=>{t.openSeaEnabled=e}))}setSecurityAlertsEnabled(e){this.update((t=>{t.securityAlertsEnabled=e}))}setAddSnapAccountEnabled(e){this.update((t=>{t.addSnapAccountEnabled=e}))}setUseExternalNameSources(e){this.update((t=>{t.useExternalNameSources=e}))}setUseTransactionSimulations(e){this.update((t=>{t.useTransactionSimulations=e}))}setAdvancedGasFee({chainId:e,gasFeePreferences:t}){const{advancedGasFee:s}=this.state;this.update((a=>{a.advancedGasFee={...s,[e]:t}}))}setTheme(e){this.update((t=>{t.theme=e}))}addKnownMethodData(e,t){const{knownMethodData:s}=this.state,a={...s};a[e]=t,this.update((e=>{e.knownMethodData=a}))}setCurrentLocale(e){const t=["ar","dv","fa","he","ku"].includes(e)?"rtl":"auto";return this.update((s=>{s.currentLocale=e,s.textDirection=t})),t}setSelectedAddress(e){const t=this.messagingSystem.call("AccountsController:getAccountByAddress",e);if(!t)throw new Error(`Identity for '${e} not found`);this.messagingSystem.call("AccountsController:setSelectedAccount",t.id)}getSelectedAddress(){return this.messagingSystem.call("AccountsController:getSelectedAccount").address}setAccountLabel(e,t){if(!e)throw new Error(`setAccountLabel requires a valid address, got ${String(e)}`);const s=this.messagingSystem.call("AccountsController:getAccountByAddress",e);return s?(this.messagingSystem.call("AccountsController:setAccountName",s.id,t),t):undefined}setFeatureFlag(e,t){const s={...this.state.featureFlags,[e]:t};return this.update((e=>{e.featureFlags=s})),s}setPreference(e,t){const s={...this.getPreferences(),[e]:t};return this.update((e=>{e.preferences=s})),s}getPreferences(){return this.state.preferences}getIpfsGateway(){return this.state.ipfsGateway}setIpfsGateway(e){return this.update((t=>{t.ipfsGateway=e})),e}setIsIpfsGatewayEnabled(e){this.update((t=>{t.isIpfsGatewayEnabled=e}))}setUseAddressBarEnsResolution(e){this.update((t=>{t.useAddressBarEnsResolution=e}))}setLedgerTransportPreference(e){return this.update((t=>{t.ledgerTransportType=e})),e}setDismissSeedBackUpReminder(e){this.update((t=>{t.dismissSeedBackUpReminder=e}))}setOverrideContentSecurityPolicyHeader(e){this.update((t=>{t.overrideContentSecurityPolicyHeader=e}))}setManageInstitutionalWallets(e){this.update((t=>{t.manageInstitutionalWallets=e}))}setServiceWorkerKeepAlivePreference(e){this.update((t=>{t.enableMV3TimestampSave=e}))}getDisabledUpgradeAccountsByChain(){return this.state.disabledUpgradeAccountsByChain??{}}disableAccountUpgrade(e,t){this.update((s=>{var a;const{disabledUpgradeAccountsByChain:n={}}=s,i=t.toLowerCase();null!==(a=n[e])&&void 0!==a&&a.includes(i)||(n[e]||(n[e]=[]),n[e].push(i))}))}setSnapsAddSnapAccountModalDismissed(e){this.update((t=>{t.snapsAddSnapAccountModalDismissed=e}))}}function h(e){const{accounts:t,selectedAccount:s}=e.internalAccounts,a=t[s],{identities:n,lostIdentities:i}=this.state,o=Object.values(t).map((e=>e.address.toLowerCase())),r=Object.keys(n).reduce(((e,t)=>(o.includes(t.toLowerCase())&&(e[t]=n[t]),e)),{...i??{}}),l=Object.values(t).reduce(((e,t)=>(e[t.address]={address:t.address,name:t.metadata.name,lastSelected:t.metadata.lastSelected},e)),{});this.update((e=>{e.identities=l,e.lostIdentities=r,e.selectedAddress=(null==a?void 0:a.address)||""}))}s.PreferencesController=p}}},{package:"$root$",file:"app/scripts/controllers/preferences-controller.ts"}],[9,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.PHISHING_WARNING_PAGE=s.PHISHING_STREAM=s.PHISHING_SAFELIST=s.METAMASK_INPAGE=s.METAMASK_EIP_1193_PROVIDER=s.METAMASK_COOKIE_HANDLER=s.METAMASK_CAIP_MULTICHAIN_PROVIDER=s.LEGACY_PUBLIC_CONFIG=s.LEGACY_PROVIDER=s.LEGACY_INPAGE=s.LEGACY_CONTENT_SCRIPT=s.CONTENT_SCRIPT=void 0;s.CONTENT_SCRIPT="metamask-contentscript",s.METAMASK_INPAGE="metamask-inpage",s.PHISHING_WARNING_PAGE="metamask-phishing-warning-page",s.METAMASK_COOKIE_HANDLER="metamask-cookie-handler",s.METAMASK_EIP_1193_PROVIDER="metamask-provider",s.METAMASK_CAIP_MULTICHAIN_PROVIDER="metamask-multichain-provider",s.PHISHING_SAFELIST="metamask-phishing-safelist",s.PHISHING_STREAM="phishing",s.LEGACY_CONTENT_SCRIPT="contentscript",s.LEGACY_INPAGE="inpage",s.LEGACY_PROVIDER="provider",s.LEGACY_PUBLIC_CONFIG="publicConfig"}}},{package:"$root$",file:"app/scripts/constants/stream.ts"}],[90,{"webextension-polyfill":5559},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getNotificationImage=async function(){return await n.default.runtime.getURL("../../images/icon-64.png")};var a,n=(a=e("webextension-polyfill"))&&a.__esModule?a:{default:a}}}},{package:"$root$",file:"app/scripts/controllers/push-notifications/get-notification-image.ts"}],[91,{"../../translate":386,"@metamask/notification-services-controller":2251},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createNotificationMessage=function(e){return a.NotificationServicesPushController.Utils.createOnChainPushNotificationMessage(e,o)};var a=e("@metamask/notification-services-controller"),n=e("../../translate");const i=(...e)=>(0,n.t)(...e)??"",o={pushPlatformNotificationsFundsSentTitle:()=>i("pushPlatformNotificationsFundsSentTitle"),pushPlatformNotificationsFundsSentDescriptionDefault:()=>i("pushPlatformNotificationsFundsSentDescriptionDefault"),pushPlatformNotificationsFundsSentDescription:(e,t)=>i("pushPlatformNotificationsFundsSentDescription",e,t),pushPlatformNotificationsFundsReceivedTitle:()=>i("pushPlatformNotificationsFundsReceivedTitle"),pushPlatformNotificationsFundsReceivedDescriptionDefault:()=>i("pushPlatformNotificationsFundsReceivedDescriptionDefault"),pushPlatformNotificationsFundsReceivedDescription:(e,t)=>i("pushPlatformNotificationsFundsReceivedDescription",e,t),pushPlatformNotificationsSwapCompletedTitle:()=>i("pushPlatformNotificationsSwapCompletedTitle"),pushPlatformNotificationsSwapCompletedDescription:()=>i("pushPlatformNotificationsSwapCompletedDescription"),pushPlatformNotificationsNftSentTitle:()=>i("pushPlatformNotificationsNftSentTitle"),pushPlatformNotificationsNftSentDescription:()=>i("pushPlatformNotificationsNftSentDescription"),pushPlatformNotificationsNftReceivedTitle:()=>i("pushPlatformNotificationsNftReceivedTitle"),pushPlatformNotificationsNftReceivedDescription:()=>i("pushPlatformNotificationsNftReceivedDescription"),pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle:()=>i("pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle"),pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription:()=>i("pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription"),pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle:()=>i("pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle"),pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription:()=>i("pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription"),pushPlatformNotificationsStakingLidoStakeCompletedTitle:()=>i("pushPlatformNotificationsStakingLidoStakeCompletedTitle"),pushPlatformNotificationsStakingLidoStakeCompletedDescription:()=>i("pushPlatformNotificationsStakingLidoStakeCompletedDescription"),pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle:()=>i("pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle"),pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription:()=>i("pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription"),pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle:()=>i("pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle"),pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription:()=>i("pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription"),pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle:()=>i("pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle"),pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription:()=>i("pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription")}}}},{package:"$root$",file:"app/scripts/controllers/push-notifications/get-notification-message.ts"}],[92,{"../../platforms/extension":384,"./get-notification-image":90,"./get-notification-message":91},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.onPushNotificationClicked=async function(e,t){var s;e.notification.close();const a=t??(null==e||null===(s=e.notification)||void 0===s?void 0:s.data),n=`${l.getExtensionURL(null,null)}#notifications/${a.id}`;e.waitUntil(r.clients.openWindow(n))},s.onPushNotificationReceived=async function(e){const t=(0,o.createNotificationMessage)(e);if(!t)return;const s=null==r?void 0:r.registration;if(!s)return;const a=await(0,i.getNotificationImage)();await s.showNotification(t.title,{body:t.description,icon:a,tag:null==e?void 0:e.id,data:e})};var a,n=(a=e("../../platforms/extension"))&&a.__esModule?a:{default:a},i=e("./get-notification-image"),o=e("./get-notification-message");const r=self,l=new n.default}}},{package:"$root$",file:"app/scripts/controllers/push-notifications/index.ts"}],[93,{"../../../../shared/constants/common":5584,"../../../../shared/constants/gas":5588,"../../../../shared/constants/metametrics":5593,"../../../../shared/constants/network":5596,"../../../../shared/constants/smartTransactions":5605,"../../../../shared/constants/swaps":5607,"../../../../shared/constants/time":5609,"../../../../shared/lib/fetch-with-cache":5626,"../../../../shared/lib/swaps-utils":5637,"../../../../shared/lib/transactions-controller-utils":5642,"../../../../shared/modules/Numeric":5644,"../../../../shared/modules/conversion.utils":5649,"../../../../shared/modules/string-utils":5669,"../../../../shared/modules/swaps.utils":5670,"./swaps.constants":94,"./swaps.utils":95,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/base-controller":1365,"@sentry/browser":2946,"bignumber.js":3840,"human-standard-token-abi":4503,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;var a=e("@ethersproject/contracts"),n=e("@ethersproject/providers"),i=e("@metamask/base-controller"),o=e("@sentry/browser"),r=e("bignumber.js"),l=P(e("human-standard-token-abi")),c=e("lodash"),u=e("../../../../shared/constants/common"),d=e("../../../../shared/constants/gas"),p=e("../../../../shared/constants/metametrics"),h=e("../../../../shared/constants/network"),m=e("../../../../shared/constants/smartTransactions"),f=e("../../../../shared/constants/swaps"),g=e("../../../../shared/constants/time"),S=P(e("../../../../shared/lib/fetch-with-cache")),w=e("../../../../shared/lib/swaps-utils"),E=e("../../../../shared/lib/transactions-controller-utils"),T=e("../../../../shared/modules/conversion.utils"),A=e("../../../../shared/modules/Numeric"),N=e("../../../../shared/modules/string-utils"),C=e("../../../../shared/modules/swaps.utils"),_=e("./swaps.constants"),I=e("./swaps.utils");function P(e){return e&&e.__esModule?e:{default:e}}function v(e,t,s){k(e,t),t.set(e,s)}function k(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function y(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var a=s.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function b(e,t){return e.get(M(e,t))}function R(e,t,s){return e.set(M(e,t),s),s}function M(e,t,s){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:s;throw new TypeError("Private element is not present on this object")}const O={swapsState:{persist:!1,anonymous:!1}};var F=new WeakMap,L=new WeakMap,D=new WeakMap,G=new WeakMap,x=new WeakMap,U=new WeakMap,B=new WeakSet;class H extends i.BaseController{constructor(e,t){var s,a,n;super({name:_.controllerName,metadata:O,messenger:e.messenger,state:{swapsState:{...(0,_.getDefaultSwapsControllerState)().swapsState,swapsFeatureFlags:(null==t||null===(s=t.swapsState)||void 0===s?void 0:s.swapsFeatureFlags)||{}}}}),k(a=this,n=B),n.add(a),y(this,"getBufferedGasLimit",void 0),y(this,"resetState",void 0),y(this,"trackMetaMetricsEvent",void 0),v(this,F,void 0),v(this,L,void 0),v(this,D,null),v(this,G,void 0),v(this,x,void 0),v(this,U,void 0),y(this,"_fetchTradesInfo",w.fetchTradesInfo),y(this,"__test__updateState",(e=>{this.update((t=>({swapsState:{...t.swapsState,...e.swapsState}})))})),this.messagingSystem.registerActionHandler("SwapsController:fetchAndSetQuotes",this.fetchAndSetQuotes.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSelectedQuoteAggId",this.setSelectedQuoteAggId.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:resetSwapsState",this.resetSwapsState.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsTokens",this.setSwapsTokens.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:clearSwapsQuotes",this.clearSwapsQuotes.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setApproveTxId",this.setApproveTxId.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setTradeTxId",this.setTradeTxId.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsTxGasPrice",this.setSwapsTxGasPrice.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsTxGasLimit",this.setSwapsTxGasLimit.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsTxMaxFeePerGas",this.setSwapsTxMaxFeePerGas.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsTxMaxFeePriorityPerGas",this.setSwapsTxMaxFeePriorityPerGas.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:safeRefetchQuotes",this.safeRefetchQuotes.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:stopPollingForQuotes",this.stopPollingForQuotes.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setBackgroundSwapRouteState",this.setBackgroundSwapRouteState.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:resetPostFetchState",this.resetPostFetchState.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsErrorKey",this.setSwapsErrorKey.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setInitialGasEstimate",this.setInitialGasEstimate.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setCustomApproveTxData",this.setCustomApproveTxData.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsLiveness",this.setSwapsLiveness.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsFeatureFlags",this.setSwapsFeatureFlags.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsUserFeeLevel",this.setSwapsUserFeeLevel.bind(this)),this.messagingSystem.registerActionHandler("SwapsController:setSwapsQuotesPollingLimitEnabled",this.setSwapsQuotesPollingLimitEnabled.bind(this)),this.getBufferedGasLimit=e.getBufferedGasLimit,this.trackMetaMetricsEvent=e.trackMetaMetricsEvent,this.resetState=()=>{this.update((e=>{e.swapsState={...(0,_.getDefaultSwapsControllerState)().swapsState,swapsFeatureFlags:null==e?void 0:e.swapsState.swapsFeatureFlags}}))},R(G,this,e.getEIP1559GasFeeEstimates),R(x,this,e.getLayer1GasFee),R(F,this,0),R(L,this,0),this._fetchTradesInfo=e.fetchTradesInfo||w.fetchTradesInfo}clearSwapsQuotes(){this.update((e=>{e.swapsState.quotes={},e.swapsState.selectedAggId=null,e.swapsState.topAggId=null}))}async fetchAndSetQuotes(e,t,s=!1){var a;if(!e)return null;let n;n=(null===(a=b(U,this))||void 0===a?void 0:a.clientId)===t.networkClientId?b(U,this):M(B,this,V).call(this,t.networkClientId);const{quotesPollingLimitEnabled:i,saveFetchedQuotes:o}=this.state.swapsState;s||R(L,this,0),b(D,this)&&clearTimeout(b(D,this)),s||this.setSwapsErrorKey("");const r=b(F,this)+1;R(F,this,r),o||this._setSaveFetchedQuotes(!0);let[l]=await Promise.all([this._fetchTradesInfo(e,{chainId:n.chainId}),this._setSwapsNetworkConfig(n)]);const{saveFetchedQuotes:u}=this.state.swapsState;if(!u)return[{},null];l=(0,c.mapValues)(l,(e=>({...e,sourceTokenInfo:null==t?void 0:t.sourceTokenInfo,destinationTokenInfo:null==t?void 0:t.destinationTokenInfo})));const d=n.chainId===h.CHAIN_IDS.OPTIMISM.toString(),p=n.chainId===h.CHAIN_IDS.BASE.toString();(d||p)&&Object.values(l).length>0&&await Promise.all(Object.values(l).map((async e=>{if(e.trade){const t=await b(x,this).call(this,{transactionParams:e.trade,networkClientId:n.clientId});e.multiLayerL1TradeFeeTotal=t}return e})));const m=Date.now();let g=!1;if(!(0,C.isSwapsDefaultTokenAddress)(e.sourceToken,n.chainId)&&Object.values(l).length){const t=await this._getERC20Allowance(e.sourceToken,e.fromAddress,n),[a]=Object.values(l);if(g=a.approvalNeeded&&(t.eq(0)||t.lt(a.sourceAmount))&&"wrappedNative"!==a.aggregator,g){if(!s&&a.approvalNeeded){const{gasLimit:e}=await this._timedoutGasReturn(a.approvalNeeded,a.aggregator);l=(0,c.mapValues)(l,(t=>t.approvalNeeded?{...t,approvalNeeded:{...t.approvalNeeded,gas:e||f.DEFAULT_ERC20_APPROVE_GAS}}:t))}}else l=(0,c.mapValues)(l,(e=>({...e,approvalNeeded:null})))}let S=null;if(g||null!=e&&e.balanceError||(l=await this._getAllQuotesWithGasEstimates(l)),0===Object.values(l).length)this.setSwapsErrorKey(f.QUOTES_NOT_AVAILABLE_ERROR);else{const e=await this.getTopQuoteWithCalculatedSavings({quotes:l});Array.isArray(e)&&(S=e[0],l=e[1])}if(b(F,this)!==r)throw new Error(f.SWAPS_FETCH_ORDER_CONFLICT);let{selectedAggId:w}=this.state.swapsState;return w&&l[w]||(w=null),this.update((s=>{s.swapsState.quotes=l,s.swapsState.fetchParams={...e,metaData:t},s.swapsState.quotesLastFetched=m,s.swapsState.selectedAggId=w,s.swapsState.topAggId=S})),i&&R(L,this,b(L,this)+1),!i||b(L,this)<_.POLL_COUNT_LIMIT+1?(this._pollForNewQuotes(),[l,S]):(this.resetPostFetchState(),this.setSwapsErrorKey(f.QUOTES_EXPIRED_ERROR),null)}async getTopQuoteWithCalculatedSavings({quotes:e,networkClientId:t}){var s;let a;if(t){const e=this.messagingSystem.call("NetworkController:getNetworkClientById",t);a=e.configuration.chainId}else{if(b(U,this)===undefined)throw new Error("There is no network set");a=b(U,this).chainId}const{marketData:n}=this._getTokenRatesState(),i=(null==n?void 0:n[a])??{},{customGasPrice:o,customMaxPriorityFeePerGas:l}=this.state.swapsState;if(0===Object.keys(e).length)return{};const p=(0,c.cloneDeep)(e),{gasFeeEstimates:h,gasEstimateType:m}=await b(G,this).call(this,{networkClientId:t});let f="0x0";if(m===d.GasEstimateTypes.feeMarket){const{high:{suggestedMaxPriorityFeePerGas:e},estimatedBaseFee:t}=h,s=(0,T.decGWEIToHexWEI)(Number(e)),a=new A.Numeric(t,10,u.EtherDenomination.GWEI).toDenomination(u.EtherDenomination.WEI);f=new A.Numeric(l||s,16).add(a).round(6).toString()}else m===d.GasEstimateTypes.legacy?f=o||(0,T.decGWEIToHexWEI)(Number(h.high)):m===d.GasEstimateTypes.ethGasPrice&&(f=o||(0,T.decGWEIToHexWEI)(Number(h.gasPrice)));let g,S="";Object.values(p).forEach((e=>{const{aggregator:t,approvalNeeded:s,averageGas:n,destinationAmount:o,destinationToken:l,destinationTokenInfo:c,gasEstimateWithRefund:d,sourceAmount:p,sourceToken:h,trade:m,fee:w,multiLayerL1TradeFeeTotal:I}=e;if(!m||!l)return;const P=(d?new r.BigNumber(d,16):new r.BigNumber(n||_.MAX_GAS_LIMIT,10)).plus((null==s?void 0:s.gas)||"0x0",16).toString(16);let v=(0,E.calcGasTotal)(P,f);null!==I&&(v=(0,T.sumHexes)(v||"0x0",I||"0x0"));const k=new A.Numeric(v,16,u.EtherDenomination.WEI).add(new A.Numeric(m.value,16,u.EtherDenomination.WEI)),y=k.toDenomination(u.EtherDenomination.ETH).round(6).value,b=(0,C.isSwapsDefaultTokenAddress)(h,a)?k.minus(new A.Numeric(p,10)).toDenomination(u.EtherDenomination.ETH).round(6).value:y,R=(0,E.calcTokenAmount)(o??"0",c.decimals),M=new r.BigNumber(100,10).minus(w,10).div(100),O=R.div(M).minus(R),F=Object.keys(i).find((e=>(0,N.isEqualCaseInsensitive)(e,l))),L=F?i[F]:null,D=(null==L?void 0:L.price)||1,G=R.times(D.toString(10),10),x=(0,C.isSwapsDefaultTokenAddress)(l,a)?1:null==L?void 0:L.price,U=x?G.minus(b,10):G;e.ethFee=b.toString(10),x&&(e.ethValueOfTokens=G.toString(10),e.overallValueOfQuote=U.toString(10),e.metaMaskFeeInEth=O.times(x.toString(10)).toString(10)),g&&!U.gt(g||0)||(S=t,g=U)}));const w=Object.keys(i).find((e=>{var t;return(0,N.isEqualCaseInsensitive)(e,null===(t=p[S])||void 0===t?void 0:t.destinationToken)})),P=w?i[w]:null;if((0,C.isSwapsDefaultTokenAddress)(null===(s=p[S])||void 0===s?void 0:s.destinationToken,a)||Boolean(null==P?void 0:P.price)){const e=p[S],{ethFee:t,metaMaskFeeInEth:s,ethValueOfTokens:a}=(0,I.getMedianEthValueQuote)(Object.values(p)),n=new r.BigNumber(e.ethValueOfTokens,10).minus(a,10).toString(10),i=new r.BigNumber(t).minus(e.ethFee,10).toString(10),o=e.metaMaskFeeInEth,l={performance:n,fee:i,total:new r.BigNumber(n).plus(i).minus(o).toString(10),metaMaskFee:o,medianMetaMaskFee:s};p[S].isBestQuote=!0,p[S].savings=l}return[S,p]}resetPostFetchState(){this.update((e=>{e.swapsState={...(0,_.getDefaultSwapsControllerState)().swapsState,tokens:e.swapsState.tokens,fetchParams:e.swapsState.fetchParams,swapsFeatureIsLive:e.swapsState.swapsFeatureIsLive,swapsQuoteRefreshTime:e.swapsState.swapsQuoteRefreshTime,swapsQuotePrefetchingRefreshTime:e.swapsState.swapsQuotePrefetchingRefreshTime,swapsFeatureFlags:e.swapsState.swapsFeatureFlags}})),b(D,this)&&clearTimeout(b(D,this))}resetSwapsState(){this.update((e=>{e.swapsState={...(0,_.getDefaultSwapsControllerState)().swapsState,swapsQuoteRefreshTime:e.swapsState.swapsQuoteRefreshTime,swapsQuotePrefetchingRefreshTime:e.swapsState.swapsQuotePrefetchingRefreshTime,swapsFeatureFlags:e.swapsState.swapsFeatureFlags}})),b(D,this)&&clearTimeout(b(D,this))}safeRefetchQuotes(){!b(D,this)&&this.state.swapsState.fetchParams&&this.fetchAndSetQuotes(this.state.swapsState.fetchParams,{...this.state.swapsState.fetchParams.metaData})}setApproveTxId(e){this.update((t=>{t.swapsState.approveTxId=e}))}setBackgroundSwapRouteState(e){this.update((t=>{t.swapsState.routeState=e}))}setCustomApproveTxData(e){this.update((t=>{t.swapsState.customApproveTxData=e}))}async setInitialGasEstimate(e){const t={...this.state.swapsState.quotes[e]},{gasLimit:s,simulationFails:a}=t.trade?await this._timedoutGasReturn(t.trade,t.aggregator):{gasLimit:null,simulationFails:!0};if(s&&!a){const e=(0,I.calculateGasEstimateWithRefund)(t.maxGas,t.estimatedRefund,s);t.gasEstimate=s,t.gasEstimateWithRefund=e}this.update((s=>{s.swapsState.quotes={...s.swapsState.quotes,[e]:t}}))}setSelectedQuoteAggId(e){this.update((t=>{t.swapsState.selectedAggId=e}))}setSwapsFeatureFlags(e){this.update((t=>{t.swapsState.swapsFeatureFlags=e}))}setSwapsErrorKey(e){this.update((t=>{t.swapsState.errorKey=e}))}setSwapsLiveness(e){const{swapsFeatureIsLive:t}=e;this.update((e=>{e.swapsState.swapsFeatureIsLive=t}))}setSwapsQuotesPollingLimitEnabled(e){this.update((t=>{t.swapsState.quotesPollingLimitEnabled=e}))}setSwapsTokens(e){this.update((t=>{t.swapsState.tokens=e}))}setSwapsTxGasLimit(e){this.update((t=>{t.swapsState.customMaxGas=e}))}setSwapsTxGasPrice(e){this.update((t=>{t.swapsState.customGasPrice=e}))}setSwapsTxMaxFeePerGas(e){this.update((t=>{t.swapsState.customMaxFeePerGas=e}))}setSwapsTxMaxFeePriorityPerGas(e){this.update((t=>{t.swapsState.customMaxPriorityFeePerGas=e}))}setSwapsUserFeeLevel(e){this.update((t=>{t.swapsState.swapsUserFeeLevel=e}))}setTradeTxId(e){this.update((t=>{t.swapsState.tradeTxId=e}))}stopPollingForQuotes(){b(D,this)&&clearTimeout(b(D,this))}async _fetchSwapsNetworkConfig(e){const t=await(0,S.default)({url:(0,w.getBaseApi)("network",e.chainId),fetchOptions:{method:"GET"},cacheOptions:{cacheRefreshTime:6e5},functionName:"_fetchSwapsNetworkConfig"}),{refreshRates:s,parameters:a={}}=t||{};if(!s||"number"!=typeof s.quotes||"number"!=typeof s.quotesPrefetching)throw new Error(`MetaMask - invalid response for refreshRates: ${t}`);return{quotes:1e3*s.quotes,quotesPrefetching:1e3*s.quotesPrefetching,stxGetTransactions:1e3*s.stxGetTransactions,stxBatchStatus:1e3*s.stxBatchStatus,stxStatusDeadline:s.stxStatusDeadline,stxMaxFeeMultiplier:a.stxMaxFeeMultiplier}}async _getAllQuotesWithGasEstimates(e){const t=await Promise.all(Object.values(e).map((async e=>{if(!e.trade)return{gasLimit:null,simulationFails:!0,aggId:e.aggregator};const{gasLimit:t,simulationFails:s}=await this._timedoutGasReturn(e.trade,e.aggregator);return{gasLimit:t,simulationFails:s,aggId:e.aggregator}}))),s={};return t.forEach((({gasLimit:t,simulationFails:a,aggId:n})=>{if(t&&!a){const a=(0,I.calculateGasEstimateWithRefund)(e[n].maxGas,e[n].estimatedRefund,t);s[n]={...e[n],gasEstimate:t,gasEstimateWithRefund:a}}else e[n].approvalNeeded&&(s[n]=e[n])})),s}async _getERC20Allowance(e,t,s){const n=new a.Contract(e,l.default,s.ethersProvider);return await n.allowance(t,f.SWAPS_CHAINID_CONTRACT_ADDRESS_MAP[s.chainId])}_getTokenRatesState(){const{marketData:e}=this.messagingSystem.call("TokenRatesController:getState");return{marketData:e}}_pollForNewQuotes(){const{swapsQuoteRefreshTime:e,swapsQuotePrefetchingRefreshTime:t,quotesPollingLimitEnabled:s}=this.state.swapsState;R(D,this,setTimeout((()=>{var e;this.fetchAndSetQuotes(this.state.swapsState.fetchParams,null===(e=this.state.swapsState.fetchParams)||void 0===e?void 0:e.metaData,!0)}),s?e:t))}_setSaveFetchedQuotes(e){this.update((t=>{t.swapsState.saveFetchedQuotes=e}))}async _setSwapsNetworkConfig(e){let t=null;try{t=await this._fetchSwapsNetworkConfig(e)}catch(e){console.error("Request for Swaps network config failed: ",e)}this.update((e=>{var s,a,n,i,o,r;e.swapsState.swapsQuoteRefreshTime=(null===(s=t)||void 0===s?void 0:s.quotes)||_.FALLBACK_QUOTE_REFRESH_TIME,e.swapsState.swapsQuotePrefetchingRefreshTime=(null===(a=t)||void 0===a?void 0:a.quotesPrefetching)||_.FALLBACK_QUOTE_REFRESH_TIME,e.swapsState.swapsStxGetTransactionsRefreshTime=(null===(n=t)||void 0===n?void 0:n.stxGetTransactions)||m.FALLBACK_SMART_TRANSACTIONS_REFRESH_TIME,e.swapsState.swapsStxBatchStatusRefreshTime=(null===(i=t)||void 0===i?void 0:i.stxBatchStatus)||m.FALLBACK_SMART_TRANSACTIONS_REFRESH_TIME,e.swapsState.swapsStxMaxFeeMultiplier=(null===(o=t)||void 0===o?void 0:o.stxMaxFeeMultiplier)||m.FALLBACK_SMART_TRANSACTIONS_MAX_FEE_MULTIPLIER,e.swapsState.swapsStxStatusDeadline=(null===(r=t)||void 0===r?void 0:r.stxStatusDeadline)||m.FALLBACK_SMART_TRANSACTIONS_DEADLINE}))}_timedoutGasReturn(e,t=""){return new Promise((s=>{let a=!1;const n=setTimeout((()=>{a=!0,this.trackMetaMetricsEvent({event:p.MetaMetricsEventName.QuoteError,category:p.MetaMetricsEventCategory.Swaps,properties:{error_type:p.MetaMetricsEventErrorType.GasTimeout,aggregator:t}}),s({gasLimit:null,simulationFails:!0})}),5*g.SECOND),i={data:e.data,from:e.from,to:e.to,value:e.value};this.getBufferedGasLimit({txParams:i},1).then((({gasLimit:e,simulationFails:t})=>{a||(clearTimeout(n),s({gasLimit:e,simulationFails:t}))})).catch((e=>{(0,o.captureException)(e,{extra:{aggregator:t}}),a||(clearTimeout(n),s({gasLimit:null,simulationFails:!0}))}))}))}}function V(e){const t=this.messagingSystem.call("NetworkController:getNetworkClientById",e),{chainId:s}=t.configuration,a={client:t,clientId:e,chainId:s,ethersProvider:new n.Web3Provider(t.provider)};return R(U,this,a),a}s.default=H}}},{package:"$root$",file:"app/scripts/controllers/swaps/index.ts"}],[94,{"../../../../shared/constants/smartTransactions":5605,"../../../../shared/constants/time":5609},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.controllerName=s.POLL_COUNT_LIMIT=s.MAX_GAS_LIMIT=s.FALLBACK_QUOTE_REFRESH_TIME=void 0,s.getDefaultSwapsControllerState=function(){return{swapsState:{quotes:{},quotesPollingLimitEnabled:!1,fetchParams:null,tokens:null,tradeTxId:null,approveTxId:null,quotesLastFetched:null,customMaxGas:"",customGasPrice:null,customMaxFeePerGas:null,customMaxPriorityFeePerGas:null,swapsUserFeeLevel:"",selectedAggId:null,customApproveTxData:"",errorKey:"",topAggId:null,routeState:"",swapsFeatureIsLive:!0,saveFetchedQuotes:!1,swapsQuoteRefreshTime:i,swapsQuotePrefetchingRefreshTime:i,swapsStxBatchStatusRefreshTime:a.FALLBACK_SMART_TRANSACTIONS_REFRESH_TIME,swapsStxStatusDeadline:a.FALLBACK_SMART_TRANSACTIONS_DEADLINE,swapsStxGetTransactionsRefreshTime:a.FALLBACK_SMART_TRANSACTIONS_REFRESH_TIME,swapsStxMaxFeeMultiplier:a.FALLBACK_SMART_TRANSACTIONS_MAX_FEE_MULTIPLIER,swapsFeatureFlags:{}}}};var a=e("../../../../shared/constants/smartTransactions"),n=e("../../../../shared/constants/time");s.controllerName="SwapsController",s.MAX_GAS_LIMIT=25e5,s.POLL_COUNT_LIMIT=3;const i=s.FALLBACK_QUOTE_REFRESH_TIME=n.MINUTE}}},{package:"$root$",file:"app/scripts/controllers/swaps/swaps.constants.ts"}],[95,{"./swaps.constants":94,"bignumber.js":3840},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateGasEstimateWithRefund=function(e=n.MAX_GAS_LIMIT,t="0",s="0"){const i=new a.BigNumber(e,10).minus(t,10),o=i.lt(0);return!o&&i.lt(s,16)?`0x${i.toString(16)}`:s},s.getMedianEthValueQuote=function(e){if(!Array.isArray(e)||0===e.length)throw new Error("Expected non-empty array param.");const t=[...e];if(t.sort(((e,t)=>{const s=new a.BigNumber(e.overallValueOfQuote,10),n=new a.BigNumber(t.overallValueOfQuote,10);return s.equals(n)?0:s.lessThan(n)?-1:1})),t.length%2==1){const e=t[(t.length-1)/2].overallValueOfQuote;return i(t.filter((t=>e===t.overallValueOfQuote)))}const s=t.length/2,n=s-1,o=t[s].overallValueOfQuote,r=t[n].overallValueOfQuote,l=t.filter((e=>o===e.overallValueOfQuote)),c=t.filter((e=>r===e.overallValueOfQuote)),u=i(l),d=i(c);return{ethFee:new a.BigNumber(u.ethFee,10).plus(d.ethFee,10).dividedBy(2).toString(10),metaMaskFeeInEth:new a.BigNumber(u.metaMaskFeeInEth,10).plus(d.metaMaskFeeInEth,10).dividedBy(2).toString(10),ethValueOfTokens:new a.BigNumber(u.ethValueOfTokens,10).plus(d.ethValueOfTokens,10).dividedBy(2).toString(10)}},s.meansOfQuotesFeesAndValue=i;var a=e("bignumber.js"),n=e("./swaps.constants");function i(e){const t=e.reduce(((e,t)=>({ethFee:e.ethFee.plus(t.ethFee,10),metaMaskFeeInEth:e.metaMaskFeeInEth.plus(t.metaMaskFeeInEth,10),ethValueOfTokens:e.ethValueOfTokens.plus(t.ethValueOfTokens,10)})),{ethFee:new a.BigNumber(0,10),metaMaskFeeInEth:new a.BigNumber(0,10),ethValueOfTokens:new a.BigNumber(0,10)});return{ethFee:t.ethFee.div(e.length,10).toString(10),metaMaskFeeInEth:t.metaMaskFeeInEth.div(e.length,10).toString(10),ethValueOfTokens:t.ethValueOfTokens.div(e.length,10).toString(10)}}}}},{package:"$root$",file:"app/scripts/controllers/swaps/swaps.utils.ts"}],[96,{"../../shared/constants/app":5582,"./lib/util":204,"webextension-polyfill":5559},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.onMessageReceived=s.checkForMultipleVersionsRunning=void 0;var a,n=(a=e("webextension-polyfill"))&&a.__esModule?a:{default:a},i=e("../../shared/constants/app"),o=e("./lib/util");const r="isRunning";s.onMessageReceived=e=>{e===r&&console.warn("Warning! You have multiple instances of MetaMask running!")};s.checkForMultipleVersionsRunning=async()=>{if((0,o.getPlatform)()!==i.PLATFORM_CHROME&&(0,o.getPlatform)()!==i.PLATFORM_FIREFOX)return;const e=(0,o.getPlatform)()===i.PLATFORM_CHROME?i.CHROME_BUILD_IDS:i.FIREFOX_BUILD_IDS,t=n.default.runtime.id;for(const s of e)if(s!==t)try{await n.default.runtime.sendMessage(s,r)}catch(e){}}}}},{package:"$root$",file:"app/scripts/detect-multiple-instances.js"}],[97,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=void 0;s.default={config:{}}}}},{package:"$root$",file:"app/scripts/first-time-state.js"}],[98,{"../../../shared/notifications":5673,"../../../test/e2e/default-fixture":5679,"../../../test/e2e/fixture-builder":5680,"../lib/encryptor-factory":130,"./with-address-book":99,"./with-app-state":100,"./with-confirmed-transactions":101,"./with-erc20-tokens":102,"./with-networks":103,"./with-preferences":104,"./with-unread-notifications":105,"@metamask/base-controller":1365,"@metamask/keyring-controller":1965,"@metamask/scure-bip39/dist/wordlists/english":2408,buffer:3936},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.generateWalletState=async function(){const e=new c.default({inputChainId:"0xaa36a7"}),{vault:s,accounts:a}=await async function(e,s){const a=(new n.Messenger).getRestricted({name:"KeyringController"}),r=new i.KeyringController({encryptor:(0,u.encryptorFactory)(6e5),messenger:a}),l=t.from(e),c=e=>{const t=e.toString().split(" ").map((e=>o.wordlist.indexOf(e)));return new Uint8Array(new Uint16Array(t).buffer)};await r.createNewVaultAndRestore(s,c(l));const d=[],p=r.state.keyrings[0].accounts[0];d.push(p);for(let e=1;e<w.withAccounts;e++){const t=await r.addNewAccount(e);d.push(t)}const{vault:h}=r.state;return{vault:h,accounts:d}}(l.E2E_SRP,null);return e.withAccountsController(function(e){console.log("Generating AccountsController state");const t={selectedAccount:"account-id",accounts:{}};return e.forEach(((e,s)=>{t.accounts[`acount-id-${s}`]={selectedAccount:"account-id",id:"account-id",address:e,metadata:{name:`Account ${s+1}`,lastSelected:16655076e5,keyring:{type:"HD Key Tree"}},options:{},methods:["personal_sign","eth_signTransaction","eth_signTypedData_v1","eth_signTypedData_v3","eth_signTypedData_v4"],type:"eip155:eoa"}})),{internalAccounts:t}}(a)).withAddressBookController(function(){console.log("Generating AddressBookController state");const e=w.withContacts;if(e>0)return(0,f.withAddressBook)(e);return{}}()).withAnnouncementController(function(){console.log("Generating AnnouncementController state");return Object.keys(r.UI_NOTIFICATIONS).reduce(((e,t)=>(e[t]={...r.UI_NOTIFICATIONS[t],isShown:!0},e)),{})}()).withAppStateController(d.FIXTURES_APP_STATE).withKeyringController(function(e){return console.log("Generating KeyringController state"),{...(0,l.defaultFixture)().data.KeyringController,vault:e}}(s)).withNetworkController(function(){console.log("Generating NetworkController state");const e={...(0,l.defaultFixture)().data.NetworkController,networkConfigurations:{},networksMetadata:{sepolia:{EIPS:{1559:!0},status:"available"}},selectedNetworkClientId:"sepolia"};if(w.withNetworks)return{...e,...p.FIXTURES_NETWORKS};return e}()).withNotificationServicesController(function(e){console.log("Generating NotificationController state");let t={};w.withUnreadNotifications>0&&(t=(0,S.withUnreadNotifications)(e,w.withUnreadNotifications));return t}(a[0])).withPreferencesController(function(e){console.log("Generating PreferencesController state");let t={};w.withPreferences&&(t=h.FIXTURES_PREFERENCES);return t.identities=Object.assign(...e.map(((e,t)=>({[e]:{address:e,lastSelected:1725363500048,name:`Account ${t+1}`}})))),t.lostIdentities=Object.assign(...e.map(((e,t)=>({[e]:{address:e,lastSelected:1725363500048,name:`Account ${t+1}`}})))),t}(a)).withTokensController(function(e){console.log("Generating TokensController state");const t=m.FIXTURES_ERC20_TOKENS;if(w.withErc20Tokens){for(const s of Object.values(t.allTokens))s[e]=s.myAccount,delete s.myAccount;return t}return{}}(a[0])).withTransactionController(function(e){console.log("Generating TransactionController state");let t={};w.withConfirmedTransactions>0&&(t=(0,g.withConfirmedTransactions)(e,w.withConfirmedTransactions));return t}(a[0])),e.fixture.data};var a,n=e("@metamask/base-controller"),i=e("@metamask/keyring-controller"),o=e("@metamask/scure-bip39/dist/wordlists/english"),r=e("../../../shared/notifications"),l=e("../../../test/e2e/default-fixture"),c=(a=e("../../../test/e2e/fixture-builder"))&&a.__esModule?a:{default:a},u=e("../lib/encryptor-factory"),d=e("./with-app-state"),p=e("./with-networks"),h=e("./with-preferences"),m=e("./with-erc20-tokens"),f=e("./with-address-book"),g=e("./with-confirmed-transactions"),S=e("./with-unread-notifications");const w={}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"$root$",file:"app/scripts/fixtures/generate-wallet-state.js"}],[99,{"../../../shared/constants/network":5596},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.withAddressBook=void 0;var a=e("../../../shared/constants/network");const n=()=>{let e="0x";for(let t=0;t<40;t++)e+="0123456789abcdef"[Math.floor(16*Math.random())];return e};s.withAddressBook=e=>{const t=[a.CHAIN_IDS.MAINNET,a.CHAIN_IDS.SEPOLIA],s={};return t.forEach((t=>{s[t]={};for(let a=1;a<=e;a++){const e=n();s[t][e]={address:e,chainId:t,isEns:!1,memo:"",name:`Contact ${a}`}}})),{addressBook:s}}}}},{package:"$root$",file:"app/scripts/fixtures/with-address-book.js"}],[4,{"../../shared/constants/app":5582,"../../shared/constants/metametrics":5593,"../../shared/constants/offscreen-communication":5598,"../../shared/modules/browser-runtime.utils":5646,"../../shared/modules/caip-stream":5647,"../../shared/modules/fetch-with-timeout":5653,"../../shared/modules/mv3.utils":5658,"../../shared/modules/object.utils":5660,"../../shared/modules/selectors/networks":5666,"../../test/e2e/background-socket/socket-background-to-mocha":5677,"../../test/e2e/default-fixture":5679,"../../test/stub/keyring-bridge":5685,"./constants/marketing-site-whitelist":6,"./constants/sentry-state":7,"./constants/snaps":8,"./constants/stream":9,"./first-time-state":97,"./fixtures/generate-wallet-state":98,"./lib/createStreamSink":127,"./lib/ens-ipfs/setup":134,"./lib/get-first-preferred-lang-code":136,"./lib/getObjStructure":137,"./lib/migrator":141,"./lib/notification-manager":143,"./lib/setup-initial-state-hooks":173,"./lib/stores/extension-store":186,"./lib/stores/persistence-manager":187,"./lib/stores/read-only-network-store":188,"./lib/stream-utils":189,"./lib/util":204,"./metamask-controller":205,"./migrations":382,"./offscreen":383,"./platforms/extension":384,"@metamask/notification-services-controller":2251,"@metamask/obs-store":2264,"@metamask/utils":2815,"debounce-stream":4085,events:4262,"extension-port-stream":4265,loglevel:4726,"readable-stream":5137,"webextension-polyfill":5559},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.loadStateFromPersistence=Ce,s.setupController=ve,s.statePersistenceEvents=void 0,e("./lib/setup-initial-state-hooks");var a=B(e("events")),n=e("readable-stream"),i=B(e("debounce-stream")),o=B(e("loglevel")),r=B(e("webextension-polyfill")),l=e("@metamask/obs-store"),c=e("@metamask/utils"),u=B(e("extension-port-stream")),d=e("@metamask/notification-services-controller"),p=e("../../shared/constants/app"),h=e("../../shared/constants/metametrics"),m=e("../../shared/modules/browser-runtime.utils"),f=e("../../shared/modules/mv3.utils"),g=e("../../shared/modules/object.utils"),S=(e("../../test/e2e/default-fixture"),e("../../test/e2e/background-socket/socket-background-to-mocha"),e("../../shared/constants/offscreen-communication"),e("../../test/stub/keyring-bridge")),w=e("../../shared/modules/selectors/networks"),E=(e("../../shared/modules/caip-stream"),B(e("../../shared/modules/fetch-with-timeout"))),T=e("./lib/stores/persistence-manager"),A=B(e("./lib/stores/extension-store")),N=B(e("./lib/stores/read-only-network-store")),C=B(e("./migrations")),_=B(e("./lib/migrator")),I=B(e("./platforms/extension")),P=e("./constants/sentry-state"),v=B(e("./lib/createStreamSink")),k=U(e("./lib/notification-manager")),y=U(e("./metamask-controller")),b=B(e("./lib/get-first-preferred-lang-code")),R=B(e("./lib/getObjStructure")),M=B(e("./lib/ens-ipfs/setup")),O=e("./lib/util"),F=e("./offscreen"),L=(e("./lib/stream-utils"),e("./fixtures/generate-wallet-state"),B(e("./first-time-state"))),D=e("./constants/marketing-site-whitelist"),G=(e("./constants/stream"),e("./constants/snaps"));function x(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,s=new WeakMap;return(x=function(e){return e?s:t})(e)}function U(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var s=x(t);if(s&&s.has(e))return s.get(e);var a={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&{}.hasOwnProperty.call(e,i)){var o=n?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(a,i,o):a[i]=e[i]}return a.default=e,s&&s.set(e,a),a}function B(e){return e&&e.__esModule?e:{default:e}}const H="#0376C9",V="#D73847",j=9,Q=!1,W=new _.default({migrations:C.default,defaultVersion:null}),K=Q?new N.default:new A.default,$=new T.PersistenceManager({localStore:K});global.stateHooks.getMostRecentPersistedState=()=>$.mostRecentRetrievedState;const{sentry:q}=global;let Y={...L.default};const X={[p.ENVIRONMENT_TYPE_POPUP]:!0,[p.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[p.ENVIRONMENT_TYPE_FULLSCREEN]:!0},z=["trezor-connect"];o.default.setLevel("info",!1);const J=new I.default,Z=new k.default,ee=(0,O.getPlatform)()===p.PLATFORM_FIREFOX;let te=0,se=!1,ae=!1;const ne={},ie={};let oe;const re={};Q&&(global.stateHooks.metamaskGetState=$.get.bind($));const le=new URL("https://metamask.github.io/phishing-warning/v4.1.0/"),ce=le.toString(),ue=1e3,de=s.statePersistenceEvents=new a.default;if(f.isManifestV3)globalThis.stateHooks.metamaskWasJustInstalled?(be(),delete globalThis.stateHooks.metamaskWasJustInstalled):globalThis.stateHooks.metamaskTriggerOnInstall=()=>be();else{const e=t=>{"install"===t.reason&&(be(),r.default.runtime.onInstalled.removeListener(e))};r.default.runtime.onInstalled.addListener(e)}const{promise:pe,resolve:he,reject:me}=(0,O.deferredPromise)(),fe=async()=>{const e=await r.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,m.checkForLastErrorAndLog)(),e))).catch((()=>{(0,m.checkForLastErrorAndLog)()}));for(const t of e)r.default.tabs.sendMessage(t.id,{name:p.EXTENSION_MESSAGES.READY}).then((()=>{(0,m.checkForLastErrorAndLog)()})).catch((()=>{(0,m.checkForLastErrorAndLog)()}))};let ge,Se,we,Ee;function Te(){const e=(new Date).toISOString();r.default.storage.session.set({timestamp:e})}async function Ae(){try{const t=f.isManifestV3?(0,F.createOffscreen)():null,s=await Ce(),a=s.data,n=await(0,b.default)();let i;if(f.isManifestV3){var e;if(!1!==(null===(e=a.PreferencesController)||void 0===e?void 0:e.enableMV3TimestampSave)){const e=2e3;Te(),setInterval(Te,e)}const t=await r.default.storage.session.get(["isFirstMetaMaskControllerSetup"]);i=(null==t?void 0:t.isFirstMetaMaskControllerSetup)===undefined,await r.default.storage.session.set({isFirstMetaMaskControllerSetup:i})}const l=Q?{keyrings:{trezorBridge:S.FakeTrezorBridge,ledgerBridge:S.FakeLedgerBridge}}:{},c=await async function(){const e=(0,E.default)(),t=G.PREINSTALLED_SNAPS_URLS.map((async t=>{const s=await e(t);return await s.json()}));return Promise.all(t)}();ve(a,n,l,i,s.meta,t,c),function(e){async function t(e,t){try{return await r.default.tabs.update(e,{url:t})}catch(e){return null==q?void 0:q.captureException(e)}}const s=!f.isManifestV3;r.default.webRequest.onBeforeRequest.addListener((a=>{var n,i,o;if(a.tabId===r.default.tabs.TAB_ID_NONE)return{};const{completedOnboarding:l}=e.onboardingController.state;if(!l)return{};if(!e.preferencesController.state.usePhishDetect)return{};if(a.initiator&&"null"!==a.initiator&&new URL(a.initiator).host===le.host)return{};const{hostname:c,href:u,searchParams:d}=new URL(a.url);if(Q&&d.has("IN_TEST_BYPASS_EARLY_PHISHING_DETECTION"))return{};e.phishingController.maybeUpdateState();const p=e.phishingController.isBlockedRequest(a.url);let m,f;if("main_frame"!==a.type&&"sub_frame"!==a.type||(m=e.phishingController.test(a.url)),!(null!==(n=m)&&void 0!==n&&n.result||p.result))return{};let g=c;null!==(i=m)&&void 0!==i&&i.result&&p.result?f=`${m.type} and ${p.type}`:null!==(o=m)&&void 0!==o&&o.result?f=m.type:(f=p.type,g=a.initiator),e.metaMetricsController.trackEvent({event:h.MetaMetricsEventName.PhishingPageDisplayed,category:h.MetaMetricsEventCategory.Phishing,properties:{url:g,referrer:{url:g},reason:f,requestDomain:p.result?c:undefined}});const S=new URLSearchParams({hostname:c,href:u}),w=new URL(ce);w.hash=S.toString();const E=w.toString();return s?"main_frame"===a.type?{redirectUrl:E}:(t(a.tabId,E),{cancel:!0}):(t(a.tabId,E),{})}),{urls:["http://*/*","https://*/*","ws://*/*","wss://*/*"]},s?["blocking"]:[])}(oe),f.isManifestV3||await async function(){let e;try{const t=new URL(ce);let s,a;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const n=new Promise(((e,t)=>{s=e,a=t}));e.addEventListener("load",s),window.document.body.appendChild(e),setTimeout((()=>a(new Ne)),ue),await n}catch(e){e instanceof Ne?console.warn("Phishing warning page timeout; page not guaranteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await fe(),o.default.info("MetaMask initialization complete."),he()}catch(e){me(e)}}r.default.runtime.onConnect.addListener((async(...e)=>{await pe,ge(...e)})),r.default.runtime.onConnectExternal.addListener((async(...e)=>{await pe,Se(...e)}));class Ne extends Error{constructor(){super("Timeout failed")}}async function Ce(){W.on("error",console.warn);const e=await $.get()||W.generateInitialState(Y);W.on("error",(t=>{const s=(0,R.default)(e);q.captureException(t,{extra:{vaultStructure:s}})}));const t=await W.migrateData(e);if(!t)throw new Error("MetaMask - migrator returned undefined");if(!(0,c.isObject)(t.meta))throw new Error(`MetaMask - migrator metadata has invalid type '${typeof t.meta}'`);if("number"!=typeof t.meta.version)throw new Error(`MetaMask - migrator metadata version has invalid type '${typeof t.meta.version}'`);if(!(0,c.isObject)(t.data))throw new Error(`MetaMask - migrator data has invalid type '${typeof t.data}'`);return $.setMetadata(t.meta),$.set(t.data),t}function _e(e){const{metaMetricsId:t}=oe.metaMetricsController.state;if(!(0,O.shouldEmitDappViewedEvent)(t))return;const s=oe.getPermittedAccounts(e).length;if(0===s)return;const a=oe.controllerMessenger.call("PreferencesController:getState"),n=Object.keys(a.identities).length;oe.metaMetricsController.trackEvent({event:h.MetaMetricsEventName.DappViewed,category:h.MetaMetricsEventCategory.InpageProvider,referrer:{url:e},properties:{is_first_visit:!1,number_of_accounts:n,number_of_accounts_connected:s}})}function Ie(e){if(!e.sender||!e.sender.tab||!e.sender.url)return;const t=e.sender.tab.id,s=new URL(e.sender.url),{origin:a}=s;Object.keys(re).includes(t)||(re[t]=a);const n=oe.controllerMessenger.call("PermissionController:hasPermissions",a),i="New Tab"!==e.sender.tab.title;n&&i&&_e(a)}function Pe(e){const t=[p.ENVIRONMENT_TYPE_POPUP,p.ENVIRONMENT_TYPE_NOTIFICATION,p.ENVIRONMENT_TYPE_FULLSCREEN];!(Object.values(ne).some(Boolean)||se||te>0)&&t.includes(e)&&function(){const{metaMetricsId:e,participateInMetaMetrics:t}=oe.metaMetricsController.state;(null!==e||t)&&oe.metaMetricsController.trackEvent({event:h.MetaMetricsEventName.AppOpened,category:h.MetaMetricsEventCategory.App})}()}function ve(e,t,s,a,c,m,S){var E;oe=new y.default({infuraProjectId:"14ee510e77bf41c4a69098ddf11bda1d",showUserConfirmation:ke,initState:e,initLangCode:t,platform:J,notificationManager:Z,browser:r.default,getRequestAccountTabIds:()=>ie,getOpenMetamaskTabsIds:()=>ne,persistenceManager:$,overrides:s,isFirstMetaMaskControllerSetup:a,currentMigrationVersion:c.version,featureFlags:{},offscreenPromise:m,preinstalledSnaps:S}),(0,M.default)({getCurrentChainId:()=>(0,w.getCurrentChainId)({metamask:oe.networkController.state}),getIpfsGateway:oe.preferencesController.getIpfsGateway.bind(oe.preferencesController),getUseAddressBarEnsResolution:()=>oe.preferencesController.state.useAddressBarEnsResolution,provider:oe.provider}),(0,n.pipeline)((0,l.storeAsStream)(oe.store),(0,i.default)(1e3),(0,v.default)((async e=>{await $.set(e),de.emit("state-persisted",e)})),(e=>{o.default.error("MetaMask - Persistence pipeline failed",e)})),E=oe,global.stateHooks.getSentryAppState=function(){const e=E.memStore.getState();return(0,g.maskObject)(e,P.SENTRY_BACKGROUND_STATE)};const T=()=>te>0||Boolean(Object.keys(ne).length)||se,A=(e,t)=>{if(!1===e)oe.onClientClosed();else{if(t===p.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(ne).length))return;oe.onEnvironmentTypeClosed(t)}};function N(e,t){return e>t?`${t}+`:String(e)}function C(){const e=_(),t=function(){try{const{isNotificationServicesEnabled:e,isFeatureAnnouncementsEnabled:t}=oe.notificationServicesController.state,s=Object.values(oe.notificationServicesController.state.metamaskNotificationsList).filter((e=>e.type===d.NotificationServicesController.Constants.TRIGGER_TYPES.SNAP&&null===e.readDate)).length,a=t?oe.notificationServicesController.state.metamaskNotificationsList.filter((e=>!e.isRead&&e.type===d.NotificationServicesController.Constants.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT)).length:0,n=e?oe.notificationServicesController.state.metamaskNotificationsList.filter((e=>!e.isRead&&e.type!==d.NotificationServicesController.Constants.TRIGGER_TYPES.FEATURES_ANNOUNCEMENT&&e.type!==d.NotificationServicesController.Constants.TRIGGER_TYPES.SNAP)).length:0;return s+a+n}catch(e){return console.error("Failed to get unread notifications count:",e),0}}();let s="",a=H;e?s=N(e,j):t>0&&(s=N(t,j),a=V);try{const e={text:s},t={color:a};f.isManifestV3?(r.default.action.setBadgeText(e),r.default.action.setBadgeBackgroundColor(t)):(r.default.browserAction.setBadgeText(e),r.default.browserAction.setBadgeBackgroundColor(t))}catch(e){console.error("Error updating browser badge:",e)}}function _(){try{return oe.appStateController.waitingForUnlock.length+oe.approvalController.getTotalApprovalCount()}catch(e){return console.error("Failed to get pending approval count:",e),0}}ge=e=>{var t;const a=e.name;if(z.includes(e.name))return;let i=!1;const l=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(i=ee?X[a]:(null==l?void 0:l.origin)===`chrome-extension://${r.default.runtime.id}`,i){var c;const t=(null==s||null===(c=s.getPortStream)||void 0===c?void 0:c.call(s,e))||new u.default(e);if(oe.isClientOpen=!0,oe.setupTrustedCommunication(t,e.sender),Pe(a),async function(){try{await oe.remoteFeatureFlagController.updateRemoteFeatureFlags()}catch(e){o.default.error("Error initializing remote feature flags:",e)}}(),a===p.ENVIRONMENT_TYPE_POPUP&&(te+=1,(0,n.finished)(t,(()=>{te-=1;const e=T();oe.isClientOpen=e,A(e,p.ENVIRONMENT_TYPE_POPUP)}))),a===p.ENVIRONMENT_TYPE_NOTIFICATION&&(se=!0,(0,n.finished)(t,(()=>{se=!1;const e=T();oe.isClientOpen=e,A(e,p.ENVIRONMENT_TYPE_NOTIFICATION)}))),a===p.ENVIRONMENT_TYPE_FULLSCREEN){const s=e.sender.tab.id;ne[s]=!0,(0,n.finished)(t,(()=>{delete ne[s];const e=T();oe.isClientOpen=e,A(e,p.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(l&&l.origin===le.origin&&l.pathname===le.pathname){var d;const t=(null==s||null===(d=s.getPortStream)||void 0===d?void 0:d.call(s,e))||new u.default(e);oe.setupPhishingCommunication({connectionStream:t})}else{var h;if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,s=new URL(e.sender.url),{origin:a}=s;Ie(e),e.onMessage.addListener((e=>{e.data&&e.data.method===p.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS&&(ie[a]=t)}))}if(l&&D.COOKIE_ID_MARKETING_WHITELIST_ORIGINS.some((e=>e===l.origin))){var m;const t=(null==s||null===(m=s.getPortStream)||void 0===m?void 0:m.call(s,e))||new u.default(e);oe.setUpCookieHandlerCommunication({connectionStream:t})}const t=(null==s||null===(h=s.getPortStream)||void 0===h?void 0:h.call(s,e))||new u.default(e);we(t,e.sender)}},Se=e=>{var t,a;const n=(null==s||null===(t=s.getPortStream)||void 0===t?void 0:t.call(s,e))||new u.default(e);null===(a=e.sender.tab)||void 0===a||a.id;we(n,e.sender)},we=(e,t)=>{oe.setupUntrustedCommunicationEip1193({connectionStream:e,sender:t})},Ee=(e,t)=>{},null!=s&&s.registerConnectListeners&&s.registerConnectListeners(ge,we),C(),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.DECRYPT_MESSAGE_MANAGER_UPDATE_BADGE,C),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.ENCRYPTION_PUBLIC_KEY_MANAGER_UPDATE_BADGE,C),oe.signatureController.hub.on(y.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.APP_STATE_UNLOCK_CHANGE,C),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,C),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.METAMASK_NOTIFICATIONS_LIST_UPDATED,C),oe.controllerMessenger.subscribe(y.METAMASK_CONTROLLER_EVENTS.METAMASK_NOTIFICATIONS_MARK_AS_READ,C),Z.on(k.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?_()>0&&ke():(oe.signatureController.rejectUnapproved(h.REJECT_NOTIFICATION_CLOSE_SIG),oe.decryptMessageController.rejectUnapproved(h.REJECT_NOTIFICATION_CLOSE),oe.encryptionPublicKeyController.rejectUnapproved(h.REJECT_NOTIFICATION_CLOSE),oe.rejectAllPendingApprovals()),C()})),Object.values(oe.snapController.state.snaps).some((e=>!e.preinstalled))&&oe.snapController.updateBlockedSnaps()}async function ke(){const e=await J.getActiveTabs(),t=Boolean(e.find((e=>ne[e.id]))),s=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!ae&&(s||0===te)&&!t){ae=!0;try{const e=oe.appStateController.getCurrentPopupId();await Z.showPopup((e=>oe.appStateController.setCurrentPopupId(e)),e)}finally{ae=!1}}}const ye=()=>{if(oe)return oe.metaMetricsController.updateTraits({[h.MetaMetricsUserTrait.InstallDateExt]:(new Date).toISOString().split("T")[0]}),void oe.metaMetricsController.addEventBeforeMetricsOptIn({category:h.MetaMetricsEventCategory.App,event:h.MetaMetricsEventName.AppInstalled,properties:{}});setTimeout((()=>{ye()}),500)};function be(){o.default.debug("First install detected"),ye(),J.openExtensionInBrowser()}(async function(){r.default.tabs.onActivated.addListener((e=>{if(oe){const{tabId:t}=e,s=re[t];s&&oe.permissionController.state.subjects[s]!==undefined&&_e(s)}}));try{await Ae(),$.cleanUpMostRecentRetrievedState()}catch(e){o.default.error(e)}})()}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});