LavaPack.loadBundle([[1,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={QRHardwareInvalidTransactionTitle:{message:"Error"},QRHardwareMismatchedSignId:{message:"Incongruent transaction data. Please check the transaction details."},QRHardwarePubkeyAccountOutOfRange:{message:"No more accounts. If you would like to access another account unlisted below, please reconnect your hardware wallet and select it."},QRHardwareScanInstructions:{message:"Place the QR code in front of your camera. The screen is blurred, but it will not affect the reading."},QRHardwareSignRequestCancel:{message:"Reject"},QRHardwareSignRequestDescription:{message:"After you’ve signed with your wallet, click on 'Get Signature' to receive the signature"},QRHardwareSignRequestGetSignature:{message:"Get signature"},QRHardwareSignRequestSubtitle:{message:"Scan the QR code with your wallet"},QRHardwareSignRequestTitle:{message:"Request signature"},QRHardwareUnknownQRCodeTitle:{message:"Error"},QRHardwareUnknownWalletQRCode:{message:"Invalid QR code. Please scan the sync QR code of the hardware wallet."},QRHardwareWalletImporterTitle:{message:"Scan QR code"},QRHardwareWalletSteps1Description:{message:"You can choose from a list of official QR-code supporting partners below."},QRHardwareWalletSteps1Title:{message:"Connect your QR hardware wallet"},QRHardwareWalletSteps2Description:{message:"Ngrave Zero"},SrpListHideAccounts:{message:"Hide $1 accounts",description:"$1 is the number of accounts"},SrpListHideSingleAccount:{message:"Hide 1 account"},SrpListShowAccounts:{message:"Show $1 accounts",description:"$1 is the number of accounts"},SrpListShowSingleAccount:{message:"Show 1 account"},about:{message:"About"},accept:{message:"Accept"},acceptTermsOfUse:{message:"I have read and agree to the $1",description:"$1 is the `terms` message"},accessYourWalletWithSRP:{message:"Access your wallet with your Secret Recovery Phrase"},accessYourWalletWithSRPDescription:{message:"MetaMask cannot recover your password. We will use your Secret Recovery Phrase to validate your ownership, restore your wallet and set up a new password. First, enter the Secret Recovery Phrase that you were given when you created your wallet. $1",description:"$1 is the words 'Learn More' from key 'learnMore', separated here so that it can be added as a link"},accessingYourCamera:{message:"Accessing your camera..."},account:{message:"Account"},accountActivity:{message:"Account activity"},accountActivityText:{message:"Select the accounts you want to be notified about:"},accountDetails:{message:"Account details"},accountIdenticon:{message:"Account identicon"},accountIsntConnectedToastText:{message:"$1 isn't connected to $2"},accountName:{message:"Account name"},accountNameDuplicate:{message:"This account name already exists",description:"This is an error message shown when the user enters a new account name that matches an existing account name"},accountNameReserved:{message:"This account name is reserved",description:"This is an error message shown when the user enters a new account name that is reserved for future use"},accountOptions:{message:"Account options"},accountPermissionToast:{message:"Account permissions updated"},accountSelectionRequired:{message:"You need to select an account!"},accountTypeNotSupported:{message:"Account type not supported"},accounts:{message:"Accounts"},accountsConnected:{message:"Accounts connected"},accountsPermissionsTitle:{message:"See your accounts and suggest transactions"},accountsSmallCase:{message:"accounts"},active:{message:"Active"},activity:{message:"Activity"},activityLog:{message:"Activity log"},add:{message:"Add"},addACustomNetwork:{message:"Add a custom network"},addANetwork:{message:"Add a network"},addANickname:{message:"Add a nickname"},addAUrl:{message:"Add a URL"},addAccount:{message:"Add account"},addAccountFromNetwork:{message:"Add $1 account",description:"$1 is the network name, e.g. Bitcoin or Solana"},addAccountToMetaMask:{message:"Add account to MetaMask"},addAcquiredTokens:{message:"Add the tokens you've acquired using MetaMask"},addAlias:{message:"Add alias"},addBitcoinAccountLabel:{message:"Bitcoin account (Beta)"},addBitcoinTestnetAccountLabel:{message:"Bitcoin account (Testnet)"},addBlockExplorer:{message:"Add a block explorer"},addBlockExplorerUrl:{message:"Add a block explorer URL"},addContact:{message:"Add contact"},addCustomNetwork:{message:"Add custom network"},addEthereumChainWarningModalHeader:{message:"Only add this RPC provider if you’re sure you can trust it. $1",description:"$1 is addEthereumChainWarningModalHeaderPartTwo passed separately so that it can be bolded"},addEthereumChainWarningModalHeaderPartTwo:{message:"Malicious providers may lie about the state of the blockchain and record your network activity."},addEthereumChainWarningModalListHeader:{message:"It's important that your provider is reliable, as it has the power to:"},addEthereumChainWarningModalListPointOne:{message:"See your accounts and IP address, and associate them together"},addEthereumChainWarningModalListPointThree:{message:"Show account balances and other on-chain states"},addEthereumChainWarningModalListPointTwo:{message:"Broadcast your transactions"},addEthereumChainWarningModalTitle:{message:"You are adding a new RPC provider for Ethereum Mainnet"},addEthereumWatchOnlyAccount:{message:"Watch an Ethereum account (Beta)"},addFriendsAndAddresses:{message:"Add friends and addresses you trust"},addHardwareWalletLabel:{message:"Hardware wallet"},addIPFSGateway:{message:"Add your preferred IPFS gateway"},addImportAccount:{message:"Add account or hardware wallet"},addMemo:{message:"Add memo"},addNetwork:{message:"Add network"},addNetworkConfirmationTitle:{message:"Add $1",description:"$1 represents network name"},addNewAccount:{message:"Add a new Ethereum account"},addNewEthereumAccountLabel:{message:"Ethereum account"},addNewSolanaAccountLabel:{message:"Solana account"},addNft:{message:"Add NFT"},addNfts:{message:"Add NFTs"},addNonEvmAccount:{message:"Add $1 account",description:"$1 is the non EVM network where the account is going to be created, e.g. Bitcoin or Solana"},addNonEvmAccountFromNetworkPicker:{message:"To enable the $1 network, you need to create a $2 account.",description:"$1 is the non EVM network where the account is going to be created, e.g. Solana Mainnet or Solana Devnet. $2 is the account type, e.g. Bitcoin or Solana"},addRpcUrl:{message:"Add RPC URL"},addSnapAccountToggle:{message:'Enable "Add account Snap (Beta)"'},addSnapAccountsDescription:{message:"Turning on this feature will give you the option to add the new Beta account Snaps right from your account list. If you install an account Snap, remember that it is a third-party service."},addSuggestedNFTs:{message:"Add suggested NFTs"},addSuggestedTokens:{message:"Add suggested tokens"},addToken:{message:"Add token"},addTokenByContractAddress:{message:"Can’t find a token? You can manually add any token by pasting its address. Token contract addresses can be found on $1",description:"$1 is a blockchain explorer for a specific network, e.g. Etherscan for Ethereum"},addUrl:{message:"Add URL"},addingAccount:{message:"Adding account"},addingCustomNetwork:{message:"Adding Network"},additionalNetworks:{message:"Additional networks"},address:{message:"Address"},addressCopied:{message:"Address copied!"},addressMismatch:{message:"Site address mismatch"},addressMismatchOriginal:{message:"Current URL: $1",description:"$1 replaced by origin URL in confirmation request"},addressMismatchPunycode:{message:"Punycode version: $1",description:"$1 replaced by punycode version of the URL in confirmation request"},advanced:{message:"Advanced"},advancedBaseGasFeeToolTip:{message:"When your transaction gets included in the block, any difference between your max base fee and the actual base fee will be refunded. Total amount is calculated as max base fee (in GWEI) * gas limit."},advancedDetailsDataDesc:{message:"Data"},advancedDetailsHexDesc:{message:"Hex"},advancedDetailsNonceDesc:{message:"Nonce"},advancedDetailsNonceTooltip:{message:"This is the transaction number of an account. Nonce for the first transaction is 0 and it increases in sequential order."},advancedGasFeeDefaultOptIn:{message:"Save these values as my default for the $1 network.",description:"$1 is the current network name."},advancedGasFeeModalTitle:{message:"Advanced gas fee"},advancedGasPriceTitle:{message:"Gas price"},advancedPriorityFeeToolTip:{message:"Priority fee (aka “miner tip”) goes directly to miners and incentivizes them to prioritize your transaction."},agreeTermsOfUse:{message:"I agree to MetaMask's $1",description:"$1 is the `terms` link"},airDropPatternDescription:{message:"The token's on-chain history reveals prior instances of suspicious airdrop activities."},airDropPatternTitle:{message:"Airdrop Pattern"},airgapVault:{message:"AirGap Vault"},alert:{message:"Alert"},alertActionBuyWithNativeCurrency:{message:"Buy $1"},alertActionUpdateGas:{message:"Update gas limit"},alertActionUpdateGasFee:{message:"Update fee"},alertActionUpdateGasFeeLevel:{message:"Update gas options"},alertDisableTooltip:{message:'This can be changed in "Settings > Alerts"'},alertMessageAddressMismatchWarning:{message:"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue."},alertMessageChangeInSimulationResults:{message:"Estimated changes for this transaction have been updated. Review them closely before proceeding."},alertMessageFirstTimeInteraction:{message:"You're interacting with this address for the first time. Make sure that it's correct before you continue."},alertMessageGasEstimateFailed:{message:"We’re unable to provide an accurate fee and this estimate might be high. We suggest you to input a custom gas limit, but there’s a risk the transaction will still fail."},alertMessageGasFeeLow:{message:"When choosing a low fee, expect slower transactions and longer wait times. For faster transactions, choose Market or Aggressive fee options."},alertMessageGasTooLow:{message:"To continue with this transaction, you’ll need to increase the gas limit to 21000 or higher."},alertMessageInsufficientBalanceWithNativeCurrency:{message:"You do not have enough $1 in your account to pay for network fees."},alertMessageNetworkBusy:{message:"Gas prices are high and estimates are less accurate."},alertMessageNoGasPrice:{message:"We can’t move forward with this transaction until you manually update the fee."},alertMessageSignInDomainMismatch:{message:"The site making the request is not the site you’re signing into. This could be an attempt to steal your login credentials."},alertMessageSignInWrongAccount:{message:"This site is asking you to sign in using the wrong account."},alertModalAcknowledge:{message:"I have acknowledged the risk and still want to proceed"},alertModalDetails:{message:"Alert Details"},alertModalReviewAllAlerts:{message:"Review all alerts"},alertReasonChangeInSimulationResults:{message:"Results have changed"},alertReasonFirstTimeInteraction:{message:"1st interaction"},alertReasonGasEstimateFailed:{message:"Inaccurate fee"},alertReasonGasFeeLow:{message:"Slow speed"},alertReasonGasTooLow:{message:"Low gas limit"},alertReasonInsufficientBalance:{message:"Insufficient funds"},alertReasonNetworkBusy:{message:"Network is busy"},alertReasonNoGasPrice:{message:"Fee estimate unavailable"},alertReasonPendingTransactions:{message:"Pending transaction"},alertReasonSignIn:{message:"Suspicious sign-in request"},alertReasonWrongAccount:{message:"Wrong account"},alertSelectedAccountWarning:{message:"This request is for a different account than the one selected in your wallet. To use another account, connect it to the site."},alerts:{message:"Alerts"},all:{message:"All"},allNetworks:{message:"All networks"},allPermissions:{message:"All Permissions"},allTimeHigh:{message:"All time high"},allTimeLow:{message:"All time low"},allowNotifications:{message:"Allow notifications"},allowWithdrawAndSpend:{message:"Allow $1 to withdraw and spend up to the following amount:",description:"The url of the site that requested permission to 'withdraw and spend'"},amount:{message:"Amount"},amountReceived:{message:"Amount Received"},amountSent:{message:"Amount Sent"},andForListItems:{message:"$1, and $2",description:"$1 is the first item, $2 is the last item in a list of items. Used in Snap Install Warning modal."},andForTwoItems:{message:"$1 and $2",description:"$1 is the first item, $2 is the second item. Used in Snap Install Warning modal."},appDescription:{message:"An Ethereum Wallet in your Browser",description:"The description of the application"},appName:{message:"MetaMask",description:"The name of the application"},appNameBeta:{message:"MetaMask Beta",description:"The name of the application (Beta)"},appNameFlask:{message:"MetaMask Flask",description:"The name of the application (Flask)"},appNameMmi:{message:"MetaMask Institutional",description:"The name of the application (MMI)"},apply:{message:"Apply"},approve:{message:"Approve spend limit"},approveButtonText:{message:"Approve"},approveIncreaseAllowance:{message:"Increase $1 spending cap",description:"The token symbol that is being approved"},approveSpendingCap:{message:"Approve $1 spending cap",description:"The token symbol that is being approved"},approved:{message:"Approved"},approvedOn:{message:"Approved on $1",description:"$1 is the approval date for a permission"},approvedOnForAccounts:{message:"Approved on $1 for $2",description:"$1 is the approval date for a permission. $2 is the AvatarGroup component displaying account images."},areYouSure:{message:"Are you sure?"},asset:{message:"Asset"},assetMultipleNFTsBalance:{message:"$1 NFTs"},assetOptions:{message:"Asset options"},assetSingleNFTBalance:{message:"$1 NFT"},assets:{message:"Assets"},assetsDescription:{message:"Autodetect tokens in your wallet, display NFTs, and get batched account balance updates"},attemptToCancelSwapForFree:{message:"Attempt to cancel swap for free"},attributes:{message:"Attributes"},attributions:{message:"Attributions"},auroraRpcDeprecationMessage:{message:"The Infura RPC URL is no longer supporting Aurora."},authorizedPermissions:{message:"You have authorized the following permissions"},autoDetectTokens:{message:"Autodetect tokens"},autoDetectTokensDescription:{message:"We use third-party APIs to detect and display new tokens sent to your wallet. Turn off if you don’t want the app to automatically pull data from those services. $1",description:"$1 is a link to a support article"},autoLockTimeLimit:{message:"Auto-lock timer (minutes)"},autoLockTimeLimitDescription:{message:"Set the idle time in minutes before MetaMask will become locked."},average:{message:"Average"},back:{message:"Back"},backupApprovalInfo:{message:"This secret code is required to recover your wallet in case you lose your device, forget your password, have to re-install MetaMask, or want to access your wallet on another device."},backupApprovalNotice:{message:"Back up your Secret Recovery Phrase to keep your wallet and funds secure."},backupKeyringSnapReminder:{message:"Be sure you can access any accounts created by this Snap on your own before removing it"},backupNow:{message:"Back up now"},balance:{message:"Balance"},balanceOutdated:{message:"Balance may be outdated"},baseFee:{message:"Base fee"},basic:{message:"Basic"},basicConfigurationBannerCTA:{message:"Turn on basic functionality"},basicConfigurationBannerTitle:{message:"Basic functionality is off"},basicConfigurationDescription:{message:"MetaMask offers basic features like token details and gas settings through internet services. When you use internet services, your IP address is shared, in this case with MetaMask. This is just like when you visit any website. MetaMask uses this data temporarily and never sells your data. You can use a VPN or turn off these services, but it may affect your MetaMask experience. To learn more read our $1.",description:"$1 is to be replaced by the message for privacyMsg, and will link to https://consensys.io/privacy-policy"},basicConfigurationLabel:{message:"Basic functionality"},basicConfigurationModalCheckbox:{message:"I understand and want to continue"},basicConfigurationModalDisclaimerOff:{message:"This means you won't fully optimize your time on MetaMask. Basic features (like token details, optimal gas settings, and others) won't be available to you."},basicConfigurationModalDisclaimerOn:{message:"To optimize your time on MetaMask, you’ll need to turn on this feature. Basic functions (like token details, optimal gas settings, and others) are important to the web3 experience."},basicConfigurationModalHeadingOff:{message:"Turn off basic functionality"},basicConfigurationModalHeadingOn:{message:"Turn on basic functionality"},bestPrice:{message:"Best price"},beta:{message:"Beta"},betaHeaderText:{message:"This is a beta version. Please report bugs $1"},betaMetamaskVersion:{message:"MetaMask Beta Version"},betaTerms:{message:"Beta Terms of use"},billionAbbreviation:{message:"B",description:"Shortened form of 'billion'"},bitcoinSupportSectionTitle:{message:"Bitcoin"},bitcoinSupportToggleDescription:{message:"Turning on this feature will give you the option to add a Bitcoin Account to your MetaMask Extension derived from your existing Secret Recovery Phrase. This is an experimental Beta feature, so you should use it at your own risk. To give us feedback on this new Bitcoin experience, please fill out this $1.",description:"$1 is the link to a product feedback form"},bitcoinSupportToggleTitle:{message:'Enable "Add a new Bitcoin account (Beta)"'},bitcoinTestnetSupportToggleDescription:{message:"Turning on this feature will give you the option to add a Bitcoin Account for the test network."},bitcoinTestnetSupportToggleTitle:{message:'Enable "Add a new Bitcoin account (Testnet)"'},blockExplorerAccountAction:{message:"Account",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Account in Explorer"},blockExplorerAssetAction:{message:"Asset",description:"This is used with viewOnEtherscan and viewInExplorer e.g View Asset in Explorer"},blockExplorerSwapAction:{message:"Swap",description:"This is used with viewOnEtherscan e.g View Swap on Etherscan"},blockExplorerUrl:{message:"Block explorer URL"},blockExplorerUrlDefinition:{message:"The URL used as the block explorer for this network."},blockExplorerView:{message:"View account at $1",description:"$1 replaced by URL for custom block explorer"},blockaid:{message:"Blockaid"},blockaidAlertDescriptionBlur:{message:"If you continue, all the assets you’ve listed on Blur could be at risk."},blockaidAlertDescriptionMalicious:{message:"You’re interacting with a malicious site. If you continue, you will lose your assets."},blockaidAlertDescriptionOpenSea:{message:"If you continue, all the assets you’ve listed on OpenSea could be at risk."},blockaidAlertDescriptionOthers:{message:"If you confirm this request, you could lose your assets. We recommend that you cancel this request."},blockaidAlertDescriptionTokenTransfer:{message:"You’re sending your assets to a scammer. If you continue, you’ll lose those assets."},blockaidAlertDescriptionWithdraw:{message:"If you confirm this request, you’re allowing a scammer to withdraw and spend your assets. You won’t get them back."},blockaidDescriptionApproveFarming:{message:"If you approve this request, a third party known for scams might take all your assets."},blockaidDescriptionBlurFarming:{message:"If you approve this request, someone can steal your assets listed on Blur."},blockaidDescriptionErrored:{message:"Because of an error, we couldn't check for security alerts. Only continue if you trust every address involved."},blockaidDescriptionMaliciousDomain:{message:"You're interacting with a malicious domain. If you approve this request, you might lose your assets."},blockaidDescriptionMightLoseAssets:{message:"If you approve this request, you might lose your assets."},blockaidDescriptionSeaportFarming:{message:"If you approve this request, someone can steal your assets listed on OpenSea."},blockaidDescriptionTransferFarming:{message:"If you approve this request, a third party known for scams will take all your assets."},blockaidMessage:{message:"Privacy preserving - no data is shared with third parties. Available on Arbitrum, Avalanche, BNB chain, Ethereum Mainnet, Linea, Optimism, Polygon, Base and Sepolia."},blockaidTitleDeceptive:{message:"This is a deceptive request"},blockaidTitleMayNotBeSafe:{message:"Be careful"},blockaidTitleSuspicious:{message:"This is a suspicious request"},blockies:{message:"Blockies"},boughtFor:{message:"Bought for"},bridge:{message:"Bridge"},bridgeAllowSwappingOf:{message:"Allow exact access to $1 $2 on $3 for bridging",description:"Shows a user that they need to allow a token for swapping on their hardware wallet"},bridgeApproval:{message:"Approve $1 for bridge",description:"Used in the transaction display list to describe a transaction that is an approve call on a token that is to be bridged. $1 is the symbol of a token that has been approved."},bridgeApprovalWarning:{message:"You are allowing access to the specified amount, $1 $2. The contract will not access any additional funds."},bridgeApprovalWarningForHardware:{message:"You will need to allow access to $1 $2 for bridging, and then approve bridging to $2. This will require two separate confirmations."},bridgeBlockExplorerLinkCopied:{message:"Block explorer link copied!"},bridgeCalculatingAmount:{message:"Calculating..."},bridgeConfirmTwoTransactions:{message:"You'll need to confirm 2 transactions on your hardware wallet:"},bridgeCreateSolanaAccount:{message:"Create Solana account"},bridgeCreateSolanaAccountDescription:{message:"To swap to the Solana network, you need an account and receiving address."},bridgeCreateSolanaAccountTitle:{message:"You'll need a Solana account first."},bridgeDetailsTitle:{message:"Bridge details",description:"Title for the modal showing details about a bridge transaction."},bridgeEnterAmount:{message:"Select amount"},bridgeEnterAmountAndSelectAccount:{message:"Enter amount and select destination account"},bridgeExplorerLinkViewOn:{message:"View on $1"},bridgeFetchNewQuotes:{message:"Fetch a new one?"},bridgeFrom:{message:"Bridge from"},bridgeFromTo:{message:"Bridge $1 $2 to $3",description:"Tells a user that they need to confirm on their hardware wallet a bridge. $1 is amount of source token, $2 is the source network, and $3 is the destination network"},bridgeGasFeesSplit:{message:"Any network fee quoted on the previous screen includes both transactions and will be split."},bridgeNetCost:{message:"Net cost"},bridgeQuoteExpired:{message:"Your quote timed out."},bridgeSelectDestinationAccount:{message:"Select destination account"},bridgeSelectNetwork:{message:"Select network"},bridgeSelectTokenAmountAndAccount:{message:"Select token, amount and destination account"},bridgeSelectTokenAndAmount:{message:"Select token and amount"},bridgeSolanaAccountCreated:{message:"Solana account created"},bridgeStatusComplete:{message:"Complete",description:"Status text indicating a bridge transaction has successfully completed."},bridgeStatusFailed:{message:"Failed",description:"Status text indicating a bridge transaction has failed."},bridgeStatusInProgress:{message:"In Progress",description:"Status text indicating a bridge transaction is currently processing."},bridgeStepActionBridgeComplete:{message:"$1 received on $2",description:"$1 is the amount of the destination asset, $2 is the name of the destination network"},bridgeStepActionBridgePending:{message:"Receiving $1 on $2",description:"$1 is the amount of the destination asset, $2 is the name of the destination network"},bridgeStepActionSwapComplete:{message:"Swapped $1 for $2",description:"$1 is the amount of the source asset, $2 is the amount of the destination asset"},bridgeStepActionSwapPending:{message:"Swapping $1 for $2",description:"$1 is the amount of the source asset, $2 is the amount of the destination asset"},bridgeTerms:{message:"Terms"},bridgeTimingMinutes:{message:"$1 min",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},bridgeTo:{message:"Bridge to"},bridgeToChain:{message:"Bridge to $1"},bridgeTokenCannotVerifyDescription:{message:"If you added this token manually, make sure you are aware of the risks to your funds before you bridge."},bridgeTokenCannotVerifyTitle:{message:"We can't verify this token."},bridgeTransactionProgress:{message:"Transaction $1 of 2"},bridgeTxDetailsBridging:{message:"Bridging"},bridgeTxDetailsDelayedDescription:{message:"Reach out to"},bridgeTxDetailsDelayedDescriptionSupport:{message:"MetaMask Support"},bridgeTxDetailsDelayedTitle:{message:"Has it been longer than 3 hours?"},bridgeTxDetailsNonce:{message:"Nonce"},bridgeTxDetailsStatus:{message:"Status"},bridgeTxDetailsTimestamp:{message:"Time stamp"},bridgeTxDetailsTimestampValue:{message:"$1 at $2",description:"$1 is the date, $2 is the time"},bridgeTxDetailsTokenAmountOnChain:{message:"$1 $2 on",description:"$1 is the amount of the token, $2 is the ticker symbol of the token"},bridgeTxDetailsTotalGasFee:{message:"Total gas fee"},bridgeTxDetailsYouReceived:{message:"You received"},bridgeTxDetailsYouSent:{message:"You sent"},bridgeValidationInsufficientGasMessage:{message:"You don't have enough $1 to pay the gas fee for this bridge. Enter a smaller amount or buy more $1."},bridgeValidationInsufficientGasTitle:{message:"More $1 needed for gas"},bridging:{message:"Bridging"},browserNotSupported:{message:"Your browser is not supported..."},buildContactList:{message:"Build your contact list"},builtAroundTheWorld:{message:"MetaMask is designed and built around the world."},bulletpoint:{message:"·"},busy:{message:"Busy"},buyAndSell:{message:"Buy & Sell"},buyMoreAsset:{message:"Buy more $1",description:"$1 is the ticker symbol of a an asset the user is being prompted to purchase"},buyNow:{message:"Buy Now"},bytes:{message:"Bytes"},canToggleInSettings:{message:"You can re-enable this notification in Settings > Alerts."},cancel:{message:"Cancel"},cancelPopoverTitle:{message:"Cancel transaction"},cancelSpeedUpLabel:{message:"This gas fee will $1 the original.",description:"$1 is text 'replace' in bold"},cancelSpeedUpTransactionTooltip:{message:"To $1 a transaction the gas fee must be increased by at least 10% for it to be recognized by the network.",description:"$1 is string 'cancel' or 'speed up'"},cancelled:{message:"Cancelled"},chainId:{message:"Chain ID"},chainIdDefinition:{message:"The chain ID used to sign transactions for this network."},chainIdExistsErrorMsg:{message:"This Chain ID is currently used by the $1 network."},chainListReturnedDifferentTickerSymbol:{message:"This token symbol doesn't match the network name or chain ID entered. Many popular tokens use similar symbols, which scammers can use to trick you into sending them a more valuable token in return. Verify everything before you continue."},chooseYourNetwork:{message:"Choose your network"},chooseYourNetworkDescription:{message:"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data.",description:"$1 is a link to the privacy policy"},chromeRequiredForHardwareWallets:{message:"You need to use MetaMask on Google Chrome in order to connect to your Hardware Wallet."},circulatingSupply:{message:"Circulating supply"},clear:{message:"Clear"},clearActivity:{message:"Clear activity and nonce data"},clearActivityButton:{message:"Clear activity tab data"},clearActivityDescription:{message:"This resets the account's nonce and erases data from the activity tab in your wallet. Only the current account and network will be affected. Your balances and incoming transactions won't change."},click:{message:"Click"},clickToConnectLedgerViaWebHID:{message:"Click here to connect your Ledger via WebHID",description:"Text that can be clicked to open a browser popup for connecting the ledger device via webhid"},close:{message:"Close"},closeExtension:{message:"Close extension"},closeWindowAnytime:{message:"You may close this window anytime."},coingecko:{message:"CoinGecko"},collectionName:{message:"Collection name"},comboNoOptions:{message:"No options found",description:"Default text shown in the combo field dropdown if no options."},concentratedSupplyDistributionDescription:{message:"The majority of the token's supply is held by the top token holders, posing a risk of centralized price manipulation"},concentratedSupplyDistributionTitle:{message:"Concentrated Supply Distribution"},configureSnapPopupDescription:{message:"You're now leaving MetaMask to configure this snap."},configureSnapPopupInstallDescription:{message:"You're now leaving MetaMask to install this snap."},configureSnapPopupInstallTitle:{message:"Install snap"},configureSnapPopupLink:{message:"Click this link to continue:"},configureSnapPopupTitle:{message:"Configure snap"},confirm:{message:"Confirm"},confirmAccountType:{message:"Type"},confirmAccountTypeSmartContract:{message:"Smart account"},confirmAccountTypeStandard:{message:"Standard account"},confirmAlertModalAcknowledgeMultiple:{message:"I have acknowledged the alerts and still want to proceed"},confirmAlertModalAcknowledgeSingle:{message:"I have acknowledged the alert and still want to proceed"},confirmFieldPaymaster:{message:"Fee paid by"},confirmFieldTooltipPaymaster:{message:"The fee for this transaction will be paid by the paymaster smart contract."},confirmGasFeeTokenBalance:{message:"Bal:"},confirmGasFeeTokenInsufficientBalance:{message:"Insufficient funds"},confirmGasFeeTokenMetaMaskFee:{message:"Includes $1 fee"},confirmGasFeeTokenModalTitle:{message:"Select a token"},confirmGasFeeTokenToast:{message:"You're paying this network fee with $1"},confirmGasFeeTokenTooltip:{message:"This is paid to the network to process your transaction. It includes a $1 MetaMask fee for non-ETH tokens."},confirmNestedTransactionTitle:{message:"Transaction $1"},confirmPassword:{message:"Confirm password"},confirmRecoveryPhrase:{message:"Confirm Secret Recovery Phrase"},confirmSimulationApprove:{message:"You approve"},confirmTitleApproveTransactionNFT:{message:"Withdrawal request"},confirmTitleDelegationRevoke:{message:"Account update"},confirmTitleDeployContract:{message:"Deploy a contract"},confirmTitleDescApproveTransaction:{message:"This site wants permission to withdraw your NFTs"},confirmTitleDescDelegationRevoke:{message:"You're switching back to a standard account (EOA)."},confirmTitleDescDeployContract:{message:"This site wants you to deploy a contract"},confirmTitleDescERC20ApproveTransaction:{message:"This site wants permission to withdraw your tokens"},confirmTitleDescPermitSignature:{message:"This site wants permission to spend your tokens."},confirmTitleDescSIWESignature:{message:"A site wants you to sign in to prove you own this account."},confirmTitleDescSign:{message:"Review request details before you confirm."},confirmTitlePermitTokens:{message:"Spending cap request"},confirmTitleRevokeApproveTransaction:{message:"Remove permission"},confirmTitleSIWESignature:{message:"Sign-in request"},confirmTitleSetApprovalForAllRevokeTransaction:{message:"Remove permission"},confirmTitleSignature:{message:"Signature request"},confirmTitleTransaction:{message:"Transaction request"},confirmationAlertDetails:{message:"To protect your assets, we suggest you reject the request."},confirmationAlertModalTitleDescription:{message:"Your assets may be at risk"},confirmed:{message:"Confirmed"},confusableUnicode:{message:"'$1' is similar to '$2'."},confusableZeroWidthUnicode:{message:"Zero-width character found."},confusingEnsDomain:{message:"We have detected a confusable character in the ENS name. Check the ENS name to avoid a potential scam."},congratulations:{message:"Congratulations!"},connect:{message:"Connect"},connectAccount:{message:"Connect account"},connectAccountOrCreate:{message:"Connect account or create new"},connectAccounts:{message:"Connect accounts"},connectAnAccountHeader:{message:"Connect an account"},connectManually:{message:"Manually connect to current site"},connectMoreAccounts:{message:"Connect more accounts"},connectSnap:{message:"Connect $1",description:"$1 is the snap for which a connection is being requested."},connectWithMetaMask:{message:"Connect with MetaMask"},connectedAccounts:{message:"Connected accounts"},connectedAccountsDescriptionPlural:{message:"You have $1 accounts connected to this site.",description:"$1 is the number of accounts"},connectedAccountsDescriptionSingular:{message:"You have 1 account connected to this site."},connectedAccountsEmptyDescription:{message:"MetaMask is not connected to this site. To connect to a web3 site, find and click the connect button."},connectedAccountsListTooltip:{message:"$1 can see the account balance, address, activity, and suggest transactions to approve for connected accounts.",description:"$1 is the origin name"},connectedAccountsToast:{message:"Connected accounts updated"},connectedSites:{message:"Connected sites"},connectedSitesAndSnaps:{message:"Connected sites and Snaps"},connectedSitesDescription:{message:"$1 is connected to these sites. They can view your account address.",description:"$1 is the account name"},connectedSitesEmptyDescription:{message:"$1 is not connected to any sites.",description:"$1 is the account name"},connectedSnapAndNoAccountDescription:{message:"MetaMask is connected to this site, but no accounts are connected yet"},connectedSnaps:{message:"Connected Snaps"},connectedWithAccount:{message:"$1 accounts connected",description:"$1 represents account length"},connectedWithAccountName:{message:"Connected with $1",description:"$1 represents account name"},connectedWithNetwork:{message:"$1 networks connected",description:"$1 represents network length"},connectedWithNetworkName:{message:"Connected with $1",description:"$1 represents network name"},connecting:{message:"Connecting"},connectingTo:{message:"Connecting to $1"},connectingToDeprecatedNetwork:{message:"'$1' is being phased out and may not work. Try another network."},connectingToGoerli:{message:"Connecting to Goerli test network"},connectingToLineaGoerli:{message:"Connecting to Linea Goerli test network"},connectingToLineaMainnet:{message:"Connecting to Linea Mainnet"},connectingToLineaSepolia:{message:"Connecting to Linea Sepolia test network"},connectingToMainnet:{message:"Connecting to Ethereum Mainnet"},connectingToSepolia:{message:"Connecting to Sepolia test network"},connectionDescription:{message:"Connect this website with MetaMask."},connectionFailed:{message:"Connection failed"},connectionFailedDescription:{message:"Fetching of $1 failed, check your network and try again.",description:"$1 is the name of the snap being fetched."},connectionPopoverDescription:{message:"To connect to a site, select the connect button. MetaMask can only connect to web3 sites."},connectionRequest:{message:"Connection request"},contactUs:{message:"Contact us"},contacts:{message:"Contacts"},contentFromSnap:{message:"Content from $1",description:"$1 represents the name of the snap"},continue:{message:"Continue"},contract:{message:"Contract"},contractAddress:{message:"Contract address"},contractAddressError:{message:"You are sending tokens to the token's contract address. This may result in the loss of these tokens."},contractDeployment:{message:"Contract deployment"},contractInteraction:{message:"Contract interaction"},convertTokenToNFTDescription:{message:"We've detected that this asset is an NFT. MetaMask now has full native support for NFTs. Would you like to remove it from your token list and add it as an NFT?"},convertTokenToNFTExistDescription:{message:"We’ve detected that this asset has been added as an NFT. Would you like to remove it from your token list?"},coolWallet:{message:"CoolWallet"},copiedExclamation:{message:"Copied."},copyAddress:{message:"Copy address to clipboard"},copyPrivateKey:{message:"Copy private key"},copyToClipboard:{message:"Copy to clipboard"},copyTransactionId:{message:"Copy transaction ID"},create:{message:"Create"},createNewAccountHeader:{message:"Create a new account"},createNewWallet:{message:"Create a new wallet"},createPassword:{message:"Create password"},createSnapAccountDescription:{message:"$1 wants to add a new account to MetaMask."},createSnapAccountTitle:{message:"Create account"},createSolanaAccount:{message:"Create Solana account"},creatorAddress:{message:"Creator address"},crossChainAggregatedBalancePopover:{message:"This reflects the value of all tokens you own on all networks. If you prefer seeing this value in ETH or other currencies, go to $1.",description:"$1 represents the settings page"},crossChainSwapsLink:{message:"Swap across networks with MetaMask Portfolio"},crossChainSwapsLinkNative:{message:"Swap across networks with Bridge"},cryptoCompare:{message:"CryptoCompare"},currencyConversion:{message:"Currency"},currencyRateCheckToggle:{message:"Show balance and token price checker"},currencyRateCheckToggleDescription:{message:"We use $1 and $2 APIs to display your balance and token price. $3",description:"$1 represents Coingecko, $2 represents CryptoCompare and $3 represents Privacy Policy"},currencySymbol:{message:"Currency symbol"},currencySymbolDefinition:{message:"The ticker symbol displayed for this network’s currency."},currentAccountNotConnected:{message:"Your current account is not connected"},currentExtension:{message:"Current extension page"},currentLanguage:{message:"Current language"},currentNetwork:{message:"Current network",description:"Speicifies to token network filter to filter by current Network. Will render when network nickname is not available"},currentRpcUrlDeprecated:{message:"The current rpc url for this network has been deprecated."},currentTitle:{message:"Current:"},currentlyUnavailable:{message:"Unavailable on this network"},curveHighGasEstimate:{message:"Aggressive gas estimate graph"},curveLowGasEstimate:{message:"Low gas estimate graph"},curveMediumGasEstimate:{message:"Market gas estimate graph"},custom:{message:"Advanced"},customGasSettingToolTipMessage:{message:"Use $1 to customize the gas price. This can be confusing if you aren’t familiar. Interact at your own risk.",description:"$1 is key 'advanced' (text: 'Advanced') separated here so that it can be passed in with bold font-weight"},customSlippage:{message:"Custom"},customSpendLimit:{message:"Custom spend limit"},customToken:{message:"Custom token"},customTokenWarningInNonTokenDetectionNetwork:{message:"Token detection is not available on this network yet. Please import token manually and make sure you trust it. Learn about $1"},customTokenWarningInTokenDetectionNetwork:{message:"Anyone can create a token, including creating fake versions of existing tokens. Learn about $1"},customTokenWarningInTokenDetectionNetworkWithTDOFF:{message:"Make sure you trust a token before you import it. Learn how to avoid $1. You can also enable token detection $2."},customerSupport:{message:"customer support"},customizeYourNotifications:{message:"Customize your notifications"},customizeYourNotificationsText:{message:"Turn on the types of notifications you want to receive:"},dappSuggested:{message:"Site suggested"},dappSuggestedGasSettingToolTipMessage:{message:"$1 has suggested this price.",description:"$1 is url for the dapp that has suggested gas settings"},dappSuggestedHigh:{message:"Site suggested"},dappSuggestedHighShortLabel:{message:"Site (high)"},dappSuggestedShortLabel:{message:"Site"},dappSuggestedTooltip:{message:"$1 has recommended this price.",description:"$1 represents the Dapp's origin"},darkTheme:{message:"Dark"},data:{message:"Data"},dataCollectionForMarketing:{message:"Data collection for marketing"},dataCollectionForMarketingDescription:{message:"We'll use MetaMetrics to learn how you interact with our marketing communications. We may share relevant news (like product features and other materials)."},dataCollectionWarningPopoverButton:{message:"Okay"},dataCollectionWarningPopoverDescription:{message:"You turned off data collection for our marketing purposes. This only applies to this device. If you use MetaMask on other devices, make sure to opt out there as well."},dataUnavailable:{message:"data unavailable"},dateCreated:{message:"Date created"},dcent:{message:"D'Cent"},debitCreditPurchaseOptions:{message:"Debit or credit card purchase options"},decimal:{message:"Token decimal"},decimalsMustZerotoTen:{message:"Decimals must be at least 0, and not over 36."},decrypt:{message:"Decrypt"},decryptCopy:{message:"Copy encrypted message"},decryptInlineError:{message:"This message cannot be decrypted due to error: $1",description:"$1 is error message"},decryptMessageNotice:{message:"$1 would like to read this message to complete your action",description:"$1 is the web3 site name"},decryptMetamask:{message:"Decrypt message"},decryptRequest:{message:"Decrypt request"},defaultRpcUrl:{message:"Default RPC URL"},defaultSettingsSubTitle:{message:"MetaMask uses default settings to best balance safety and ease of use. Change these settings to further increase your privacy."},defaultSettingsTitle:{message:"Default privacy settings"},delete:{message:"Delete"},deleteContact:{message:"Delete contact"},deleteMetaMetricsData:{message:"Delete MetaMetrics data"},deleteMetaMetricsDataDescription:{message:"This will delete historical MetaMetrics data associated with your use on this device. Your wallet and accounts will remain exactly as they are now after this data has been deleted. This process may take up to 30 days. View our $1.",description:"$1 will have text saying Privacy Policy "},deleteMetaMetricsDataErrorDesc:{message:"This request can't be completed right now due to an analytics system server issue, please try again later"},deleteMetaMetricsDataErrorTitle:{message:"We are unable to delete this data right now"},deleteMetaMetricsDataModalDesc:{message:"We are about to remove all your MetaMetrics data. Are you sure?"},deleteMetaMetricsDataModalTitle:{message:"Delete MetaMetrics data?"},deleteMetaMetricsDataRequestedDescription:{message:"You initiated this action on $1. This process can take up to 30 days. View the $2",description:"$1 will be the date on which teh deletion is requested and $2 will have text saying Privacy Policy "},deleteNetworkIntro:{message:"If you delete this network, you will need to add it again to view your assets in this network"},deleteNetworkTitle:{message:"Delete $1 network?",description:"$1 represents the name of the network"},depositCrypto:{message:"Deposit crypto from another account with a wallet address or QR code."},deprecatedGoerliNtwrkMsg:{message:"Because of updates to the Ethereum system, the Goerli test network will be phased out soon."},deprecatedNetwork:{message:"This network is deprecated"},deprecatedNetworkButtonMsg:{message:"Got it"},deprecatedNetworkDescription:{message:"The network you're trying to connect to is no longer supported by Metamask. $1"},description:{message:"Description"},descriptionFromSnap:{message:"Description from $1",description:"$1 represents the name of the snap"},destinationAccountPickerNoEligible:{message:"No eligible accounts found"},destinationAccountPickerNoMatching:{message:"No matching accounts found"},destinationAccountPickerReceiveAt:{message:"Receive at"},destinationAccountPickerSearchPlaceholderToMainnet:{message:"Receiving address or ENS"},destinationAccountPickerSearchPlaceholderToSolana:{message:"Receiving address"},destinationTransactionIdLabel:{message:"Destination Tx ID",description:"Label for the destination transaction ID field."},details:{message:"Details"},developerOptions:{message:"Developer Options"},disabledGasOptionToolTipMessage:{message:"“$1” is disabled because it does not meet the minimum of a 10% increase from the original gas fee.",description:"$1 is gas estimate type which can be market or aggressive"},disconnect:{message:"Disconnect"},disconnectAllAccounts:{message:"Disconnect all accounts"},disconnectAllAccountsConfirmationDescription:{message:"Are you sure you want to disconnect? You may lose site functionality."},disconnectAllAccountsText:{message:"accounts"},disconnectAllDescriptionText:{message:"If you disconnect from this site, you’ll need to reconnect your accounts and networks to use this site again."},disconnectAllSnapsText:{message:"Snaps"},disconnectMessage:{message:"This will disconnect you from this site"},disconnectPrompt:{message:"Disconnect $1"},disconnectThisAccount:{message:"Disconnect this account"},disconnectedAllAccountsToast:{message:"All accounts disconnected from $1",description:"$1 is name of the dapp`"},disconnectedSingleAccountToast:{message:"$1 disconnected from $2",description:"$1 is name of the name and $2 represents the dapp name`"},discover:{message:"Discover"},discoverSnaps:{message:"Discover Snaps",description:"Text that links to the Snaps website. Displayed in a banner on Snaps list page in settings."},dismiss:{message:"Dismiss"},dismissReminderDescriptionField:{message:"Turn this on to dismiss the Secret Recovery Phrase backup reminder message. We highly recommend that you back up your Secret Recovery Phrase to avoid loss of funds"},dismissReminderField:{message:"Dismiss Secret Recovery Phrase backup reminder"},dismissSmartAccountSuggestionEnabledDescription:{message:'Turn this on to no longer see the "Switch to Smart Account" suggestion on any account. Smart accounts unlocks faster transactions, lower network fees and more flexibility on payment for those.'},dismissSmartAccountSuggestionEnabledTitle:{message:'Dismiss "Switch to Smart Account" suggestion'},displayNftMedia:{message:"Display NFT media"},displayNftMediaDescription:{message:"Displaying NFT media and data exposes your IP address to OpenSea or other third parties. This can allow attackers to associate your IP address with your Ethereum address. NFT autodetection relies on this setting, and won't be available when this is turned off."},doNotShare:{message:"Do not share this with anyone"},domain:{message:"Domain"},done:{message:"Done"},dontShowThisAgain:{message:"Don't show this again"},downArrow:{message:"down arrow"},downloadGoogleChrome:{message:"Download Google Chrome"},downloadNow:{message:"Download Now"},downloadStateLogs:{message:"Download state logs"},dragAndDropBanner:{message:"You can drag networks to reorder them. "},dropped:{message:"Dropped"},duplicateContactTooltip:{message:"This contact name collides with an existing account or contact"},duplicateContactWarning:{message:"You have duplicate contacts"},edit:{message:"Edit"},editANickname:{message:"Edit nickname"},editAccounts:{message:"Edit accounts"},editAddressNickname:{message:"Edit address nickname"},editCancellationGasFeeModalTitle:{message:"Edit cancellation gas fee"},editContact:{message:"Edit contact"},editGasFeeModalTitle:{message:"Edit gas fee"},editGasLimitOutOfBounds:{message:"Gas limit must be at least $1"},editGasLimitOutOfBoundsV2:{message:"Gas limit must be greater than $1 and less than $2",description:"$1 is the minimum limit for gas and $2 is the maximum limit"},editGasLimitTooltip:{message:"Gas limit is the maximum units of gas you are willing to use. Units of gas are a multiplier to “Max priority fee” and “Max fee”."},editGasMaxBaseFeeGWEIImbalance:{message:"Max base fee cannot be lower than priority fee"},editGasMaxBaseFeeHigh:{message:"Max base fee is higher than necessary"},editGasMaxBaseFeeLow:{message:"Max base fee is low for current network conditions"},editGasMaxFeeHigh:{message:"Max fee is higher than necessary"},editGasMaxFeeLow:{message:"Max fee too low for network conditions"},editGasMaxFeePriorityImbalance:{message:"Max fee cannot be lower than max priority fee"},editGasMaxPriorityFeeBelowMinimum:{message:"Max priority fee must be greater than 0 GWEI"},editGasMaxPriorityFeeBelowMinimumV2:{message:"Priority fee must be greater than 0."},editGasMaxPriorityFeeHigh:{message:"Max priority fee is higher than necessary. You may pay more than needed."},editGasMaxPriorityFeeHighV2:{message:"Priority fee is higher than necessary. You may pay more than needed"},editGasMaxPriorityFeeLow:{message:"Max priority fee is low for current network conditions"},editGasMaxPriorityFeeLowV2:{message:"Priority fee is low for current network conditions"},editGasPriceTooLow:{message:"Gas price must be greater than 0"},editGasPriceTooltip:{message:"This network requires a “Gas price” field when submitting a transaction. Gas price is the amount you will pay pay per unit of gas."},editGasSubTextFeeLabel:{message:"Max fee:"},editGasTitle:{message:"Edit priority"},editGasTooLow:{message:"Unknown processing time"},editInPortfolio:{message:"Edit in Portfolio"},editNetworkLink:{message:"edit the original network"},editNetworksTitle:{message:"Edit networks"},editNonceField:{message:"Edit nonce"},editNonceMessage:{message:"This is an advanced feature, use cautiously."},editPermission:{message:"Edit permission"},editPermissions:{message:"Edit permissions"},editSpeedUpEditGasFeeModalTitle:{message:"Edit speed up gas fee"},editSpendingCap:{message:"Edit spending cap"},editSpendingCapAccountBalance:{message:"Account balance: $1 $2"},editSpendingCapDesc:{message:"Enter the amount that you feel comfortable being spent on your behalf."},editSpendingCapError:{message:"The spending cap can’t exceed $1 decimal digits. Remove decimal digits to continue."},editSpendingCapSpecialCharError:{message:"Enter numbers only"},enableAutoDetect:{message:" Enable autodetect"},enableFromSettings:{message:" Enable it from Settings."},enableSnap:{message:"Enable"},enableToken:{message:"enable $1",description:"$1 is a token symbol, e.g. ETH"},enabled:{message:"Enabled"},enabledNetworks:{message:"Enabled networks"},encryptionPublicKeyNotice:{message:"$1 would like your public encryption key. By consenting, this site will be able to compose encrypted messages to you.",description:"$1 is the web3 site name"},encryptionPublicKeyRequest:{message:"Request encryption public key"},endpointReturnedDifferentChainId:{message:"The RPC URL you have entered returned a different chain ID ($1).",description:"$1 is the return value of eth_chainId from an RPC endpoint"},enhancedTokenDetectionAlertMessage:{message:"Enhanced token detection is currently available on $1. $2"},ensDomainsSettingDescriptionIntroduction:{message:"MetaMask lets you see ENS domains right in your browser's address bar. Here's how it works:"},ensDomainsSettingDescriptionOutroduction:{message:"Keep in mind that using this feature exposes your IP address to IPFS third-party services."},ensDomainsSettingDescriptionPart1:{message:"MetaMask checks with Ethereum's ENS contract to find the code connected to the ENS name."},ensDomainsSettingDescriptionPart2:{message:"If the code links to IPFS, you can see the content associated with it (usually a website)."},ensDomainsSettingTitle:{message:"Show ENS domains in address bar"},ensUnknownError:{message:"ENS lookup failed."},enterANameToIdentifyTheUrl:{message:"Enter a name to identify the URL"},enterChainId:{message:"Enter Chain ID"},enterMaxSpendLimit:{message:"Enter max spend limit"},enterNetworkName:{message:"Enter network name"},enterOptionalPassword:{message:"Enter optional password"},enterPasswordContinue:{message:"Enter password to continue"},enterRpcUrl:{message:"Enter RPC URL"},enterSymbol:{message:"Enter symbol"},enterTokenNameOrAddress:{message:"Enter token name or paste address"},enterYourPassword:{message:"Enter your password"},errorCode:{message:"Code: $1",description:"Displayed error code for debugging purposes. $1 is the error code"},errorGettingSafeChainList:{message:"Error while getting safe chain list, please continue with caution."},errorMessage:{message:"Message: $1",description:"Displayed error message for debugging purposes. $1 is the error message"},errorName:{message:"Code: $1",description:"Displayed error name for debugging purposes. $1 is the error name"},errorPageContactSupport:{message:"Contact support",description:"Button for contact MM support"},errorPageDescribeUsWhatHappened:{message:"Describe what happened",description:"Button for submitting report to sentry"},errorPageInfo:{message:"Your information can’t be shown. Don’t worry, your wallet and funds are safe.",description:"Information banner shown in the error page"},errorPageMessageTitle:{message:"Error message",description:"Title for description, which is displayed for debugging purposes"},errorPageSentryFormTitle:{message:"Describe what happened",description:"In sentry feedback form, The title at the top of the feedback form."},errorPageSentryMessagePlaceholder:{message:"Sharing details like how we can reproduce the bug will help us fix the problem.",description:"In sentry feedback form, The placeholder for the feedback description input field."},errorPageSentrySuccessMessageText:{message:"Thanks! We will take a look soon.",description:"In sentry feedback form, The message displayed after a successful feedback submission."},errorPageTitle:{message:"MetaMask encountered an error",description:"Title of generic error page"},errorPageTryAgain:{message:"Try again",description:"Button for try again"},errorStack:{message:"Stack:",description:"Title for error stack, which is displayed for debugging purposes"},errorWhileConnectingToRPC:{message:"Error while connecting to the custom network."},errorWithSnap:{message:"Error with $1",description:"$1 represents the name of the snap"},estimatedFee:{message:"Estimated fee"},estimatedFeeTooltip:{message:"Amount paid to process the transaction on network."},ethGasPriceFetchWarning:{message:"Backup gas price is provided as the main gas estimation service is unavailable right now."},ethereumProviderAccess:{message:"Grant Ethereum provider access to $1",description:"The parameter is the name of the requesting origin"},ethereumPublicAddress:{message:"Ethereum public address"},etherscan:{message:"Etherscan"},etherscanView:{message:"View account on Etherscan"},etherscanViewOn:{message:"View on Etherscan"},existingChainId:{message:"The information you have entered is associated with an existing chain ID."},expandView:{message:"Expand view"},experimental:{message:"Experimental"},exploreweb3:{message:"Explore web3"},exportYourData:{message:"Export your data"},exportYourDataButton:{message:"Download"},exportYourDataDescription:{message:"You can export data like your contacts and preferences."},extendWalletWithSnaps:{message:"Explore community-built Snaps to customize your web3 experience",description:"Banner description displayed on Snaps list page in Settings when less than 6 Snaps is installed."},externalAccount:{message:"External Account"},externalExtension:{message:"External extension"},externalNameSourcesSetting:{message:"Proposed nicknames"},externalNameSourcesSettingDescription:{message:"We’ll fetch proposed nicknames for addresses you interact with from third-party sources like Etherscan, Infura, and Lens Protocol. These sources will be able to see those addresses and your IP address. Your account address won’t be exposed to third parties."},failed:{message:"Failed"},failedToFetchChainId:{message:"Could not fetch chain ID. Is your RPC URL correct?"},failureMessage:{message:"Something went wrong, and we were unable to complete the action"},fast:{message:"Fast"},feeDetails:{message:"Fee details"},fileImportFail:{message:"File import not working? Click here!",description:"Helps user import their account from a JSON file"},flaskWelcomeUninstall:{message:"you should uninstall this extension",description:"This request is shown on the Flask Welcome screen. It is intended for non-developers, and will be bolded."},flaskWelcomeWarning1:{message:"Flask is for developers to experiment with new unstable APIs. Unless you are a developer or beta tester, $1.",description:"This is a warning shown on the Flask Welcome screen, intended to encourage non-developers not to proceed any further. $1 is the bolded message 'flaskWelcomeUninstall'"},flaskWelcomeWarning2:{message:"We do not guarantee the safety or stability of this extension. The new APIs offered by Flask are not hardened against phishing attacks, meaning that any site or snap that requires Flask might be a malicious attempt to steal your assets.",description:"This explains the risks of using MetaMask Flask"},flaskWelcomeWarning3:{message:"All Flask APIs are experimental. They may be changed or removed without notice, or they might stay on Flask indefinitely without ever being migrated to stable MetaMask. Use them at your own risk.",description:"This message warns developers about unstable Flask APIs"},flaskWelcomeWarning4:{message:"Make sure to disable your regular MetaMask extension when using Flask.",description:"This message calls to pay attention about multiple versions of MetaMask running on the same site (Flask + Prod)"},flaskWelcomeWarningAcceptButton:{message:"I accept the risks",description:"this text is shown on a button, which the user presses to confirm they understand the risks of using Flask"},floatAmountToken:{message:"Token amount must be an integer"},followUsOnTwitter:{message:"Follow us on Twitter"},forbiddenIpfsGateway:{message:"Forbidden IPFS Gateway: Please specify a CID gateway"},forgetDevice:{message:"Forget this device"},forgotPassword:{message:"Forgot password?"},form:{message:"form"},from:{message:"From"},fromAddress:{message:"From: $1",description:"$1 is the address to include in the From label. It is typically shortened first using shortenAddress"},fromTokenLists:{message:"From token lists: $1"},function:{message:"Function: $1"},fundingMethod:{message:"Funding method"},gas:{message:"Gas"},gasDisplayAcknowledgeDappButtonText:{message:"Edit suggested gas fee"},gasDisplayDappWarning:{message:"This gas fee has been suggested by $1. Overriding this may cause a problem with your transaction. Please reach out to $1 if you have questions.",description:"$1 represents the Dapp's origin"},gasFee:{message:"Gas fee"},gasLimit:{message:"Gas limit"},gasLimitInfoTooltipContent:{message:"Gas limit is the maximum amount of units of gas you are willing to spend."},gasLimitRecommended:{message:"Recommended gas limit is $1. If the gas limit is less than that, it may fail."},gasLimitTooLow:{message:"Gas limit must be at least 21000"},gasLimitTooLowWithDynamicFee:{message:"Gas limit must be at least $1",description:"$1 is the custom gas limit, in decimal."},gasLimitV2:{message:"Gas limit"},gasOption:{message:"Gas option"},gasPrice:{message:"Gas price (GWEI)"},gasPriceExcessive:{message:"Your gas fee is set unnecessarily high. Consider lowering the amount."},gasPriceExcessiveInput:{message:"Gas price is excessive"},gasPriceExtremelyLow:{message:"Gas price extremely low"},gasPriceFetchFailed:{message:"Gas price estimation failed due to network error."},gasPriceInfoTooltipContent:{message:"Gas price specifies the amount of Ether you are willing to pay for each unit of gas."},gasTimingHoursShort:{message:"$1 hrs",description:"$1 represents a number of hours"},gasTimingLow:{message:"Slow"},gasTimingMinutesShort:{message:"$1 min",description:"$1 represents a number of minutes"},gasTimingSecondsShort:{message:"$1 sec",description:"$1 represents a number of seconds"},gasUsed:{message:"Gas used"},general:{message:"General"},generalCameraError:{message:"We couldn't access your camera. Please give it another try."},generalCameraErrorTitle:{message:"Something went wrong...."},generalDescription:{message:"Sync settings across devices, select network preferences, and track token data"},genericExplorerView:{message:"View account on $1"},goBack:{message:"Go back"},goToSite:{message:"Go to site"},goerli:{message:"Goerli test network"},gotIt:{message:"Got it"},grantExactAccess:{message:"Grant exact access"},gwei:{message:"GWEI"},hardware:{message:"Hardware"},hardwareWalletConnected:{message:"Hardware wallet connected"},hardwareWalletLegacyDescription:{message:"(legacy)",description:"Text representing the MEW path"},hardwareWalletSubmissionWarningStep1:{message:"Be sure your $1 is plugged in and to select the Ethereum app."},hardwareWalletSubmissionWarningStep2:{message:'Enable "smart contract data" or "blind signing" on your $1 device.'},hardwareWalletSubmissionWarningTitle:{message:"Prior to clicking Submit:"},hardwareWalletSupportLinkConversion:{message:"click here"},hardwareWallets:{message:"Connect a hardware wallet"},hardwareWalletsInfo:{message:"Hardware wallet integrations use API calls to external servers, which can see your IP address and the smart contract addresses you interact with."},hardwareWalletsMsg:{message:"Select a hardware wallet you would like to use with MetaMask."},here:{message:"here",description:"as in -click here- for more information (goes with troubleTokenBalances)"},hexData:{message:"Hex data"},hiddenAccounts:{message:"Hidden accounts"},hide:{message:"Hide"},hideAccount:{message:"Hide account"},hideAdvancedDetails:{message:"Hide advanced details"},hideSeedPhrase:{message:"Hide seed phrase"},hideSentitiveInfo:{message:"Hide sensitive information"},hideTokenPrompt:{message:"Hide token?"},hideTokenSymbol:{message:"Hide $1",description:"$1 is the symbol for a token (e.g. 'DAI')"},hideZeroBalanceTokens:{message:"Hide tokens without balance"},high:{message:"Aggressive"},highGasSettingToolTipMessage:{message:"High probability, even in volatile markets. Use $1 to cover surges in network traffic due to things like popular NFT drops.",description:"$1 is key 'high' (text: 'Aggressive') separated here so that it can be passed in with bold font-weight"},highLowercase:{message:"high"},highestCurrentBid:{message:"Highest current bid"},highestFloorPrice:{message:"Highest floor price"},history:{message:"History"},holdToRevealContent1:{message:"Your Secret Recovery Phrase provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContent2'"},holdToRevealContent2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContent1'"},holdToRevealContent3:{message:"Do not share this with anyone. $1 $2",description:"$1 is a message from 'holdToRevealContent4' and $2 is a text link with the message from 'holdToRevealContent5'"},holdToRevealContent4:{message:"MetaMask Support will not request this,",description:"Part of 'holdToRevealContent3'"},holdToRevealContent5:{message:"but phishers might.",description:"The text link in 'holdToRevealContent3'"},holdToRevealContentPrivateKey1:{message:"Your Private Key provides $1",description:"$1 is a bolded text with the message from 'holdToRevealContentPrivateKey2'"},holdToRevealContentPrivateKey2:{message:"full access to your wallet and funds.",description:"Is the bolded text in 'holdToRevealContentPrivateKey2'"},holdToRevealLockedLabel:{message:"hold to reveal circle locked"},holdToRevealPrivateKey:{message:"Hold to reveal Private Key"},holdToRevealPrivateKeyTitle:{message:"Keep your private key safe"},holdToRevealSRP:{message:"Hold to reveal SRP"},holdToRevealSRPTitle:{message:"Keep your SRP safe"},holdToRevealUnlockedLabel:{message:"hold to reveal circle unlocked"},honeypotDescription:{message:"This token might pose a honeypot risk. It is advised to conduct due diligence before interacting to prevent any potential financial loss."},honeypotTitle:{message:"Honey Pot"},howNetworkFeesWorkExplanation:{message:"Estimated fee required to process the transaction. The max fee is $1."},howQuotesWork:{message:"How quotes work"},howQuotesWorkExplanation:{message:"This quote has the best return of the quotes we searched. This is based on the swap rate, which includes bridging fees and a $1% MetaMask fee, minus gas fees. Gas fees depend on how busy the network is and how complex the transaction is."},id:{message:"ID"},ifYouGetLockedOut:{message:"If you get locked out of the app or get a new device, you will lose your funds. Be sure to back up your Secret Recovery Phrase in $1 ",description:"$1 is the menu path to be shown with font weight bold"},ignoreAll:{message:"Ignore all"},ignoreTokenWarning:{message:"If you hide tokens, they will not be shown in your wallet. However, you can still add them by searching for them."},imToken:{message:"imToken"},import:{message:"Import",description:"Button to import an account from a selected file"},importAccountError:{message:"Error importing account."},importAccountErrorIsSRP:{message:"You have entered a Secret Recovery Phrase (or mnemonic). To import an account here, you have to enter a private key, which is a hexadecimal string of length 64."},importAccountErrorNotAValidPrivateKey:{message:"This is not a valid private key. You have entered a hexadecimal string, but it must be 64 characters long."},importAccountErrorNotHexadecimal:{message:"This is not a valid private key. You must enter a hexadecimal string of length 64."},importAccountJsonLoading1:{message:"Expect this JSON import to take a few minutes and freeze MetaMask."},importAccountJsonLoading2:{message:"We apologize, and we will make it faster in the future."},importAccountMsg:{message:"Imported accounts won’t be associated with your MetaMask Secret Recovery Phrase. Learn more about imported accounts"},importMyWallet:{message:"Import my wallet"},importNFT:{message:"Import NFT"},importNFTAddressToolTip:{message:"On OpenSea, for example, on the NFT's page under Details, there is a blue hyperlinked value labeled 'Contract Address'. If you click on this, it will take you to the contract's address on Etherscan; at the top-left of that page, there should be an icon labeled 'Contract', and to the right, a long string of letters and numbers. This is the address of the contract that created your NFT. Click on the 'copy' icon to the right of the address, and you'll have it on your clipboard."},importNFTPage:{message:"Import NFT page"},importNFTTokenIdToolTip:{message:"An NFT's ID is a unique identifier since no two NFTs are alike. Again, on OpenSea this number is under 'Details'. Make a note of it, or copy it onto your clipboard."},importNWordSRP:{message:"I have a $1 word recovery phrase",description:"$1 is the number of words in the recovery phrase"},importPrivateKey:{message:"Private Key"},importSRPDescription:{message:"Import an existing wallet with your 12 or 24-word secret recovery phrase."},importSRPNumberOfWordsError:{message:"Secret Recovery Phrases contain 12, or 24 words"},importSRPWordError:{message:"Word $1 is incorrect or misspelled.",description:"$1 is the word that is incorrect or misspelled"},importSRPWordErrorAlternative:{message:"Word $1 and $2 is incorrect or misspelled.",description:"$1 and $2 are multiple words that are mispelled."},importSecretRecoveryPhrase:{message:"Import Secret Recovery Phrase"},importSelectedTokens:{message:"Import selected tokens?"},importSelectedTokensDescription:{message:"Only the tokens you've selected will appear in your wallet. You can always import hidden tokens later by searching for them."},importTokenQuestion:{message:"Import token?"},importTokenWarning:{message:"Anyone can create a token with any name, including fake versions of existing tokens. Add and trade at your own risk!"},importTokensCamelCase:{message:"Import tokens"},importTokensError:{message:"We could not import the tokens. Please try again later."},importWallet:{message:"Import wallet"},importWalletOrAccountHeader:{message:"Import a wallet or account"},importWalletSuccess:{message:"Secret Recovery Phrase $1 imported",description:"$1 is the index of the secret recovery phrase"},importWithCount:{message:"Import $1",description:"$1 will the number of detected tokens that are selected for importing, if all of them are selected then $1 will be all"},imported:{message:"Imported",description:"status showing that an account has been fully loaded into the keyring"},inYourSettings:{message:"in your Settings"},included:{message:"included"},includesXTransactions:{message:"Includes $1 transactions"},infuraBlockedNotification:{message:"MetaMask is unable to connect to the blockchain host. Review possible reasons $1.",description:"$1 is a clickable link with with text defined by the 'here' key"},initialTransactionConfirmed:{message:"Your initial transaction was confirmed by the network. Click OK to go back."},insightsFromSnap:{message:"Insights from $1",description:"$1 represents the name of the snap"},install:{message:"Install"},installOrigin:{message:"Install origin"},installRequest:{message:"Add to MetaMask"},installedOn:{message:"Installed on $1",description:"$1 is the date when the snap has been installed"},insufficientBalance:{message:"Insufficient balance."},insufficientFunds:{message:"Insufficient funds."},insufficientFundsForGas:{message:"Insufficient funds for gas"},insufficientLockedLiquidityDescription:{message:"The lack of adequately locked or burned liquidity leaves the token vulnerable to sudden liquidity withdrawals, potentially causing market instability."},insufficientLockedLiquidityTitle:{message:"Insufficient Locked Liquidity"},insufficientTokens:{message:"Insufficient tokens."},interactWithSmartContract:{message:"Smart contract"},interactingWith:{message:"Interacting with"},interactingWithTransactionDescription:{message:"This is the contract you're interacting with. Protect yourself from scammers by verifying the details."},interaction:{message:"Interaction"},invalidAddress:{message:"Invalid address"},invalidAddressRecipient:{message:"Recipient address is invalid"},invalidAssetType:{message:"This asset is an NFT and needs to be re-added on the Import NFTs page found under the NFTs tab"},invalidChainIdTooBig:{message:"Invalid chain ID. The chain ID is too big."},invalidCustomNetworkAlertContent1:{message:"The chain ID for custom network '$1' has to be re-entered.",description:"$1 is the name/identifier of the network."},invalidCustomNetworkAlertContent2:{message:"To protect you from malicious or faulty network providers, chain IDs are now required for all custom networks."},invalidCustomNetworkAlertContent3:{message:"Go to Settings > Network and enter the chain ID. You can find the chain IDs of most popular networks on $1.",description:"$1 is a link to https://chainid.network"},invalidCustomNetworkAlertTitle:{message:"Invalid custom network"},invalidHexData:{message:"Invalid hex data"},invalidHexNumber:{message:"Invalid hexadecimal number."},invalidHexNumberLeadingZeros:{message:"Invalid hexadecimal number. Remove any leading zeros."},invalidIpfsGateway:{message:"Invalid IPFS Gateway: The value must be a valid URL"},invalidNumber:{message:"Invalid number. Enter a decimal or '0x'-prefixed hexadecimal number."},invalidNumberLeadingZeros:{message:"Invalid number. Remove any leading zeros."},invalidRPC:{message:"Invalid RPC URL"},invalidSeedPhrase:{message:"Invalid Secret Recovery Phrase"},invalidSeedPhraseCaseSensitive:{message:"Invalid input! Secret Recovery Phrase is case sensitive."},ipfsGateway:{message:"IPFS gateway"},ipfsGatewayDescription:{message:"MetaMask uses third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionOne:{message:"We use third-party services to show images of your NFTs stored on IPFS, display information related to ENS addresses entered in your browser's address bar, and fetch icons for different tokens. Your IP address may be exposed to these services when you’re using them."},ipfsToggleModalDescriptionTwo:{message:"Selecting Confirm turns on IPFS resolution. You can turn it off in $1 at any time.",description:"$1 is the method to turn off ipfs"},ipfsToggleModalSettings:{message:"Settings > Security and privacy"},isSigningOrSubmitting:{message:"A previous transaction is still being signed or submitted"},jazzAndBlockies:{message:"Jazzicons and Blockies are two different styles of unique icons that help you identify an account at a glance."},jazzicons:{message:"Jazzicons"},jsonFile:{message:"JSON File",description:"format for importing an account"},keepReminderOfSRP:{message:"Keep a reminder of your Secret Recovery Phrase somewhere safe. If you lose it, no one can help you get it back. Even worse, you won’t be able access to your wallet ever again. $1",description:"$1 is a learn more link"},keyringAccountName:{message:"Account name"},keyringAccountPublicAddress:{message:"Public Address"},keyringSnapRemovalResult1:{message:"$1 $2removed",description:"Displays the result after removal of a keyring snap. $1 is the snap name, $2 is whether it is successful or not"},keyringSnapRemovalResultNotSuccessful:{message:"not ",description:"Displays the `not` word in $2."},keyringSnapRemoveConfirmation:{message:"Type $1 to confirm you want to remove this snap:",description:"Asks user to input the name nap prior to deleting the snap. $1 is the snap name"},keystone:{message:"Keystone"},knownAddressRecipient:{message:"Known contract address."},knownTokenWarning:{message:"This action will edit tokens that are already listed in your wallet, which can be used to phish you. Only approve if you are certain that you mean to change what these tokens represent. Learn more about $1"},l1Fee:{message:"L1 fee"},l1FeeTooltip:{message:"L1 gas fee"},l2Fee:{message:"L2 fee"},l2FeeTooltip:{message:"L2 gas fee"},lastConnected:{message:"Last connected"},lastSold:{message:"Last sold"},lavaDomeCopyWarning:{message:"For your safety, selecting this text is not available right now."},layer1Fees:{message:"Layer 1 fees"},layer2Fees:{message:"Layer 2 fees"},learnHow:{message:"Learn how"},learnMore:{message:"learn more"},learnMoreAboutGas:{message:"Want to $1 about gas?",description:"$1 will be replaced by the learnMore translation key"},learnMoreAboutPrivacy:{message:"Learn more about privacy best practices."},learnMoreKeystone:{message:"Learn More"},learnMoreUpperCase:{message:"Learn more"},learnMoreUpperCaseWithDot:{message:"Learn more."},learnScamRisk:{message:"scams and security risks."},leaveMetaMask:{message:"Leave MetaMask?"},leaveMetaMaskDesc:{message:"You're about to visit a site outside of MetaMask. Double-check the URL before continuing."},ledgerAccountRestriction:{message:"You need to make use your last account before you can add a new one."},ledgerConnectionInstructionCloseOtherApps:{message:"Close any other software connected to your device and then click here to refresh."},ledgerConnectionInstructionHeader:{message:"Prior to clicking confirm:"},ledgerConnectionInstructionStepFour:{message:'Enable "smart contract data" or "blind signing" on your Ledger device.'},ledgerConnectionInstructionStepThree:{message:"Be sure your Ledger is plugged in and to select the Ethereum app."},ledgerDeviceOpenFailureMessage:{message:"The Ledger device failed to open. Your Ledger might be connected to other software. Please close Ledger Live or other applications connected to your Ledger device, and try to connect again."},ledgerErrorConnectionIssue:{message:"Reconnect your ledger, open the ETH app and try again."},ledgerErrorDevicedLocked:{message:"Your Ledger is locked. Unlock it then try again."},ledgerErrorEthAppNotOpen:{message:"To solve the issue, open the ETH application on your device and retry."},ledgerErrorTransactionDataNotPadded:{message:"Ethereum transaction's input data isn't sufficiently padded."},ledgerLiveApp:{message:"Ledger Live App"},ledgerLocked:{message:"Cannot connect to Ledger device. Please make sure your device is unlocked and Ethereum app is opened."},ledgerMultipleDevicesUnsupportedErrorMessage:{message:"Multiple Ledger devices cannot be connected at the same time. To connect a new Ledger device, you'll need to first disconnect the previous one."},ledgerTimeout:{message:"Ledger Live is taking too long to respond or connection timeout. Make sure Ledger Live app is opened and your device is unlocked."},ledgerWebHIDNotConnectedErrorMessage:{message:"The ledger device was not connected. If you wish to connect your Ledger, please click 'Continue' again and approve HID connection",description:"An error message shown to the user during the hardware connect flow."},levelArrow:{message:"level arrow"},lightTheme:{message:"Light"},likeToImportToken:{message:"Would you like to import this token?"},likeToImportTokens:{message:"Would you like to import these tokens?"},lineaGoerli:{message:"Linea Goerli test network"},lineaMainnet:{message:"Linea Mainnet"},lineaSepolia:{message:"Linea Sepolia test network"},link:{message:"Link"},linkCentralizedExchanges:{message:"Link your Coinbase or Binance accounts to transfer crypto to MetaMask for free."},links:{message:"Links"},loadMore:{message:"Load more"},loading:{message:"Loading..."},loadingScreenSnapMessage:{message:"Please complete the transaction on the Snap."},loadingTokenList:{message:"Loading token list"},localhost:{message:"Localhost 8545"},lock:{message:"Lock"},lockMetaMask:{message:"Lock MetaMask"},lockTimeInvalid:{message:"Lock time must be a number between 0 and 10080"},logo:{message:"$1 logo",description:"$1 is the name of the ticker"},low:{message:"Low"},lowEstimatedReturnTooltipMessage:{message:"You’ll pay more than $1% of your starting amount in fees. Check your receiving amount and network fees."},lowEstimatedReturnTooltipTitle:{message:"High cost"},lowGasSettingToolTipMessage:{message:"Use $1 to wait for a cheaper price. Time estimates are much less accurate as prices are somewhat unpredictable.",description:"$1 is key 'low' separated here so that it can be passed in with bold font-weight"},lowLowercase:{message:"low"},mainnet:{message:"Ethereum Mainnet"},mainnetToken:{message:"This address matches a known Ethereum Mainnet token address. Recheck the contract address and network for the token you are trying to add."},makeAnotherSwap:{message:"Create a new swap"},makeSureNoOneWatching:{message:"Make sure nobody is looking",description:"Warning to users to be care while creating and saving their new Secret Recovery Phrase"},manageDefaultSettings:{message:"Manage default privacy settings"},manageInstitutionalWallets:{message:"Manage Institutional Wallets"},manageInstitutionalWalletsDescription:{message:"Turn this on to enable institutional wallets."},managePermissions:{message:"Manage permissions"},marketCap:{message:"Market cap"},marketDetails:{message:"Market details"},max:{message:"Max"},maxBaseFee:{message:"Max base fee"},maxFee:{message:"Max fee"},maxFeeTooltip:{message:"A maximum fee provided to pay for the transaction."},maxPriorityFee:{message:"Max priority fee"},medium:{message:"Market"},mediumGasSettingToolTipMessage:{message:"Use $1 for fast processing at current market price.",description:"$1 is key 'medium' (text: 'Market') separated here so that it can be passed in with bold font-weight"},memo:{message:"memo"},message:{message:"Message"},metaMaskConnectStatusParagraphOne:{message:"You now have more control over your account connections in MetaMask."},metaMaskConnectStatusParagraphThree:{message:"Click it to manage your connected accounts."},metaMaskConnectStatusParagraphTwo:{message:"The connection status button shows if the website you’re visiting is connected to your currently selected account."},metaMetricsIdNotAvailableError:{message:"Since you've never opted into MetaMetrics, there's no data to delete here."},metadataModalSourceTooltip:{message:"$1 is hosted on npm and $2 is this Snap’s unique identifier.",description:"$1 is the snap name and $2 is the snap NPM id."},metamaskNotificationsAreOff:{message:"Wallet notifications are currently not active."},metamaskSwapsOfflineDescription:{message:"MetaMask Swaps is undergoing maintenance. Please check back later."},metamaskVersion:{message:"MetaMask Version"},methodData:{message:"Method"},methodDataTransactionDesc:{message:"Function executed based on decoded input data."},methodNotSupported:{message:"Not supported with this account."},metrics:{message:"Metrics"},millionAbbreviation:{message:"M",description:"Shortened form of 'million'"},mismatchedChainLinkText:{message:"verify the network details",description:"Serves as link text for the 'mismatchedChain' key. This text will be embedded inside the translation for that key."},mismatchedChainRecommendation:{message:"We recommend that you $1 before proceeding.",description:"$1 is a clickable link with text defined by the 'mismatchedChainLinkText' key. The link will open to instructions for users to validate custom network details."},mismatchedNetworkName:{message:"According to our record the network name may not correctly match this chain ID."},mismatchedNetworkSymbol:{message:"The submitted currency symbol does not match what we expect for this chain ID."},mismatchedRpcChainId:{message:"Chain ID returned by the custom network does not match the submitted chain ID."},mismatchedRpcUrl:{message:"According to our records the submitted RPC URL value does not match a known provider for this chain ID."},missingSetting:{message:"Can't find a setting?"},missingSettingRequest:{message:"Request here"},more:{message:"more"},moreAccounts:{message:"+ $1 more accounts",description:"$1 is the number of accounts"},moreNetworks:{message:"+ $1 more networks",description:"$1 is the number of networks"},moreQuotes:{message:"More quotes"},multichainAddEthereumChainConfirmationDescription:{message:"You're adding this network to MetaMask and giving this site permission to use it."},multichainQuoteCardBridgingLabel:{message:"Bridging"},multichainQuoteCardQuoteLabel:{message:"Quote"},multichainQuoteCardTimeLabel:{message:"Time"},multipleSnapConnectionWarning:{message:"$1 wants to use $2 Snaps",description:"$1 is the dapp and $2 is the number of snaps it wants to connect to."},mustSelectOne:{message:"Must select at least 1 token."},name:{message:"Name"},nameAddressLabel:{message:"Address",description:"Label above address field in name component modal."},nameAlreadyInUse:{message:"Name is already in use"},nameInstructionsNew:{message:"If you know this address, give it a nickname to recognize it in the future.",description:"Instruction text in name component modal when value is not recognised."},nameInstructionsRecognized:{message:"This address has a default nickname, but you can edit it or explore other suggestions.",description:"Instruction text in name component modal when value is recognized but not saved."},nameInstructionsSaved:{message:"You've added a nickname for this address before. You can edit or view other suggested nicknames.",description:"Instruction text in name component modal when value is saved."},nameLabel:{message:"Nickname",description:"Label above name input field in name component modal."},nameModalMaybeProposedName:{message:"Maybe: $1",description:"$1 is the proposed name"},nameModalTitleNew:{message:"Unknown address",description:"Title of the modal created by the name component when value is not recognised."},nameModalTitleRecognized:{message:"Recognized address",description:"Title of the modal created by the name component when value is recognized but not saved."},nameModalTitleSaved:{message:"Saved address",description:"Title of the modal created by the name component when value is saved."},nameProviderProposedBy:{message:"Proposed by $1",description:"$1 is the name of the provider"},nameProvider_ens:{message:"Ethereum Name Service (ENS)"},nameProvider_etherscan:{message:"Etherscan"},nameProvider_lens:{message:"Lens Protocol"},nameProvider_token:{message:"MetaMask"},nameSetPlaceholder:{message:"Choose a nickname...",description:"Placeholder text for name input field in name component modal."},nativeNetworkPermissionRequestDescription:{message:"$1 is asking for your approval to:",description:"$1 represents dapp name"},nativeTokenScamWarningConversion:{message:"Edit network details"},nativeTokenScamWarningDescription:{message:"The native token symbol does not match the expected symbol of the native token for the network with the associated chain ID. You have entered $1 while the expected token symbol is $2. Please verify you are connected to the correct chain.",description:"$1 represents the currency name, $2 represents the expected currency symbol"},nativeTokenScamWarningDescriptionExpectedTokenFallback:{message:"something else",description:"graceful fallback for when token symbol isn't found"},nativeTokenScamWarningTitle:{message:"Unexpected Native Token Symbol",description:"Title for nativeTokenScamWarningDescription"},needHelp:{message:"Need help? Contact $1",description:"$1 represents `needHelpLinkText`, the text which goes in the help link"},needHelpFeedback:{message:"Share your feedback"},needHelpLinkText:{message:"MetaMask support"},needHelpSubmitTicket:{message:"Submit a ticket"},needImportFile:{message:"You must select a file to import.",description:"User is important an account and needs to add a file to continue"},negativeETH:{message:"Can not send negative amounts of ETH."},negativeOrZeroAmountToken:{message:"Cannot send negative or zero amounts of asset."},network:{message:"Network:"},networkChanged:{message:"Network changed"},networkChangedMessage:{message:"You're now transacting on $1.",description:"$1 is the name of the network"},networkDetails:{message:"Network details"},networkFee:{message:"Network fee"},networkIsBusy:{message:"Network is busy. Gas prices are high and estimates are less accurate."},networkMenu:{message:"Network Menu"},networkMenuHeading:{message:"Select a network"},networkName:{message:"Network name"},networkNameArbitrum:{message:"Arbitrum"},networkNameAvalanche:{message:"Avalanche"},networkNameBSC:{message:"BSC"},networkNameBase:{message:"Base"},networkNameBitcoin:{message:"Bitcoin"},networkNameDefinition:{message:"The name associated with this network."},networkNameEthereum:{message:"Ethereum"},networkNameGoerli:{message:"Goerli"},networkNameLinea:{message:"Linea"},networkNameOpMainnet:{message:"OP Mainnet"},networkNamePolygon:{message:"Polygon"},networkNameSolana:{message:"Solana"},networkNameTestnet:{message:"Testnet"},networkNameZkSyncEra:{message:"zkSync Era"},networkOptions:{message:"Network options"},networkPermissionToast:{message:"Network permissions updated"},networkProvider:{message:"Network provider"},networkStatus:{message:"Network status"},networkStatusBaseFeeTooltip:{message:"The base fee is set by the network and changes every 13-14 seconds. Our $1 and $2 options account for sudden increases.",description:"$1 and $2 are bold text for Medium and Aggressive respectively."},networkStatusPriorityFeeTooltip:{message:"Range of priority fees (aka “miner tip”). This goes to miners and incentivizes them to prioritize your transaction."},networkStatusStabilityFeeTooltip:{message:"Gas fees are $1 relative to the past 72 hours.",description:"$1 is networks stability value - stable, low, high"},networkSwitchConnectionError:{message:"We can't connect to $1",description:"$1 represents the network name"},networkURL:{message:"Network URL"},networkURLDefinition:{message:"The URL used to access this network."},networkUrlErrorWarning:{message:"Attackers sometimes mimic sites by making small changes to the site address. Make sure you're interacting with the intended site before you continue. Punycode version: $1",description:"$1 replaced by RPC URL for network"},networks:{message:"Networks"},networksSmallCase:{message:"networks"},nevermind:{message:"Nevermind"},new:{message:"New!"},newAccount:{message:"New account"},newAccountNumberName:{message:"Account $1",description:"Default name of next account to be created on create account screen"},newContact:{message:"New contact"},newContract:{message:"New contract"},newNFTDetectedInImportNFTsMessageStrongText:{message:"Settings > Security and privacy"},newNFTDetectedInImportNFTsMsg:{message:"To use Opensea to see your NFTs, turn on 'Display NFT Media' in $1.",description:"$1 is used for newNFTDetectedInImportNFTsMessageStrongText"},newNFTDetectedInNFTsTabMessage:{message:"Let MetaMask automatically detect and display NFTs in your wallet."},newNFTsAutodetected:{message:"NFT autodetection"},newNetworkAdded:{message:"“$1” was successfully added!"},newNetworkEdited:{message:"“$1” was successfully edited!"},newNftAddedMessage:{message:"NFT was successfully added!"},newPassword:{message:"New password (8 characters min)"},newPrivacyPolicyActionButton:{message:"Read more"},newPrivacyPolicyTitle:{message:"We’ve updated our privacy policy"},newRpcUrl:{message:"New RPC URL"},newTokensImportedMessage:{message:"You’ve successfully imported $1.",description:"$1 is the string of symbols of all the tokens imported"},newTokensImportedTitle:{message:"Token imported"},next:{message:"Next"},nftAddFailedMessage:{message:"NFT can’t be added as the ownership details do not match. Make sure you have entered correct information."},nftAddressError:{message:"This token is an NFT. Add on the $1",description:"$1 is a clickable link with text defined by the 'importNFTPage' key"},nftAlreadyAdded:{message:"NFT has already been added."},nftAutoDetectionEnabled:{message:"NFT autodetection enabled"},nftDisclaimer:{message:"Disclaimer: MetaMask pulls the media file from the source url. This url sometimes gets changed by the marketplace on which the NFT was minted."},nftOptions:{message:"NFT Options"},nftTokenIdPlaceholder:{message:"Enter the token id"},nftWarningContent:{message:"You're granting access to $1, including any you might own in the future. The party on the other end can transfer these NFTs from your wallet at any time without asking you until you revoke this approval. $2",description:"$1 is nftWarningContentBold bold part, $2 is Learn more link"},nftWarningContentBold:{message:"all your $1 NFTs",description:"$1 is name of the collection"},nftWarningContentGrey:{message:"Proceed with caution."},nfts:{message:"NFTs"},nftsPreviouslyOwned:{message:"Previously Owned"},nickname:{message:"Nickname"},noAccountsFound:{message:"No accounts found for the given search query"},noConnectedAccountTitle:{message:"MetaMask isn’t connected to this site"},noConnectionDescription:{message:'To connect to a site, find and select the "connect" button. Remember MetaMask can only connect to sites on web3'},noConversionRateAvailable:{message:"No conversion rate available"},noDomainResolution:{message:"No resolution for domain provided."},noHardwareWalletOrSnapsSupport:{message:"Snaps, and most hardware wallets, will not work with your current browser version."},noNFTs:{message:"No NFTs yet"},noNetworksFound:{message:"No networks found for the given search query"},noOptionsAvailableMessage:{message:"This trade route isn't available right now. Try changing the amount, network, or token and we'll find the best option."},noSnaps:{message:"You don't have any snaps installed."},noThanks:{message:"No thanks"},noTransactions:{message:"You have no transactions"},noWebcamFound:{message:"Your computer's webcam was not found. Please try again."},noWebcamFoundTitle:{message:"Webcam not found"},nonContractAddressAlertDesc:{message:"You're sending call data to an address that isn't a contract. This could cause you to lose funds. Make sure you're using the correct address and network before continuing."},nonContractAddressAlertTitle:{message:"Potential mistake"},nonce:{message:"Nonce"},none:{message:"None"},notBusy:{message:"Not busy"},notCurrentAccount:{message:"Is this the correct account? It's different from the currently selected account in your wallet"},notEnoughBalance:{message:"Insufficient balance"},notEnoughGas:{message:"Not enough gas"},notNow:{message:"Not now"},notificationDetail:{message:"Details"},notificationDetailBaseFee:{message:"Base fee (GWEI)"},notificationDetailGasLimit:{message:"Gas limit (units)"},notificationDetailGasUsed:{message:"Gas used (units)"},notificationDetailMaxFee:{message:"Max fee per gas"},notificationDetailNetwork:{message:"Network"},notificationDetailNetworkFee:{message:"Network fee"},notificationDetailPriorityFee:{message:"Priority fee (GWEI)"},notificationItemCheckBlockExplorer:{message:"Check on the Block Explorer"},notificationItemCollection:{message:"Collection"},notificationItemConfirmed:{message:"Confirmed"},notificationItemError:{message:"Unable to retrieve fees currently"},notificationItemFrom:{message:"From"},notificationItemLidoStakeReadyToBeWithdrawn:{message:"Withdrawal Ready"},notificationItemLidoStakeReadyToBeWithdrawnMessage:{message:"You can now withdraw your unstaked $1"},notificationItemLidoWithdrawalRequestedMessage:{message:"Your request to unstake $1 has been sent"},notificationItemNFTReceivedFrom:{message:"Received NFT from"},notificationItemNFTSentTo:{message:"Sent NFT to"},notificationItemNetwork:{message:"Network"},notificationItemRate:{message:"Rate (fee included)"},notificationItemReceived:{message:"Received"},notificationItemReceivedFrom:{message:"Received from"},notificationItemSent:{message:"Sent"},notificationItemSentTo:{message:"Sent to"},notificationItemStakeCompleted:{message:"Stake completed"},notificationItemStaked:{message:"Staked"},notificationItemStakingProvider:{message:"Staking Provider"},notificationItemStatus:{message:"Status"},notificationItemSwapped:{message:"Swapped"},notificationItemSwappedFor:{message:"for"},notificationItemTo:{message:"To"},notificationItemTransactionId:{message:"Transaction ID"},notificationItemUnStakeCompleted:{message:"UnStaking complete"},notificationItemUnStaked:{message:"Unstaked"},notificationItemUnStakingRequested:{message:"Unstaking requested"},notificationTransactionFailedMessage:{message:"Transaction $1 failed! $2",description:"Content of the browser notification that appears when a transaction fails"},notificationTransactionFailedMessageMMI:{message:"Transaction failed! $1",description:"Content of the browser notification that appears when a transaction fails in MMI"},notificationTransactionFailedTitle:{message:"Failed transaction",description:"Title of the browser notification that appears when a transaction fails"},notificationTransactionSuccessMessage:{message:"Transaction $1 confirmed!",description:"Content of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessTitle:{message:"Confirmed transaction",description:"Title of the browser notification that appears when a transaction is confirmed"},notificationTransactionSuccessView:{message:"View on $1",description:"Additional content in a notification that appears when a transaction is confirmed and has a block explorer URL."},notifications:{message:"Notifications"},notificationsFeatureToggle:{message:"Enable Wallet Notifications",description:"Experimental feature title"},notificationsFeatureToggleDescription:{message:"This enables wallet notifications like send/receive funds or nfts and feature announcements.",description:"Description of the experimental notifications feature"},notificationsMarkAllAsRead:{message:"Mark all as read"},notificationsPageEmptyTitle:{message:"Nothing to see here"},notificationsPageErrorContent:{message:"Please, try to visit this page again."},notificationsPageErrorTitle:{message:"There has been an error"},notificationsPageNoNotificationsContent:{message:"You have not received any notifications yet."},notificationsSettingsBoxError:{message:"Something went wrong. Please try again."},notificationsSettingsPageAllowNotifications:{message:"Stay in the loop on what’s happening in your wallet with notifications. To use notifications, we use a profile to sync some settings across your devices. $1"},notificationsSettingsPageAllowNotificationsLink:{message:"Learn how we protect your privacy while using this feature."},numberOfNewTokensDetectedPlural:{message:"$1 new tokens found in this account",description:"$1 is the number of new tokens detected"},numberOfNewTokensDetectedSingular:{message:"1 new token found in this account"},numberOfTokens:{message:"Number of tokens"},ofTextNofM:{message:"of"},off:{message:"Off"},offlineForMaintenance:{message:"Offline for maintenance"},ok:{message:"Ok"},on:{message:"On"},onboardedMetametricsAccept:{message:"I agree"},onboardedMetametricsDisagree:{message:"No thanks"},onboardedMetametricsKey1:{message:"Latest developments"},onboardedMetametricsKey2:{message:"Product features"},onboardedMetametricsKey3:{message:"Other relevant promotional materials"},onboardedMetametricsLink:{message:"MetaMetrics"},onboardedMetametricsParagraph1:{message:"In addition to $1, we'd like to use data to understand how you interact with marketing communications.",description:"$1 represents the 'onboardedMetametricsLink' locale string"},onboardedMetametricsParagraph2:{message:"This helps us personalize what we share with you, like:"},onboardedMetametricsParagraph3:{message:"Remember, we never sell the data you provide and you can opt out any time."},onboardedMetametricsTitle:{message:"Help us enhance your experience"},onboardingAdvancedPrivacyIPFSDescription:{message:"The IPFS gateway makes it possible to access and view data hosted by third parties. You can add a custom IPFS gateway or continue using the default."},onboardingAdvancedPrivacyIPFSInvalid:{message:"Please enter a valid URL"},onboardingAdvancedPrivacyIPFSTitle:{message:"Add custom IPFS Gateway"},onboardingAdvancedPrivacyIPFSValid:{message:"IPFS gateway URL is valid"},onboardingAdvancedPrivacyNetworkDescription:{message:"We use Infura as our remote procedure call (RPC) provider to offer the most reliable and private access to Ethereum data we can. You can choose your own RPC, but remember that any RPC will receive your IP address and Ethereum wallet to make transactions. Read our $1 to learn more about how Infura handles data."},onboardingAdvancedPrivacyNetworkTitle:{message:"Choose your network"},onboardingCreateWallet:{message:"Create a new wallet"},onboardingImportWallet:{message:"Import an existing wallet"},onboardingMetametricsAgree:{message:"I agree"},onboardingMetametricsDescription:{message:"We’d like to gather basic usage and diagnostics data to improve MetaMask. Know that we never sell the data you provide here."},onboardingMetametricsDescription2:{message:"When we gather metrics, it will always be..."},onboardingMetametricsInfuraTerms:{message:"We’ll let you know if we decide to use this data for other purposes. You can review our $1 for more information. Remember, you can go to settings and opt out at any time.",description:"$1 represents `onboardingMetametricsInfuraTermsPolicy`"},onboardingMetametricsInfuraTermsPolicy:{message:"Privacy Policy"},onboardingMetametricsNeverCollect:{message:"$1 clicks and views on the app are stored, but other details (like your public address) are not.",description:"$1 represents `onboardingMetametricsNeverCollectEmphasis`"},onboardingMetametricsNeverCollectEmphasis:{message:"Private:"},onboardingMetametricsNeverCollectIP:{message:"$1 we temporarily use your IP address to detect a general location (like your country or region), but it's never stored.",description:"$1 represents `onboardingMetametricsNeverCollectIPEmphasis`"},onboardingMetametricsNeverCollectIPEmphasis:{message:"General:"},onboardingMetametricsNeverSellData:{message:"$1 you decide if you want to share or delete your usage data via settings any time.",description:"$1 represents `onboardingMetametricsNeverSellDataEmphasis`"},onboardingMetametricsNeverSellDataEmphasis:{message:"Optional:"},onboardingMetametricsPrivacyDescription:{message:"Learn how we protect your privacy while collecting usage data for your profile."},onboardingMetametricsTitle:{message:"Help us improve MetaMask"},onboardingMetametricsUseDataCheckbox:{message:"We’ll use this data to learn how you interact with our marketing communications. We may share relevant news (like product features)."},onboardingPinExtensionBillboardAccess:{message:"Full access"},onboardingPinExtensionBillboardDescription:{message:"These extensions can see and change information"},onboardingPinExtensionBillboardDescription2:{message:"on this site."},onboardingPinExtensionBillboardTitle:{message:"Extensions"},onboardingPinExtensionChrome:{message:"Click the browser extension icon"},onboardingPinExtensionDescription:{message:"Pin MetaMask on your browser so it's accessible and easy to view transaction confirmations."},onboardingPinExtensionDescription2:{message:"You can open MetaMask by clicking on the extension and access your wallet with 1 click."},onboardingPinExtensionDescription3:{message:"Click browser extension icon to access it instantly"},onboardingPinExtensionLabel:{message:"Pin MetaMask"},onboardingPinExtensionStep1:{message:"1"},onboardingPinExtensionStep2:{message:"2"},onboardingPinExtensionTitle:{message:"Your MetaMask install is complete!"},oneDayAbbreviation:{message:"1D",description:"Shortened form of '1 day'"},oneMonthAbbreviation:{message:"1M",description:"Shortened form of '1 month'"},oneWeekAbbreviation:{message:"1W",description:"Shortened form of '1 week'"},oneYearAbbreviation:{message:"1Y",description:"Shortened form of '1 year'"},onlyConnectTrust:{message:"Only connect with sites you trust. $1",description:"Text displayed above the buttons for connection confirmation. $1 is the link to the learn more web page."},openFullScreenForLedgerWebHid:{message:"Go to full screen to connect your Ledger.",description:"Shown to the user on the confirm screen when they are viewing MetaMask in a popup window but need to connect their ledger via webhid."},openInBlockExplorer:{message:"Open in block explorer"},optional:{message:"Optional"},options:{message:"Options"},origin:{message:"Origin"},originChanged:{message:"Site changed"},originChangedMessage:{message:"You're now reviewing a request from $1.",description:"$1 is the name of the origin"},osTheme:{message:"System"},otherSnaps:{message:"other snaps",description:"Used in the 'permission_rpc' message."},outdatedBrowserNotification:{message:"Your browser is out of date. If you don't update your browser, you won't be able to get security patches and new features from MetaMask."},overrideContentSecurityPolicyHeader:{message:"Override Content-Security-Policy header"},overrideContentSecurityPolicyHeaderDescription:{message:"This option is a workaround for a known issue in Firefox, where a dapp's Content-Security-Policy header may prevent the extension from loading properly. Disabling this option is not recommended unless required for specific web page compatibility."},padlock:{message:"Padlock"},participateInMetaMetrics:{message:"Participate in MetaMetrics"},participateInMetaMetricsDescription:{message:"Participate in MetaMetrics to help us make MetaMask better"},password:{message:"Password"},passwordNotLongEnough:{message:"Password not long enough"},passwordSetupDetails:{message:"This password will unlock your MetaMask wallet only on this device. MetaMask can not recover this password."},passwordStrength:{message:"Password strength: $1",description:"Return password strength to the user when user wants to create password."},passwordStrengthDescription:{message:"A strong password can improve the security of your wallet should your device be stolen or compromised."},passwordTermsWarning:{message:"I understand that MetaMask cannot recover this password for me. $1"},passwordsDontMatch:{message:"Passwords don't match"},pastePrivateKey:{message:"Enter your private key string here:",description:"For importing an account from a private key"},pending:{message:"Pending"},pendingConfirmationAddNetworkAlertMessage:{message:"Updating network will cancel $1 pending transactions from this site.",description:"Number of transactions."},pendingConfirmationSwitchNetworkAlertMessage:{message:"Switching network will cancel $1 pending transactions from this site.",description:"Number of transactions."},pendingTransactionAlertMessage:{message:"This transaction won't go through until a previous transaction is complete. $1",description:"$1 represents the words 'how to cancel or speed up a transaction' in a hyperlink"},pendingTransactionAlertMessageHyperlink:{message:"Learn how to cancel or speed up a transaction.",description:"The text for the hyperlink in the pending transaction alert message"},permissionDetails:{message:"Permission details"},permissionFor:{message:"Permission for"},permissionFrom:{message:"Permission from"},permissionRequested:{message:"Requested now"},permissionRequestedForAccounts:{message:"Requested now for $1",description:"Permission cell status for requested permission including accounts, rendered as AvatarGroup which is $1."},permissionRevoked:{message:"Revoked in this update"},permissionRevokedForAccounts:{message:"Revoked in this update for $1",description:"Permission cell status for revoked permission including accounts, rendered as AvatarGroup which is $1."},permission_accessNamedSnap:{message:"Connect to $1.",description:"The description for the `wallet_snap` permission. $1 is the human-readable name of the snap."},permission_accessNetwork:{message:"Access the internet.",description:"The description of the `endowment:network-access` permission."},permission_accessNetworkDescription:{message:"Allow $1 to access the internet. This can be used to both send and receive data with third-party servers.",description:"An extended description of the `endowment:network-access` permission. $1 is the snap name."},permission_accessSnap:{message:"Connect to the $1 snap.",description:"The description for the `wallet_snap` permission. $1 is the name of the snap."},permission_accessSnapDescription:{message:"Allow the website or snap to interact with $1.",description:"The description for the `wallet_snap_*` permission. $1 is the name of the Snap."},permission_assets:{message:"Display account assets in MetaMask.",description:"The description for the `endowment:assets` permission."},permission_assetsDescription:{message:"Allow $1 to provide asset information to the MetaMask client. The assets can be onchain or offchain.",description:"An extended description for the `endowment:assets` permission. $1 is the name of the Snap."},permission_cronjob:{message:"Schedule and execute periodic actions.",description:"The description for the `snap_cronjob` permission"},permission_cronjobDescription:{message:"Allow $1 to perform actions that run periodically at fixed times, dates, or intervals. This can be used to trigger time-sensitive interactions or notifications.",description:"An extended description for the `snap_cronjob` permission. $1 is the snap name."},permission_dialog:{message:"Display dialog windows in MetaMask.",description:"The description for the `snap_dialog` permission"},permission_dialogDescription:{message:"Allow $1 to display MetaMask popups with custom text, input field, and buttons to approve or reject an action.\nCan be used to create e.g. alerts, confirmations, and opt-in flows for a snap.",description:"An extended description for the `snap_dialog` permission. $1 is the snap name."},permission_ethereumAccounts:{message:"See address, account balance, activity and suggest transactions to approve",description:"The description for the `eth_accounts` permission"},permission_ethereumProvider:{message:"Access the Ethereum provider.",description:"The description for the `endowment:ethereum-provider` permission"},permission_ethereumProviderDescription:{message:"Allow $1 to communicate with MetaMask directly, in order for it to read data from the blockchain and suggest messages and transactions.",description:"An extended description for the `endowment:ethereum-provider` permission. $1 is the snap name."},permission_getEntropy:{message:"Derive arbitrary keys unique to $1.",description:"The description for the `snap_getEntropy` permission. $1 is the snap name."},permission_getEntropyDescription:{message:"Allow $1 to derive arbitrary keys unique to $1, without exposing them. These keys are separate from your MetaMask account(s) and not related to your private keys or Secret Recovery Phrase. Other snaps cannot access this information.",description:"An extended description for the `snap_getEntropy` permission. $1 is the snap name."},permission_getLocale:{message:"View your preferred language.",description:"The description for the `snap_getLocale` permission"},permission_getLocaleDescription:{message:"Let $1 access your preferred language from your MetaMask settings. This can be used to localize and display $1's content using your language.",description:"An extended description for the `snap_getLocale` permission. $1 is the snap name."},permission_getPreferences:{message:"See information like your preferred language and fiat currency.",description:"The description for the `snap_getPreferences` permission"},permission_getPreferencesDescription:{message:"Let $1 access information like your preferred language and fiat currency in your MetaMask settings. This helps $1 display content tailored to your preferences. ",description:"An extended description for the `snap_getPreferences` permission. $1 is the snap name."},permission_homePage:{message:"Display a custom screen",description:"The description for the `endowment:page-home` permission"},permission_homePageDescription:{message:"Let $1 display a custom home screen in MetaMask. This can be used for user interfaces, configuration, and dashboards.",description:"An extended description for the `endowment:page-home` permission. $1 is the snap name."},permission_keyring:{message:"Allow requests for adding and controlling Ethereum accounts",description:"The description for the `endowment:keyring` permission"},permission_keyringDescription:{message:"Let $1 receive requests to add or remove accounts, plus sign and transact on behalf of these accounts.",description:"An extended description for the `endowment:keyring` permission. $1 is the snap name."},permission_lifecycleHooks:{message:"Use lifecycle hooks.",description:"The description for the `endowment:lifecycle-hooks` permission"},permission_lifecycleHooksDescription:{message:"Allow $1 to use lifecycle hooks to run code at specific times during its lifecycle.",description:"An extended description for the `endowment:lifecycle-hooks` permission. $1 is the snap name."},permission_manageAccounts:{message:"Add and control Ethereum accounts",description:"The description for `snap_manageAccounts` permission"},permission_manageAccountsDescription:{message:"Allow $1 to add or remove Ethereum accounts, then transact and sign with these accounts.",description:"An extended description for the `snap_manageAccounts` permission. $1 is the snap name."},permission_manageBip32Keys:{message:"Manage $1 accounts.",description:"The description for the `snap_getBip32Entropy` permission. $1 is a derivation path, e.g. 'm/44'/0'/0' (secp256k1)'."},permission_manageBip44AndBip32KeysDescription:{message:"Allow $1 to manage accounts and assets on the requested network. These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions. $1 is the snap name."},permission_manageBip44Keys:{message:"Manage $1 accounts.",description:"The description for the `snap_getBip44Entropy` permission. $1 is the name of a protocol, e.g. 'Filecoin'."},permission_manageState:{message:"Store and manage its data on your device.",description:"The description for the `snap_manageState` permission"},permission_manageStateDescription:{message:"Allow $1 to store, update, and retrieve data securely with encryption. Other snaps cannot access this information.",description:"An extended description for the `snap_manageState` permission. $1 is the snap name."},permission_nameLookup:{message:"Provide domain and address lookups.",description:"The description for the `endowment:name-lookup` permission."},permission_nameLookupDescription:{message:"Allow the snap to fetch and display address and domain lookups in different parts of the MetaMask UI.",description:"An extended description for the `endowment:name-lookup` permission."},permission_notifications:{message:"Show notifications.",description:"The description for the `snap_notify` permission"},permission_notificationsDescription:{message:"Allow $1 to display notifications within MetaMask. A short notification text can be triggered by a snap for actionable or time-sensitive information.",description:"An extended description for the `snap_notify` permission. $1 is the snap name."},permission_protocol:{message:"Provide protocol data for one or more chains.",description:"The description for the `endowment:protocol` permission."},permission_protocolDescription:{message:"Allow $1 to provide MetaMask with protocol data such as gas estimates or token information.",description:"An extended description for the `endowment:protocol` permission. $1 is the name of the Snap."},permission_rpc:{message:"Allow $1 to communicate directly with $2.",description:"The description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name."},permission_rpcDescription:{message:"Allow $1 to send messages to $2 and receive a response from $2.",description:"An extended description for the `endowment:rpc` permission. $1 is 'other snaps' or 'websites', $2 is the snap name."},permission_rpcDescriptionOriginList:{message:"$1 and $2",description:"A list of allowed origins where $2 is the last origin of the list and $1 is the rest of the list separated by ','."},permission_signatureInsight:{message:"Display signature insights modal.",description:"The description for the `endowment:signature-insight` permission"},permission_signatureInsightDescription:{message:"Allow $1 to display a modal with insights on any signature request before approval. This can be used for anti-phishing and security solutions.",description:"An extended description for the `endowment:signature-insight` permission. $1 is the snap name."},permission_signatureInsightOrigin:{message:"See the origins of websites that initiate a signature request",description:"The description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission"},permission_signatureInsightOriginDescription:{message:"Allow $1 to see the origin (URI) of websites that initiate signature requests. This can be used for anti-phishing and security solutions.",description:"An extended description for the `signatureOrigin` caveat, to be used with the `endowment:signature-insight` permission. $1 is the snap name."},permission_transactionInsight:{message:"Fetch and display transaction insights.",description:"The description for the `endowment:transaction-insight` permission"},permission_transactionInsightDescription:{message:"Allow $1 to decode transactions and show insights within the MetaMask UI. This can be used for anti-phishing and security solutions.",description:"An extended description for the `endowment:transaction-insight` permission. $1 is the snap name."},permission_transactionInsightOrigin:{message:"See the origins of websites that suggest transactions",description:"The description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission"},permission_transactionInsightOriginDescription:{message:"Allow $1 to see the origin (URI) of websites that suggest transactions. This can be used for anti-phishing and security solutions.",description:"An extended description for the `transactionOrigin` caveat, to be used with the `endowment:transaction-insight` permission. $1 is the snap name."},permission_unknown:{message:"Unknown permission: $1",description:"$1 is the name of a requested permission that is not recognized."},permission_viewBip32PublicKeys:{message:"View your public key for $1 ($2).",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a derivation path, e.g. 'm/44'/0'/0''. $2 is the elliptic curve name, e.g. 'secp256k1'."},permission_viewBip32PublicKeysDescription:{message:"Allow $2 to view your public keys (and addresses) for $1. This does not grant any control of accounts or assets.",description:"An extended description for the `snap_getBip32PublicKey` permission. $1 is a derivation path (name). $2 is the snap name."},permission_viewNamedBip32PublicKeys:{message:"View your public key for $1.",description:"The description for the `snap_getBip32PublicKey` permission. $1 is a name for the derivation path, e.g., 'Ethereum accounts'."},permission_walletSwitchEthereumChain:{message:"Use your enabled networks",description:"The label for the `wallet_switchEthereumChain` permission"},permission_webAssembly:{message:"Support for WebAssembly.",description:"The description of the `endowment:webassembly` permission."},permission_webAssemblyDescription:{message:"Allow $1 to access low-level execution environments via WebAssembly.",description:"An extended description of the `endowment:webassembly` permission. $1 is the snap name."},permissions:{message:"Permissions"},permissionsPageEmptyContent:{message:"Nothing to see here"},permissionsPageEmptySubContent:{message:"This is where you can see the permissions you've given to installed Snaps or connected sites."},permitSimulationChange_approve:{message:"Spending cap"},permitSimulationChange_bidding:{message:"You bid"},permitSimulationChange_listing:{message:"You list"},permitSimulationChange_nft_listing:{message:"Listing price"},permitSimulationChange_receive:{message:"You receive"},permitSimulationChange_revoke2:{message:"Revoke"},permitSimulationChange_transfer:{message:"You send"},permitSimulationDetailInfo:{message:"You're giving the spender permission to spend this many tokens from your account."},permittedChainToastUpdate:{message:"$1 has access to $2."},personalAddressDetected:{message:"Personal address detected. Input the token contract address."},pinToTop:{message:"Pin to top"},pleaseConfirm:{message:"Please confirm"},plusMore:{message:"+ $1 more",description:"$1 is the number of additional items"},plusXMore:{message:"+ $1 more",description:"$1 is a number of additional but unshown items in a list- this message will be shown in place of those items"},popularNetworkAddToolTip:{message:"Some of these networks rely on third parties. The connections may be less reliable or enable third-parties to track activity. $1",description:"$1 is Learn more link"},popularNetworks:{message:"Popular networks"},portfolio:{message:"Portfolio"},preparingSwap:{message:"Preparing swap..."},prev:{message:"Prev"},price:{message:"Price"},priceUnavailable:{message:"price unavailable"},primaryType:{message:"Primary type"},priorityFee:{message:"Priority fee"},priorityFeeProperCase:{message:"Priority Fee"},privacy:{message:"Privacy"},privacyMsg:{message:"Privacy policy"},privateKey:{message:"Private Key",description:"select this type of file to use to import an account"},privateKeyCopyWarning:{message:"Private key for $1",description:"$1 represents the account name"},privateKeyHidden:{message:"The private key is hidden",description:"Explains that the private key input is hidden"},privateKeyShow:{message:"Show/Hide the private key input",description:"Describes a toggle that is used to show or hide the private key input"},privateKeyShown:{message:"This private key is being shown",description:"Explains that the private key input is being shown"},privateKeyWarning:{message:"Warning: Never disclose this key. Anyone with your private keys can steal any assets held in your account."},privateNetwork:{message:"Private network"},proceedWithTransaction:{message:"I want to proceed anyway"},productAnnouncements:{message:"Product announcements"},profileSync:{message:"Profile Sync"},profileSyncConfirmation:{message:"If you turn off profile sync, you won’t be able to receive notifications."},profileSyncDescription:{message:"Creates a profile that MetaMask uses to sync some settings among your devices. This is required to get notifications. $1."},profileSyncPrivacyLink:{message:"Learn how we protect your privacy"},proposedApprovalLimit:{message:"Proposed approval limit"},provide:{message:"Provide"},publicAddress:{message:"Public address"},pushPlatformNotificationsFundsReceivedDescription:{message:"You received $1 $2"},pushPlatformNotificationsFundsReceivedDescriptionDefault:{message:"You received some tokens"},pushPlatformNotificationsFundsReceivedTitle:{message:"Funds received"},pushPlatformNotificationsFundsSentDescription:{message:"You successfully sent $1 $2"},pushPlatformNotificationsFundsSentDescriptionDefault:{message:"You successfully sent some tokens"},pushPlatformNotificationsFundsSentTitle:{message:"Funds sent"},pushPlatformNotificationsNftReceivedDescription:{message:"You received new NFTs"},pushPlatformNotificationsNftReceivedTitle:{message:"NFT received"},pushPlatformNotificationsNftSentDescription:{message:"You have successfully sent an NFT"},pushPlatformNotificationsNftSentTitle:{message:"NFT sent"},pushPlatformNotificationsStakingLidoStakeCompletedDescription:{message:"Your Lido stake was successful"},pushPlatformNotificationsStakingLidoStakeCompletedTitle:{message:"Stake complete"},pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnDescription:{message:"Your Lido stake is now ready to be withdrawn"},pushPlatformNotificationsStakingLidoStakeReadyToBeWithdrawnTitle:{message:"Stake ready for withdrawal"},pushPlatformNotificationsStakingLidoWithdrawalCompletedDescription:{message:"Your Lido withdrawal was successful"},pushPlatformNotificationsStakingLidoWithdrawalCompletedTitle:{message:"Withdrawal completed"},pushPlatformNotificationsStakingLidoWithdrawalRequestedDescription:{message:"Your Lido withdrawal request was submitted"},pushPlatformNotificationsStakingLidoWithdrawalRequestedTitle:{message:"Withdrawal requested"},pushPlatformNotificationsStakingRocketpoolStakeCompletedDescription:{message:"Your RocketPool stake was successful"},pushPlatformNotificationsStakingRocketpoolStakeCompletedTitle:{message:"Stake complete"},pushPlatformNotificationsStakingRocketpoolUnstakeCompletedDescription:{message:"Your RocketPool unstake was successful"},pushPlatformNotificationsStakingRocketpoolUnstakeCompletedTitle:{message:"Unstake complete"},pushPlatformNotificationsSwapCompletedDescription:{message:"Your MetaMask Swap was successful"},pushPlatformNotificationsSwapCompletedTitle:{message:"Swap completed"},queued:{message:"Queued"},quoteRate:{message:"Quote rate"},quotedReceiveAmount:{message:"$1 receive amount"},quotedTotalCost:{message:"$1 total cost"},rank:{message:"Rank"},rateIncludesMMFee:{message:"Rate includes $1% fee"},reAddAccounts:{message:"re-add any other accounts"},reAdded:{message:"re-added"},readdToken:{message:"You can add this token back in the future by going to “Import token” in your accounts options menu."},receive:{message:"Receive"},receiveCrypto:{message:"Receive crypto"},recipientAddressPlaceholderNew:{message:"Enter public address (0x) or domain name"},recommendedGasLabel:{message:"Recommended"},recoveryPhraseReminderBackupStart:{message:"Start here"},recoveryPhraseReminderConfirm:{message:"Got it"},recoveryPhraseReminderHasBackedUp:{message:"Always keep your Secret Recovery Phrase in a secure and secret place"},recoveryPhraseReminderHasNotBackedUp:{message:"Need to backup your Secret Recovery Phrase again?"},recoveryPhraseReminderItemOne:{message:"Never share your Secret Recovery Phrase with anyone"},recoveryPhraseReminderItemTwo:{message:"The MetaMask team will never ask for your Secret Recovery Phrase"},recoveryPhraseReminderSubText:{message:"Your Secret Recovery Phrase controls all of your accounts."},recoveryPhraseReminderTitle:{message:"Protect your funds"},redeposit:{message:"Redeposit"},refreshList:{message:"Refresh list"},reject:{message:"Reject"},rejectAll:{message:"Reject all"},rejectRequestsDescription:{message:"You are about to batch reject $1 requests."},rejectRequestsN:{message:"Reject $1 requests"},rejectTxsDescription:{message:"You are about to batch reject $1 transactions."},rejectTxsN:{message:"Reject $1 transactions"},rejected:{message:"Rejected"},rememberSRPIfYouLooseAccess:{message:"Remember, if you lose your Secret Recovery Phrase, you lose access to your wallet. $1 to keep this set of words safe so you can always access your funds."},reminderSet:{message:"Reminder set!"},remove:{message:"Remove"},removeAccount:{message:"Remove account"},removeAccountDescription:{message:"This account will be removed from your wallet. Please make sure you have the original Secret Recovery Phrase or private key for this imported account before continuing. You can import or create accounts again from the account drop-down. "},removeKeyringSnap:{message:"Removing this Snap removes these accounts from MetaMask:"},removeKeyringSnapToolTip:{message:"The snap controls the accounts, and by removing it, the accounts will be removed from MetaMask, too, but they will remain in the blockchain."},removeNFT:{message:"Remove NFT"},removeNftErrorMessage:{message:"We could not remove this NFT."},removeNftMessage:{message:"NFT was successfully removed!"},removeSnap:{message:"Remove Snap"},removeSnapAccountDescription:{message:"If you proceed, this account will no longer be available in MetaMask."},removeSnapAccountTitle:{message:"Remove account"},removeSnapConfirmation:{message:"Are you sure you want to remove $1?",description:"$1 represents the name of the snap"},removeSnapDescription:{message:"This action will delete the snap, its data and revoke your given permissions."},replace:{message:"replace"},reportIssue:{message:"Report an issue"},requestFrom:{message:"Request from"},requestFromInfo:{message:"This is the site asking for your signature."},requestFromInfoSnap:{message:"This is the Snap asking for your signature."},requestFromTransactionDescription:{message:"This is the site asking for your confirmation."},requestingFor:{message:"Requesting for"},requestingForAccount:{message:"Requesting for $1",description:"Name of Account"},requestingForNetwork:{message:"Requesting for $1",description:"Name of Network"},required:{message:"Required"},reset:{message:"Reset"},resetWallet:{message:"Reset wallet"},resetWalletSubHeader:{message:"MetaMask does not keep a copy of your password. If you’re having trouble unlocking your account, you will need to reset your wallet. You can do this by providing the Secret Recovery Phrase you used when you set up your wallet."},resetWalletUsingSRP:{message:"This action will delete your current wallet and Secret Recovery Phrase from this device, along with the list of accounts you’ve curated. After resetting with a Secret Recovery Phrase, you’ll see a list of accounts based on the Secret Recovery Phrase you use to reset. This new list will automatically include accounts that have a balance. You’ll also be able to $1 created previously. Custom accounts that you’ve imported will need to be $2, and any custom tokens you’ve added to an account will need to be $3 as well."},resetWalletWarning:{message:"Make sure you’re using the correct Secret Recovery Phrase before proceeding. You will not be able to undo this."},restartMetamask:{message:"Restart MetaMask"},restore:{message:"Restore"},restoreUserData:{message:"Restore user data"},resultPageError:{message:"Error"},resultPageErrorDefaultMessage:{message:"The operation failed."},resultPageSuccess:{message:"Success"},resultPageSuccessDefaultMessage:{message:"The operation completed successfully."},retryTransaction:{message:"Retry transaction"},reusedTokenNameWarning:{message:"A token here reuses a symbol from another token you watch, this can be confusing or deceptive."},revealSecretRecoveryPhrase:{message:"Reveal Secret Recovery Phrase"},revealSeedWords:{message:"Reveal Secret Recovery Phrase"},revealSeedWordsDescription1:{message:"The $1 provides $2",description:"This is a sentence consisting of link using 'revealSeedWordsSRPName' as $1 and bolded text using 'revealSeedWordsDescription3' as $2."},revealSeedWordsDescription2:{message:"MetaMask is a $1. That means you're the owner of your SRP.",description:"$1 is text link with the message from 'revealSeedWordsNonCustodialWallet'"},revealSeedWordsDescription3:{message:"full access to your wallet and funds.\n"},revealSeedWordsNonCustodialWallet:{message:"non-custodial wallet"},revealSeedWordsQR:{message:"QR"},revealSeedWordsSRPName:{message:"Secret Recovery Phrase (SRP)"},revealSeedWordsText:{message:"Text"},revealSeedWordsWarning:{message:"Make sure no one is looking at your screen. $1",description:"$1 is bolded text using the message from 'revealSeedWordsWarning2'"},revealSeedWordsWarning2:{message:"MetaMask Support will never request this.",description:"The bolded texted in the second part of 'revealSeedWordsWarning'"},revealSensitiveContent:{message:"Reveal sensitive content"},revealTheSeedPhrase:{message:"Reveal seed phrase"},review:{message:"Review"},reviewAlert:{message:"Review alert"},reviewAlerts:{message:"Review alerts"},reviewPendingTransactions:{message:"Review pending transactions"},reviewPermissions:{message:"Review permissions"},revokePermission:{message:"Revoke permission"},revokePermissionTitle:{message:"Remove $1 permission",description:"The token symbol that is being revoked"},revokeSimulationDetailsDesc:{message:"You're removing someone's permission to spend tokens from your account."},rpcNameOptional:{message:"RPC Name (Optional)"},rpcUrl:{message:"RPC URL"},safeTransferFrom:{message:"Safe transfer from"},save:{message:"Save"},scanInstructions:{message:"Place the QR code in front of your camera"},scanQrCode:{message:"Scan QR code"},scrollDown:{message:"Scroll down"},search:{message:"Search"},searchAccounts:{message:"Search accounts"},searchNfts:{message:"Search NFTs"},searchTokens:{message:"Search tokens"},searchTokensByNameOrAddress:{message:"Search tokens by name or address"},secretRecoveryPhrase:{message:"Secret Recovery Phrase"},secretRecoveryPhrasePlusNumber:{message:"Secret Recovery Phrase $1",description:"The $1 is the order of the Secret Recovery Phrase"},secureWallet:{message:"Secure wallet"},security:{message:"Security"},securityAlert:{message:"Security alert from $1 and $2"},securityAlerts:{message:"Security alerts"},securityAlertsDescription:{message:"This feature alerts you to malicious or unusual activity by actively reviewing transaction and signature requests. $1",description:"Link to learn more about security alerts"},securityAndPrivacy:{message:"Security & privacy"},securityDescription:{message:"Reduce your chances of joining unsafe networks and protect your accounts"},securityMessageLinkForNetworks:{message:"network scams and security risks"},securityPrivacyPath:{message:"Settings > Security & Privacy."},securityProviderPoweredBy:{message:"Powered by $1",description:"The security provider that is providing data"},seeAllPermissions:{message:"See all permissions",description:"Used for revealing more content (e.g. permission list, etc.)"},seeDetails:{message:"See details"},seedPhraseConfirm:{message:"Confirm Secret Recovery Phrase"},seedPhraseEnterMissingWords:{message:"Confirm Secret Recovery Phrase"},seedPhraseIntroNotRecommendedButtonCopy:{message:"Remind me later (not recommended)"},seedPhraseIntroRecommendedButtonCopy:{message:"Secure my wallet (recommended)"},seedPhraseIntroSidebarBulletOne:{message:"Write down and store in multiple secret places"},seedPhraseIntroSidebarBulletTwo:{message:"Store in a safe deposit box"},seedPhraseIntroSidebarCopyOne:{message:"Your Secret Recovery Phrase is a 12-word phrase that is the “master key” to your wallet and your funds"},seedPhraseIntroSidebarCopyThree:{message:"If someone asks for your recovery phrase they are likely trying to scam you and steal your wallet funds."},seedPhraseIntroSidebarCopyTwo:{message:"Never, ever share your Secret Recovery Phrase, not even with MetaMask!"},seedPhraseIntroSidebarTitleOne:{message:"What is a Secret Recovery Phrase?"},seedPhraseIntroSidebarTitleThree:{message:"Should I share my Secret Recovery Phrase?"},seedPhraseIntroSidebarTitleTwo:{message:"How do I save my Secret Recovery Phrase?"},seedPhraseIntroTitle:{message:"Secure your wallet"},seedPhraseReq:{message:"Secret Recovery Phrases contain 12, 15, 18, 21, or 24 words"},seedPhraseWriteDownDetails:{message:"Write down this 12-word Secret Recovery Phrase and save it in a place that you trust and only you can access."},seedPhraseWriteDownHeader:{message:"Write down your Secret Recovery Phrase"},select:{message:"Select"},selectAccountToConnect:{message:"Select an account to connect"},selectAccounts:{message:"Select the account(s) to use on this site"},selectAccountsForSnap:{message:"Select the account(s) to use with this snap"},selectAll:{message:"Select all"},selectAnAccount:{message:"Select an account"},selectAnAccountAlreadyConnected:{message:"This account has already been connected to MetaMask"},selectEnableDisplayMediaPrivacyPreference:{message:"Turn on Display NFT Media"},selectHdPath:{message:"Select HD path"},selectNFTPrivacyPreference:{message:"Enable NFT Autodetection"},selectPathHelp:{message:"If you don't see the accounts you expect, try switching the HD path or current selected network."},selectRpcUrl:{message:"Select RPC URL"},selectSecretRecoveryPhrase:{message:"Select Secret Recovery Phrase"},selectType:{message:"Select Type"},selectedAccountMismatch:{message:"Different account selected"},selectingAllWillAllow:{message:"Selecting all will allow this site to view all of your current accounts. Make sure you trust this site."},send:{message:"Send"},sendBugReport:{message:"Send us a bug report."},sendNoContactsConversionText:{message:"click here"},sendNoContactsDescription:{message:"Contacts allow you to safely send transactions to another account multiple times.  To create a contact, $1",description:"$1 represents the action text 'click here'"},sendNoContactsTitle:{message:"You don't have any contacts yet"},sendSelectReceiveAsset:{message:"Select asset to receive"},sendSelectSendAsset:{message:"Select asset to send"},sendSpecifiedTokens:{message:"Send $1",description:"Symbol of the specified token"},sendSwapSubmissionWarning:{message:"Clicking this button will immediately initiate your swap transaction. Please review your transaction details before proceeding."},sendTokenAsToken:{message:"Send $1 as $2",description:"Used in the transaction display list to describe a swap and send. $1 and $2 are the symbols of tokens in involved in the swap."},sendingAsset:{message:"Sending $1"},sendingDisabled:{message:"Sending of ERC-1155 NFT assets is not yet supported."},sendingNativeAsset:{message:"Sending $1",description:"$1 represents the native currency symbol for the current network (e.g. ETH or BNB)"},sendingToTokenContractWarning:{message:"Warning: you are about to send to a token contract which could result in a loss of funds. $1",description:"$1 is a clickable link with text defined by the 'learnMoreUpperCase' key. The link will open to a support article regarding the known contract address warning"},sepolia:{message:"Sepolia test network"},setApprovalForAll:{message:"Set approval for all"},setApprovalForAllRedesignedTitle:{message:"Withdrawal request"},setApprovalForAllTitle:{message:"Approve $1 with no spend limit",description:"The token symbol that is being approved"},settingAddSnapAccount:{message:"Add account Snap"},settings:{message:"Settings"},settingsOptimisedForEaseOfUseAndSecurity:{message:"Settings are optimised for ease of use and security. Change these any time."},settingsSearchMatchingNotFound:{message:"No matching results found."},settingsSubHeadingSignaturesAndTransactions:{message:"Signature and transaction requests"},show:{message:"Show"},showAccount:{message:"Show account"},showAdvancedDetails:{message:"Show advanced details"},showExtensionInFullSizeView:{message:"Show extension in full-size view"},showExtensionInFullSizeViewDescription:{message:"Turn this on to make full-size view your default when you click the extension icon."},showFiatConversionInTestnets:{message:"Show conversion on test networks"},showFiatConversionInTestnetsDescription:{message:"Select this to show fiat conversion on test networks"},showHexData:{message:"Show hex data"},showHexDataDescription:{message:"Select this to show the hex data field on the send screen"},showLess:{message:"Show less"},showMore:{message:"Show more"},showNativeTokenAsMainBalance:{message:"Show native token as main balance"},showNft:{message:"Show NFT"},showPermissions:{message:"Show permissions"},showPrivateKey:{message:"Show private key"},showSRP:{message:"Show Secret Recovery Phrase"},showTestnetNetworks:{message:"Show test networks"},showTestnetNetworksDescription:{message:"Select this to show test networks in network list"},sign:{message:"Sign"},signatureRequest:{message:"Signature request"},signature_decoding_bid_nft_tooltip:{message:"The NFT will be reflected in your wallet, when the bid is accepted."},signature_decoding_list_nft_tooltip:{message:"Expect changes only if someone buys your NFTs."},signed:{message:"Signed"},signing:{message:"Signing"},signingInWith:{message:"Signing in with"},signingWith:{message:"Signing with"},simulationApproveHeading:{message:"Withdraw"},simulationDetailsApproveDesc:{message:"You're giving someone else permission to withdraw NFTs from your account."},simulationDetailsERC20ApproveDesc:{message:"You're giving someone else permission to spend this amount from your account."},simulationDetailsFiatNotAvailable:{message:"Not Available"},simulationDetailsIncomingHeading:{message:"You receive"},simulationDetailsNoChanges:{message:"No changes"},simulationDetailsOutgoingHeading:{message:"You send"},simulationDetailsRevokeSetApprovalForAllDesc:{message:"You're removing someone else's permission to withdraw NFTs from your account."},simulationDetailsSetApprovalForAllDesc:{message:"You're giving permission for someone else to withdraw NFTs from your account."},simulationDetailsTitle:{message:"Estimated changes"},simulationDetailsTitleTooltip:{message:"Estimated changes are what might happen if you go through with this transaction. This is just a prediction, not a guarantee."},simulationDetailsTotalFiat:{message:"Total = $1",description:"$1 is the total amount in fiat currency on one side of the transaction"},simulationDetailsTransactionReverted:{message:"This transaction is likely to fail"},simulationDetailsUnavailable:{message:"Unavailable"},simulationErrorMessageV2:{message:"We were not able to estimate gas. There might be an error in the contract and this transaction may fail."},simulationsSettingDescription:{message:"Turn this on to estimate balance changes of transactions and signatures before you confirm them. This doesn't guarantee their final outcome. $1"},simulationsSettingSubHeader:{message:"Estimate balance changes"},singleNetwork:{message:"1 network"},siweIssued:{message:"Issued"},siweNetwork:{message:"Network"},siweRequestId:{message:"Request ID"},siweResources:{message:"Resources"},siweURI:{message:"URL"},skip:{message:"Skip"},skipAccountSecurity:{message:"Skip account security?"},skipAccountSecurityDetails:{message:"I understand that until I back up my Secret Recovery Phrase, I may lose my accounts and all of their assets."},slideBridgeDescription:{message:"Move across 9 chains, all within your wallet"},slideBridgeTitle:{message:"Ready to bridge?"},slideCashOutDescription:{message:"Sell your crypto for cash"},slideCashOutTitle:{message:"Cash out with MetaMask"},slideDebitCardDescription:{message:"Available in select regions"},slideDebitCardTitle:{message:"MetaMask debit card"},slideFundWalletDescription:{message:"Add or transfer tokens to get started"},slideFundWalletTitle:{message:"Fund your wallet"},slideMultiSrpDescription:{message:"Import and use multiple wallets in MetaMask"},slideMultiSrpTitle:{message:"Add multiple Secret Recovery Phrases"},slideRemoteModeDescription:{message:"Access your hardware wallet without plugging it in"},slideRemoteModeTitle:{message:"Remote mode is here!"},slideSweepStakeDescription:{message:"Mint an NFT now for a chance to win"},slideSweepStakeTitle:{message:"Enter the $5000 USDC Giveaway!"},smartAccountAccept:{message:"Use smart account"},smartAccountBetterTransaction:{message:"Faster transactions, lower fees"},smartAccountBetterTransactionDescription:{message:"Save time and money by processing transactions together."},smartAccountFeaturesDescription:{message:"Keep the same account address, and you can switch back anytime."},smartAccountLabel:{message:"Smart Account"},smartAccountPayToken:{message:"Pay with any token, any time"},smartAccountPayTokenDescription:{message:"Use the tokens you already have to cover network fees."},smartAccountReject:{message:"Don’t use smart account"},smartAccountRequestFor:{message:"Request for"},smartAccountSplashTitle:{message:"Use smart account?"},smartAccountUpgradeBannerDescription:{message:"Same address. Smarter features."},smartAccountUpgradeBannerTitle:{message:"Switch to smart account"},smartContracts:{message:"Smart contracts"},smartSwapsErrorNotEnoughFunds:{message:"Not enough funds for a smart swap."},smartSwapsErrorUnavailable:{message:"Smart Swaps are temporarily unavailable."},smartTransactionCancelled:{message:"Your transaction was canceled"},smartTransactionCancelledDescription:{message:"Your transaction couldn't be completed, so it was canceled to save you from paying unnecessary gas fees."},smartTransactionError:{message:"Your transaction failed"},smartTransactionErrorDescription:{message:"Sudden market changes can cause failures. If the problem continues, reach out to MetaMask customer support."},smartTransactionPending:{message:"Your transaction was submitted"},smartTransactionSuccess:{message:"Your transaction is complete"},smartTransactions:{message:"Smart Transactions"},smartTransactionsEnabledDescription:{message:" and MEV protection. Now on by default."},smartTransactionsEnabledLink:{message:"Higher success rates"},smartTransactionsEnabledTitle:{message:"Transactions just got smarter"},snapAccountCreated:{message:"Account created"},snapAccountCreatedDescription:{message:"Your new account is ready to use!"},snapAccountCreationFailed:{message:"Account creation failed"},snapAccountCreationFailedDescription:{message:"$1 didn't manage to create an account for you.",description:"$1 is the snap name"},snapAccountRedirectFinishSigningTitle:{message:"Finish signing"},snapAccountRedirectSiteDescription:{message:"Follow the instructions from $1"},snapAccountRemovalFailed:{message:"Account removal failed"},snapAccountRemovalFailedDescription:{message:"$1 didn't manage to remove this account for you.",description:"$1 is the snap name"},snapAccountRemoved:{message:"Account removed"},snapAccountRemovedDescription:{message:"This account will no longer be available to use in MetaMask."},snapAccounts:{message:"Account Snaps"},snapAccountsDescription:{message:"Accounts controlled by third-party Snaps."},snapConnectTo:{message:"Connect to $1",description:"$1 is the website URL or a Snap name. Used for Snaps pre-approved connections."},snapConnectionPermissionDescription:{message:"Let $1 automatically connect to $2 without your approval.",description:"Used for Snap pre-approved connections. $1 is the Snap name, $2 is a website URL."},snapConnectionWarning:{message:"$1 wants to use $2",description:"$2 is the snap and $1 is the dapp requesting connection to the snap."},snapContent:{message:"This content is coming from $1",description:"This is shown when a snap shows transaction insight information in the confirmation UI. $1 is a link to the snap's settings page with the link text being the name of the snap."},snapDetailWebsite:{message:"Website"},snapHomeMenu:{message:"Snap Home Menu"},snapInstallRequest:{message:"Installing $1 gives it the following permissions.",description:"$1 is the snap name."},snapInstallSuccess:{message:"Installation complete"},snapInstallWarningCheck:{message:"$1 wants permission to do the following:",description:"Warning message used in popup displayed on snap install. $1 is the snap name."},snapInstallWarningHeading:{message:"Proceed with caution"},snapInstallWarningPermissionDescriptionForBip32View:{message:"Allow $1 to view your public keys (and addresses). This does not grant any control of accounts or assets.",description:"An extended description for the `snap_getBip32PublicKey` permission used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name."},snapInstallWarningPermissionDescriptionForEntropy:{message:"Allow $1 Snap to manage accounts and assets on the requested network(s). These accounts are derived and backed up using your secret recovery phrase (without revealing it). With the power to derive keys, $1 can support a variety of blockchain protocols beyond Ethereum (EVMs).",description:"An extended description for the `snap_getBip44Entropy` and `snap_getBip44Entropy` permissions used for tooltip on Snap Install Warning screen (popup/modal). $1 is the snap name."},snapInstallWarningPermissionNameForEntropy:{message:"Manage $1 accounts",description:"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types."},snapInstallWarningPermissionNameForViewPublicKey:{message:"View your public key for $1",description:"Permission name used for the Permission Cell component displayed on warning popup when installing a Snap. $1 is list of account types."},snapInstallationErrorDescription:{message:"$1 couldn’t be installed.",description:"Error description used when snap installation fails. $1 is the snap name."},snapInstallationErrorTitle:{message:"Installation failed",description:"Error title used when snap installation fails."},snapResultError:{message:"Error"},snapResultSuccess:{message:"Success"},snapResultSuccessDescription:{message:"$1 is ready to use"},snapUIAssetSelectorTitle:{message:"Select an asset"},snapUpdateAlertDescription:{message:"Get the latest version of $1",description:"Description used in Snap update alert banner when snap update is available. $1 is the Snap name."},snapUpdateAvailable:{message:"Update available"},snapUpdateErrorDescription:{message:"$1 couldn’t be updated.",description:"Error description used when snap update fails. $1 is the snap name."},snapUpdateErrorTitle:{message:"Update failed",description:"Error title used when snap update fails."},snapUpdateRequest:{message:"Updating $1 gives it the following permissions.",description:"$1 is the Snap name."},snapUpdateSuccess:{message:"Update complete"},snapUrlIsBlocked:{message:"This Snap wants to take you to a blocked site. $1."},snaps:{message:"Snaps"},snapsConnected:{message:"Snaps connected"},snapsNoInsight:{message:"No insight to show"},snapsPrivacyWarningFirstMessage:{message:"You acknowledge that any Snap that you install is a Third Party Service, unless otherwise identified, as defined in the Consensys $1. Your use of Third Party Services is governed by separate terms and conditions set forth by the Third Party Service provider. Consensys does not recommend the use of any Snap by any particular person for any particular reason. You access, rely upon or use the Third Party Service at your own risk. Consensys disclaims all responsibility and liability for any losses on account of your use of Third Party Services.",description:"First part of a message in popup modal displayed when installing a snap for the first time. $1 is terms of use link."},snapsPrivacyWarningSecondMessage:{message:"Any information you share with Third Party Services will be collected directly by those Third Party Services in accordance with their privacy policies. Please refer to their privacy policies for more information.",description:"Second part of a message in popup modal displayed when installing a snap for the first time."},snapsPrivacyWarningThirdMessage:{message:"Consensys has no access to information you share with Third Party Services.",description:"Third part of a message in popup modal displayed when installing a snap for the first time."},snapsSettings:{message:"Snap settings"},snapsTermsOfUse:{message:"Terms of Use"},snapsToggle:{message:"A snap will only run if it is enabled"},snapsUIError:{message:"Contact the creators of $1 for further support.",description:"This is shown when the insight snap throws an error. $1 is the snap name"},solanaAccountRequested:{message:"This site is requesting a Solana account."},solanaAccountRequired:{message:"A Solana account is required to connect to this site."},solanaImportAccounts:{message:"Import Solana accounts"},solanaImportAccountsDescription:{message:"Import a Secret Recovery Phrase to migrate your Solana account from an other wallet."},solanaMoreFeaturesComingSoon:{message:"More features coming soon"},solanaMoreFeaturesComingSoonDescription:{message:"Solana dapps, NFTs, hardware wallet support, and more coming soon."},solanaOnMetaMask:{message:"Solana on MetaMask"},solanaSendReceiveSwapTokens:{message:"Send, receive, and swap tokens"},solanaSendReceiveSwapTokensDescription:{message:"Transfer and transact with tokens such as SOL, USDC, and more."},someNetworks:{message:"$1 networks"},somethingDoesntLookRight:{message:"Something doesn't look right? $1",description:"A false positive message for users to contact support. $1 is a link to the support page."},somethingIsWrong:{message:"Something's gone wrong. Try reloading the page."},somethingWentWrong:{message:"Oops! Something went wrong."},sortBy:{message:"Sort by"},sortByAlphabetically:{message:"Alphabetically (A-Z)"},sortByDecliningBalance:{message:"Declining balance ($1 high-low)",description:"Indicates a descending order based on token fiat balance. $1 is the preferred currency symbol"},source:{message:"Source"},spamModalBlockedDescription:{message:"This site will be blocked for 1 minute."},spamModalBlockedTitle:{message:"You've temporarily blocked this site"},spamModalDescription:{message:"If you're being spammed with multiple requests, you can temporarily block the site."},spamModalTemporaryBlockButton:{message:"Temporarily block this site"},spamModalTitle:{message:"We've noticed multiple requests"},speed:{message:"Speed"},speedUp:{message:"Speed up"},speedUpCancellation:{message:"Speed up this cancellation"},speedUpExplanation:{message:"We’ve updated the gas fee based on current network conditions and have increased it by at least 10% (required by the network)."},speedUpPopoverTitle:{message:"Speed up transaction"},speedUpTooltipText:{message:"New gas fee"},speedUpTransaction:{message:"Speed up this transaction"},spendLimitInsufficient:{message:"Spend limit insufficient"},spendLimitInvalid:{message:"Spend limit invalid; must be a positive number"},spendLimitPermission:{message:"Spend limit permission"},spendLimitRequestedBy:{message:"Spend limit requested by $1",description:"Origin of the site requesting the spend limit"},spendLimitTooLarge:{message:"Spend limit too large"},spender:{message:"Spender"},spenderTooltipDesc:{message:"This is the address that will be able to withdraw your NFTs."},spenderTooltipERC20ApproveDesc:{message:"This is the address that will be able to spend your tokens on your behalf."},spendingCap:{message:"Spending cap"},spendingCaps:{message:"Spending caps"},srpInputNumberOfWords:{message:"I have a $1-word phrase",description:"This is the text for each option in the dropdown where a user selects how many words their secret recovery phrase has during import. The $1 is the number of words (either 12, 15, 18, 21, or 24)."},srpListName:{message:"Secret Recovery Phrase $1",description:"$1 is the order of the Secret Recovery Phrase"},srpListNumberOfAccounts:{message:"$1 accounts",description:"$1 is the number of accounts in the list"},srpListSelectionDescription:{message:"The Secret Recovery Phrase your new account will be generated from"},srpListSingleOrZero:{message:"$1 account",description:"$1 is the number of accounts in the list, it is either 1 or 0"},srpPasteFailedTooManyWords:{message:"Paste failed because it contained over 24 words. A secret recovery phrase can have a maximum of 24 words.",description:"Description of SRP paste error when the pasted content has too many words"},srpPasteTip:{message:"You can paste your entire secret recovery phrase into any field",description:"Our secret recovery phrase input is split into one field per word. This message explains to users that they can paste their entire secrete recovery phrase into any field, and we will handle it correctly."},srpSecurityQuizGetStarted:{message:"Get started"},srpSecurityQuizImgAlt:{message:"An eye with a keyhole in the center, and three floating password fields"},srpSecurityQuizIntroduction:{message:"To reveal your Secret Recovery Phrase, you need to correctly answer two questions"},srpSecurityQuizQuestionOneQuestion:{message:"If you lose your Secret Recovery Phrase, MetaMask..."},srpSecurityQuizQuestionOneRightAnswer:{message:"Can’t help you"},srpSecurityQuizQuestionOneRightAnswerDescription:{message:"Write it down, engrave it on metal, or keep it in multiple secret spots so you never lose it. If you lose it, it’s gone forever."},srpSecurityQuizQuestionOneRightAnswerTitle:{message:"Right! No one can help get your Secret Recovery Phrase back"},srpSecurityQuizQuestionOneWrongAnswer:{message:"Can get it back for you"},srpSecurityQuizQuestionOneWrongAnswerDescription:{message:"If you lose your Secret Recovery Phrase, it’s gone forever. No one can help you get it back, no matter what they might say."},srpSecurityQuizQuestionOneWrongAnswerTitle:{message:"Wrong! No one can help get your Secret Recovery Phrase back"},srpSecurityQuizQuestionTwoQuestion:{message:"If anyone, even a support agent, asks for your Secret Recovery Phrase..."},srpSecurityQuizQuestionTwoRightAnswer:{message:"You’re being scammed"},srpSecurityQuizQuestionTwoRightAnswerDescription:{message:"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets."},srpSecurityQuizQuestionTwoRightAnswerTitle:{message:"Correct! Sharing your Secret Recovery Phrase is never a good idea"},srpSecurityQuizQuestionTwoWrongAnswer:{message:"You should give it to them"},srpSecurityQuizQuestionTwoWrongAnswerDescription:{message:"Anyone claiming to need your Secret Recovery Phrase is lying to you. If you share it with them, they will steal your assets."},srpSecurityQuizQuestionTwoWrongAnswerTitle:{message:"Nope! Never share your Secret Recovery Phrase with anyone, ever"},srpSecurityQuizTitle:{message:"Security quiz"},srpToggleShow:{message:"Show/Hide this word of the secret recovery phrase",description:"Describes a toggle that is used to show or hide a single word of the secret recovery phrase"},srpWordHidden:{message:"This word is hidden",description:"Explains that a word in the secret recovery phrase is hidden"},srpWordShown:{message:"This word is being shown",description:"Explains that a word in the secret recovery phrase is being shown"},stable:{message:"Stable"},stableLowercase:{message:"stable"},stake:{message:"Stake"},standardAccountLabel:{message:"Standard Account"},stateLogError:{message:"Error in retrieving state logs."},stateLogFileName:{message:"MetaMask state logs"},stateLogs:{message:"State logs"},stateLogsDescription:{message:"State logs contain your public account addresses and sent transactions."},status:{message:"Status"},statusNotConnected:{message:"Not connected"},statusNotConnectedAccount:{message:"No accounts connected"},step1LatticeWallet:{message:"Connect your Lattice1"},step1LatticeWalletMsg:{message:"You can connect MetaMask to your Lattice1 device once it is set up and online. Unlock your device and have your Device ID ready.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},step1LedgerWallet:{message:"Download Ledger app"},step1LedgerWalletMsg:{message:"Download, set up, and enter your password to unlock $1.",description:"$1 represents the `ledgerLiveApp` localization value"},step1TrezorWallet:{message:"Connect your Trezor"},step1TrezorWalletMsg:{message:"Plug your Trezor directly into your computer and unlock it. Make sure you use the correct passphrase.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},step2LedgerWallet:{message:"Connect your Ledger"},step2LedgerWalletMsg:{message:"Plug your Ledger directly into your computer, then  unlock it and open the Ethereum app.",description:"$1 represents the `hardwareWalletSupportLinkConversion` localization key"},stillGettingMessage:{message:"Still getting this message?"},strong:{message:"Strong"},stxCancelled:{message:"Swap would have failed"},stxCancelledDescription:{message:"Your transaction would have failed and was cancelled to protect you from paying unnecessary gas fees."},stxCancelledSubDescription:{message:"Try your swap again. We’ll be here to protect you against similar risks next time."},stxFailure:{message:"Swap failed"},stxFailureDescription:{message:"Sudden market changes can cause failures. If the problem persists, please reach out to $1.",description:"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io"},stxOptInSupportedNetworksDescription:{message:"Turn on Smart Transactions for more reliable and secure transactions on supported networks. $1"},stxPendingPrivatelySubmittingSwap:{message:"Privately submitting your Swap..."},stxPendingPubliclySubmittingSwap:{message:"Publicly submitting your Swap..."},stxSuccess:{message:"Swap complete!"},stxSuccessDescription:{message:"Your $1 is now available.",description:"$1 is a token symbol, e.g. ETH"},stxSwapCompleteIn:{message:"Swap will complete in <",description:"'<' means 'less than', e.g. Swap will complete in < 2:59"},stxTryingToCancel:{message:"Trying to cancel your transaction..."},stxUnknown:{message:"Status unknown"},stxUnknownDescription:{message:"A transaction has been successful but we’re unsure what it is. This may be due to submitting another transaction while this swap was processing."},stxUserCancelled:{message:"Swap cancelled"},stxUserCancelledDescription:{message:"Your transaction has been cancelled and you did not pay any unnecessary gas fees."},submit:{message:"Submit"},submitted:{message:"Submitted"},suggestedBySnap:{message:"Suggested by $1",description:"$1 is the snap name"},suggestedCurrencySymbol:{message:"Suggested currency symbol:"},suggestedTokenName:{message:"Suggested name:"},support:{message:"Support"},supportCenter:{message:"Visit our support center"},supportMultiRpcInformation:{message:"We now support multiple RPCs for a single network. Your most recent RPC has been selected as the default one to resolve conflicting information."},surveyConversion:{message:"Take our survey"},surveyTitle:{message:"Shape the future of MetaMask"},swap:{message:"Swap"},swapAdjustSlippage:{message:"Adjust slippage"},swapAggregator:{message:"Aggregator"},swapAllowSwappingOf:{message:"Allow swapping of $1",description:"Shows a user that they need to allow a token for swapping on their hardware wallet"},swapAmountReceived:{message:"Guaranteed amount"},swapAmountReceivedInfo:{message:"This is the minimum amount you will receive. You may receive more depending on slippage."},swapAndSend:{message:"Swap & Send"},swapAnyway:{message:"Swap anyway"},swapApproval:{message:"Approve $1 for swaps",description:"Used in the transaction display list to describe a transaction that is an approve call on a token that is to be swapped.. $1 is the symbol of a token that has been approved."},swapApproveNeedMoreTokens:{message:"You need $1 more $2 to complete this swap",description:"Tells the user how many more of a given token they need for a specific swap. $1 is an amount of tokens and $2 is the token symbol."},swapAreYouStillThere:{message:"Are you still there?"},swapAreYouStillThereDescription:{message:"We’re ready to show you the latest quotes when you want to continue"},swapConfirmWithHwWallet:{message:"Confirm with your hardware wallet"},swapContinueSwapping:{message:"Continue swapping"},swapContractDataDisabledErrorDescription:{message:'In the Ethereum app on your Ledger, go to "Settings" and allow contract data. Then, try your swap again.'},swapContractDataDisabledErrorTitle:{message:"Contract data is not enabled on your Ledger"},swapCustom:{message:"custom"},swapDecentralizedExchange:{message:"Decentralized exchange"},swapDirectContract:{message:"Direct contract"},swapEditLimit:{message:"Edit limit"},swapEnableDescription:{message:"This is required and gives MetaMask permission to swap your $1.",description:"Gives the user info about the required approval transaction for swaps. $1 will be the symbol of a token being approved for swaps."},swapEnableTokenForSwapping:{message:"This will $1 for swapping",description:"$1 is for the 'enableToken' key, e.g. 'enable ETH'"},swapEnterAmount:{message:"Enter an amount"},swapEstimatedNetworkFees:{message:"Estimated network fees"},swapEstimatedNetworkFeesInfo:{message:"This is an estimate of the network fee that will be used to complete your swap. The actual amount may change according to network conditions."},swapFailedErrorDescriptionWithSupportLink:{message:"Transaction failures happen and we are here to help. If this issue persists, you can reach our customer support at $1 for further assistance.",description:"This message is shown to a user if their swap fails. The $1 will be replaced by support.metamask.io"},swapFailedErrorTitle:{message:"Swap failed"},swapFetchingQuote:{message:"Fetching quote"},swapFetchingQuoteNofN:{message:"Fetching quote $1 of $2",description:"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap."},swapFetchingQuotes:{message:"Fetching quotes..."},swapFetchingQuotesErrorDescription:{message:"Hmmm... something went wrong. Try again, or if errors persist, contact customer support."},swapFetchingQuotesErrorTitle:{message:"Error fetching quotes"},swapFromTo:{message:"The swap of $1 to $2",description:"Tells a user that they need to confirm on their hardware wallet a swap of 2 tokens. $1 is a source token and $2 is a destination token"},swapGasFeesDetails:{message:"Gas fees are estimated and will fluctuate based on network traffic and transaction complexity."},swapGasFeesExplanation:{message:"MetaMask doesn't make money from gas fees. These fees are estimates and can change based on how busy the network is and how complex a transaction is. Learn more $1.",description:"$1 is a link (text in link can be found at 'swapGasFeesSummaryLinkText')"},swapGasFeesExplanationLinkText:{message:"here",description:"Text for link in swapGasFeesExplanation"},swapGasFeesLearnMore:{message:"Learn more about gas fees"},swapGasFeesSplit:{message:"Gas fees on the previous screen are split between these two transactions."},swapGasFeesSummary:{message:"Gas fees are paid to crypto miners who process transactions on the $1 network. MetaMask does not profit from gas fees.",description:"$1 is the selected network, e.g. Ethereum or BSC"},swapGasIncludedTooltipExplanation:{message:"This quote incorporates gas fees by adjusting the token amount sent or received. You may receive ETH in a separate transaction on your activity list."},swapGasIncludedTooltipExplanationLinkText:{message:"Learn more about gas fees"},swapHighSlippage:{message:"High slippage"},swapIncludesGasAndMetaMaskFee:{message:"Includes gas and a $1% MetaMask fee",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapIncludesMMFee:{message:"Includes a $1% MetaMask fee.",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapIncludesMMFeeAlt:{message:"Quote reflects $1% MetaMask fee",description:"Provides information about the fee that metamask takes for swaps using the latest copy. $1 is a decimal number."},swapIncludesMetaMaskFeeViewAllQuotes:{message:"Includes a $1% MetaMask fee – $2",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number and $2 is a link to view all quotes."},swapLearnMore:{message:"Learn more about Swaps"},swapLiquiditySourceInfo:{message:"We search multiple liquidity sources (exchanges, aggregators and professional market makers) to compare exchange rates and network fees."},swapLowSlippage:{message:"Low slippage"},swapMaxSlippage:{message:"Max slippage"},swapMetaMaskFee:{message:"MetaMask fee"},swapMetaMaskFeeDescription:{message:"The fee of $1% is automatically factored into this quote. You pay it in exchange for a license to use MetaMask's liquidity provider information aggregation software.",description:"Provides information about the fee that metamask takes for swaps. $1 is a decimal number."},swapNQuotesWithDot:{message:"$1 quotes.",description:"$1 is the number of quotes that the user can select from when opening the list of quotes on the 'view quote' screen"},swapNewQuoteIn:{message:"New quotes in $1",description:"Tells the user the amount of time until the currently displayed quotes are update. $1 is a time that is counting down from 1:00 to 0:00"},swapNoTokensAvailable:{message:"No tokens available matching $1",description:"Tells the user that a given search string does not match any tokens in our token lists. $1 can be any string of text"},swapOnceTransactionHasProcess:{message:"Your $1 will be added to your account once this transaction has processed.",description:"This message communicates the token that is being transferred. It is shown on the awaiting swap screen. The $1 will be a token symbol."},swapPriceDifference:{message:"You are about to swap $1 $2 (~$3) for $4 $5 (~$6).",description:"This message represents the price slippage for the swap.  $1 and $4 are a number (ex: 2.89), $2 and $5 are symbols (ex: ETH), and $3 and $6 are fiat currency amounts."},swapPriceDifferenceTitle:{message:"Price difference of ~$1%",description:"$1 is a number (ex: 1.23) that represents the price difference."},swapPriceUnavailableDescription:{message:"Price impact could not be determined due to lack of market price data. Please confirm that you are comfortable with the amount of tokens you are about to receive before swapping."},swapPriceUnavailableTitle:{message:"Check your rate before proceeding"},swapProcessing:{message:"Processing"},swapQuoteDetails:{message:"Quote details"},swapQuoteNofM:{message:"$1 of $2",description:"A count of possible quotes shown to the user while they are waiting for quotes to be fetched. $1 is the number of quotes already loaded, and $2 is the total number of resources that we check for quotes. Keep in mind that not all resources will have a quote for a particular swap."},swapQuoteSource:{message:"Quote source"},swapQuotesExpiredErrorDescription:{message:"Please request new quotes to get the latest rates."},swapQuotesExpiredErrorTitle:{message:"Quotes timeout"},swapQuotesNotAvailableDescription:{message:"Reduce the size of your trade or use a different token."},swapQuotesNotAvailableErrorDescription:{message:"Try adjusting the amount or slippage settings and try again."},swapQuotesNotAvailableErrorTitle:{message:"No quotes available"},swapRate:{message:"Rate"},swapReceiving:{message:"Receiving"},swapReceivingInfoTooltip:{message:"This is an estimate. The exact amount depends on slippage."},swapRequestForQuotation:{message:"Request for quotation"},swapSelect:{message:"Select"},swapSelectAQuote:{message:"Select a quote"},swapSelectAToken:{message:"Select token"},swapSelectQuotePopoverDescription:{message:"Below are all the quotes gathered from multiple liquidity sources."},swapSelectToken:{message:"Select token"},swapShowLatestQuotes:{message:"Show latest quotes"},swapSlippageHighDescription:{message:"The slippage entered ($1%) is considered very high and may result in a bad rate",description:"$1 is the amount of % for slippage"},swapSlippageHighTitle:{message:"High slippage"},swapSlippageLowDescription:{message:"A value this low ($1%) may result in a failed swap",description:"$1 is the amount of % for slippage"},swapSlippageLowTitle:{message:"Low slippage"},swapSlippageNegativeDescription:{message:"Slippage must be greater or equal to zero"},swapSlippageNegativeTitle:{message:"Increase slippage to continue"},swapSlippageOverLimitDescription:{message:"Slippage tolerance must be 15% or less. Anything higher will result in a bad rate."},swapSlippageOverLimitTitle:{message:"Very high slippage"},swapSlippagePercent:{message:"$1%",description:"$1 is the amount of % for slippage"},swapSlippageTooltip:{message:"If the price changes between the time your order is placed and confirmed it’s called “slippage”. Your swap will automatically cancel if slippage exceeds your “slippage tolerance” setting."},swapSlippageZeroDescription:{message:"There are fewer zero-slippage quote providers which will result in a less competitive quote."},swapSlippageZeroTitle:{message:"Sourcing zero-slippage providers"},swapSource:{message:"Liquidity source"},swapSuggested:{message:"Swap suggested"},swapSuggestedGasSettingToolTipMessage:{message:"Swaps are complex and time sensitive transactions. We recommend this gas fee for a good balance between cost and confidence of a successful Swap."},swapSwapFrom:{message:"Swap from"},swapSwapSwitch:{message:"Switch token order"},swapSwapTo:{message:"Swap to"},swapToConfirmWithHwWallet:{message:"to confirm with your hardware wallet"},swapTokenAddedManuallyDescription:{message:"Verify this token on $1 and make sure it is the token you want to trade.",description:'$1 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for "etherscan"'},swapTokenAddedManuallyTitle:{message:"Token added manually"},swapTokenAvailable:{message:"Your $1 has been added to your account.",description:"This message is shown after a swap is successful and communicates the exact amount of tokens the user has received for a swap. The $1 is a decimal number of tokens followed by the token symbol."},swapTokenBalanceUnavailable:{message:"We were unable to retrieve your $1 balance",description:"This message communicates to the user that their balance of a given token is currently unavailable. $1 will be replaced by a token symbol"},swapTokenNotAvailable:{message:"Token is not available to swap in this region"},swapTokenToToken:{message:"Swap $1 to $2",description:"Used in the transaction display list to describe a swap. $1 and $2 are the symbols of tokens in involved in a swap."},swapTokenVerifiedOn1SourceDescription:{message:"$1 is only verified on 1 source. Consider verifying it on $2 before proceeding.",description:'$1 is a token name, $2 points the user to etherscan as a place they can verify information about a token. $1 is replaced with the translation for "etherscan"'},swapTokenVerifiedOn1SourceTitle:{message:"Potentially inauthentic token"},swapTokenVerifiedSources:{message:"Confirmed by $1 sources. Verify on $2.",description:"$1 the number of sources that have verified the token, $2 points the user to a block explorer as a place they can verify information about the token."},swapTooManyDecimalsError:{message:"$1 allows up to $2 decimals",description:"$1 is a token symbol and $2 is the max. number of decimals allowed for the token"},swapTransactionComplete:{message:"Transaction complete"},swapTwoTransactions:{message:"2 transactions"},swapUnknown:{message:"Unknown"},swapZeroSlippage:{message:"0% Slippage"},swapsMaxSlippage:{message:"Slippage tolerance"},swapsNotEnoughToken:{message:"Not enough $1",description:"Tells the user that they don't have enough of a token for a proposed swap. $1 is a token symbol"},swapsViewInActivity:{message:"View in activity"},switch:{message:"Switch"},switchEthereumChainConfirmationDescription:{message:"This will switch the selected network within MetaMask to a previously added network:"},switchEthereumChainConfirmationTitle:{message:"Allow this site to switch the network?"},switchInputCurrency:{message:"Switch input currency"},switchNetwork:{message:"Switch network"},switchNetworks:{message:"Switch networks"},switchToNetwork:{message:"Switch to $1",description:"$1 represents the custom network that has previously been added"},switchToThisAccount:{message:"Switch to this account"},switchedNetworkToastDecline:{message:"Don't show again"},switchedNetworkToastMessage:{message:"$1 is now active on $2",description:"$1 represents the account name, $2 represents the network name"},switchedNetworkToastMessageNoOrigin:{message:"You're now using $1",description:"$1 represents the network name"},switchingNetworksCancelsPendingConfirmations:{message:"Switching networks will cancel all pending confirmations"},symbol:{message:"Symbol"},symbolBetweenZeroTwelve:{message:"Symbol must be 11 characters or fewer."},tenPercentIncreased:{message:"10% increase"},terms:{message:"Terms of use"},termsOfService:{message:"Terms of service"},termsOfUseAgreeText:{message:" I agree to the Terms of Use, which apply to my use of MetaMask and all of its features"},termsOfUseFooterText:{message:"Please scroll to read all sections"},termsOfUseTitle:{message:"Our Terms of Use have updated"},testnets:{message:"Testnets"},theme:{message:"Theme"},themeDescription:{message:"Choose your preferred MetaMask theme."},thirdPartySoftware:{message:"Third-party software notice",description:"Title of a popup modal displayed when installing a snap for the first time."},threeMonthsAbbreviation:{message:"3M",description:"Shortened form of '3 months'"},time:{message:"Time"},tips:{message:"Tips"},tipsForUsingAWallet:{message:"Tips for using a wallet"},tipsForUsingAWalletDescription:{message:"Adding tokens unlocks more ways to use web3."},to:{message:"To"},toAddress:{message:"To: $1",description:"$1 is the address to include in the To label. It is typically shortened first using shortenAddress"},toggleDecodeDescription:{message:"We use 4byte.directory and Sourcify services to decode and display more readable transaction data. This helps you understand the outcome of pending and past transactions, but can result in your IP address being shared."},token:{message:"Token"},tokenAddress:{message:"Token address"},tokenAlreadyAdded:{message:"Token has already been added."},tokenAutoDetection:{message:"Token autodetection"},tokenContractAddress:{message:"Token contract address"},tokenDecimal:{message:"Token decimal"},tokenDecimalFetchFailed:{message:"Token decimal required. Find it on: $1"},tokenDetails:{message:"Token details"},tokenFoundTitle:{message:"1 new token found"},tokenId:{message:"Token ID"},tokenList:{message:"Token lists"},tokenMarketplace:{message:"Token marketplace"},tokenScamSecurityRisk:{message:"token scams and security risks"},tokenStandard:{message:"Token standard"},tokenSymbol:{message:"Token symbol"},tokens:{message:"Tokens"},tokensFoundTitle:{message:"$1 new tokens found",description:"$1 is the number of new tokens detected"},tokensInCollection:{message:"Tokens in collection"},tooltipApproveButton:{message:"I understand"},tooltipSatusConnected:{message:"connected"},tooltipSatusConnectedUpperCase:{message:"Connected"},tooltipSatusNotConnected:{message:"not connected"},total:{message:"Total"},totalVolume:{message:"Total volume"},transaction:{message:"transaction"},transactionCancelAttempted:{message:"Transaction cancel attempted with estimated gas fee of $1 at $2"},transactionCancelSuccess:{message:"Transaction successfully cancelled at $2"},transactionConfirmed:{message:"Transaction confirmed at $2."},transactionCreated:{message:"Transaction created with a value of $1 at $2."},transactionDataFunction:{message:"Function"},transactionDetailGasHeading:{message:"Estimated gas fee"},transactionDetailMultiLayerTotalSubtitle:{message:"Amount + fees"},transactionDropped:{message:"Transaction dropped at $2."},transactionError:{message:"Transaction error. Exception thrown in contract code."},transactionErrorNoContract:{message:"Trying to call a function on a non-contract address."},transactionErrored:{message:"Transaction encountered an error."},transactionFlowNetwork:{message:"Network"},transactionHistoryBaseFee:{message:"Base fee (GWEI)"},transactionHistoryL1GasLabel:{message:"Total L1 gas fee"},transactionHistoryL2GasLimitLabel:{message:"L2 gas limit"},transactionHistoryL2GasPriceLabel:{message:"L2 gas price"},transactionHistoryMaxFeePerGas:{message:"Max fee per gas"},transactionHistoryPriorityFee:{message:"Priority fee (GWEI)"},transactionHistoryTotalGasFee:{message:"Total gas fee"},transactionIdLabel:{message:"Transaction ID",description:"Label for the source transaction ID field."},transactionIncludesTypes:{message:"This transaction includes: $1."},transactionResubmitted:{message:"Transaction resubmitted with estimated gas fee increased to $1 at $2"},transactionSettings:{message:"Transaction settings"},transactionSubmitted:{message:"Transaction submitted with estimated gas fee of $1 at $2."},transactionTotalGasFee:{message:"Total gas fee",description:"Label for the total gas fee incurred in the transaction."},transactionUpdated:{message:"Transaction updated at $2."},transactions:{message:"Transactions"},transfer:{message:"Transfer"},transferCrypto:{message:"Transfer crypto"},transferFrom:{message:"Transfer from"},transferRequest:{message:"Transfer request"},trillionAbbreviation:{message:"T",description:"Shortened form of 'trillion'"},troubleConnectingToLedgerU2FOnFirefox:{message:"We're having trouble connecting your Ledger. $1",description:"$1 is a link to the wallet connection guide;"},troubleConnectingToLedgerU2FOnFirefox2:{message:"Review our hardware wallet connection guide and try again.",description:"$1 of the ledger wallet connection guide"},troubleConnectingToLedgerU2FOnFirefoxLedgerSolution:{message:"If you're on the latest version of Firefox, you might be experiencing an issue related to Firefox dropping U2F support. Learn how to fix this issue $1.",description:"It is a link to the ledger website for the workaround."},troubleConnectingToLedgerU2FOnFirefoxLedgerSolution2:{message:"here",description:"Second part of the error message; It is a link to the ledger website for the workaround."},troubleConnectingToWallet:{message:"We had trouble connecting to your $1, try reviewing $2 and try again.",description:"$1 is the wallet device name; $2 is a link to wallet connection guide"},troubleStarting:{message:"MetaMask had trouble starting. This error could be intermittent, so try restarting the extension."},tryAgain:{message:"Try again"},turnOff:{message:"Turn off"},turnOffMetamaskNotificationsError:{message:"There was an error in disabling the notifications. Please try again later."},turnOn:{message:"Turn on"},turnOnMetamaskNotifications:{message:"Turn on notifications"},turnOnMetamaskNotificationsButton:{message:"Turn on"},turnOnMetamaskNotificationsError:{message:"There was an error in creating the notifications. Please try again later."},turnOnMetamaskNotificationsMessageFirst:{message:"Stay in the loop on what's happening in your wallet with notifications."},turnOnMetamaskNotificationsMessagePrivacyBold:{message:"notifications settings."},turnOnMetamaskNotificationsMessagePrivacyLink:{message:"Learn how we protect your privacy while using this feature."},turnOnMetamaskNotificationsMessageSecond:{message:"To use wallet notifications, we use a profile to sync some settings across your devices. $1"},turnOnMetamaskNotificationsMessageThird:{message:"You can turn off notifications at any time in the $1"},turnOnTokenDetection:{message:"Turn on enhanced token detection"},tutorial:{message:"Tutorial"},twelveHrTitle:{message:"12hr:"},u2f:{message:"U2F",description:"A name on an API for the browser to interact with devices that support the U2F protocol. On some browsers we use it to connect MetaMask to Ledger devices."},unapproved:{message:"Unapproved"},units:{message:"units"},unknown:{message:"Unknown"},unknownCollection:{message:"Unnamed collection"},unknownNetworkForKeyEntropy:{message:"Unknown network",description:"Displayed on places like Snap install warning when regular name is not available."},unknownQrCode:{message:"Error: We couldn't identify that QR code"},unlimited:{message:"Unlimited"},unlock:{message:"Unlock"},unlockMessage:{message:"The decentralized web awaits"},unpin:{message:"Unpin"},unrecognizedChain:{message:"This custom network is not recognized",description:"$1 is a clickable link with text defined by the 'unrecognizedChanLinkText' key. The link will open to instructions for users to validate custom network details."},unsendableAsset:{message:"Sending NFT (ERC-721) tokens is not currently supported",description:"This is an error message we show the user if they attempt to send an NFT asset type, for which currently don't support sending"},unstableTokenPriceDescription:{message:"The price of this token in USD is highly volatile, indicating a high risk of losing significant value by interacting with it."},unstableTokenPriceTitle:{message:"Unstable Token Price"},upArrow:{message:"up arrow"},update:{message:"Update"},updateEthereumChainConfirmationDescription:{message:"This site is requesting to update your default network URL. You can edit defaults and network information any time."},updateNetworkConfirmationTitle:{message:"Update $1",description:"$1 represents network name"},updateOrEditNetworkInformations:{message:"Update your information or"},updateRequest:{message:"Update request"},updatedRpcForNetworks:{message:"Network RPCs Updated"},uploadDropFile:{message:"Drop your file here"},uploadFile:{message:"Upload file"},urlErrorMsg:{message:"URLs require the appropriate HTTP/HTTPS prefix."},use4ByteResolution:{message:"Decode smart contracts"},useMultiAccountBalanceChecker:{message:"Batch account balance requests"},useMultiAccountBalanceCheckerSettingDescription:{message:"Get faster balance updates by batching account balance requests. This lets us fetch your account balances together, so you get quicker updates for an improved experience. When this feature is off, third parties may be less likely to associate your accounts with each other."},useNftDetection:{message:"Autodetect NFTs"},useNftDetectionDescriptionText:{message:"Let MetaMask add NFTs you own using third-party services. Autodetecting NFTs exposes your IP and account address to these services. Enabling this feature could associate your IP address with your Ethereum address and display fake NFTs airdropped by scammers. You can add tokens manually to avoid this risk."},usePhishingDetection:{message:"Use phishing detection"},usePhishingDetectionDescription:{message:"Display a warning for phishing domains targeting Ethereum users"},useSafeChainsListValidation:{message:"Network details check"},useSafeChainsListValidationDescription:{message:"MetaMask uses a third-party service called $1 to show accurate and standardized network details. This reduces your chances of connecting to malicious or incorrect network. When using this feature, your IP address is exposed to chainid.network."},useSafeChainsListValidationWebsite:{message:"chainid.network",description:"useSafeChainsListValidationWebsite is separated from the rest of the text so that we can bold the third party service name in the middle of them"},useTokenDetectionPrivacyDesc:{message:"Automatically displaying tokens sent to your account involves communication with third party servers to fetch token’s images. Those serves will have access to your IP address."},usedByClients:{message:"Used by a variety of different clients"},userName:{message:"Username"},userOpContractDeployError:{message:"Contract deployment from a smart contract account is not supported"},version:{message:"Version"},view:{message:"View"},viewActivity:{message:"View activity"},viewAllQuotes:{message:"view all quotes"},viewContact:{message:"View contact"},viewDetails:{message:"View details"},viewMore:{message:"View more"},viewOnBlockExplorer:{message:"View on block explorer"},viewOnCustomBlockExplorer:{message:"View $1 at $2",description:"$1 is the action type. e.g (Account, Transaction, Swap) and $2 is the Custom Block Explorer URL"},viewOnEtherscan:{message:"View $1 on Etherscan",description:"$1 is the action type. e.g (Account, Transaction, Swap)"},viewOnExplorer:{message:"View on explorer"},viewOnOpensea:{message:"View on Opensea"},viewTransaction:{message:"View transaction"},viewinExplorer:{message:"View $1 in explorer",description:"$1 is the action type. e.g (Account, Transaction, Swap)"},visitSite:{message:"Visit site"},visitSupportDataConsentModalAccept:{message:"Confirm"},visitSupportDataConsentModalDescription:{message:"Do you want to share your MetaMask Identifier and app version with our Support Center? This can help us better solve your problem, but is optional."},visitSupportDataConsentModalReject:{message:"Don’t share"},visitSupportDataConsentModalTitle:{message:"Share device details with support"},visitWebSite:{message:"Visit our website"},wallet:{message:"Wallet"},walletConnectionGuide:{message:"our hardware wallet connection guide"},walletProtectedAndReadyToUse:{message:"Your wallet is protected and ready to use. You can find your Secret Recovery Phrase in $1 ",description:"$1 is the menu path to be shown with font weight bold"},wantToAddThisNetwork:{message:"Want to add this network?"},wantsToAddThisAsset:{message:"This allows the following asset to be added to your wallet."},warning:{message:"Warning"},warningFromSnap:{message:"Warning from $1",description:"$1 represents the name of the snap"},watchEthereumAccountsDescription:{message:"Turning this option on will give you the ability to watch Ethereum accounts via a public address or ENS name. For feedback on this Beta feature please complete this $1.",description:"$1 is the link to a product feedback form"},watchEthereumAccountsToggle:{message:"Watch Ethereum Accounts (Beta)"},watchOutMessage:{message:"Beware of $1.",description:"$1 is a link with text that is provided by the 'securityMessageLinkForNetworks' key"},weak:{message:"Weak"},web3:{message:"Web3"},web3ShimUsageNotification:{message:"We noticed that the current website tried to use the removed window.web3 API. If the site appears to be broken, please click $1 for more information.",description:"$1 is a clickable link."},webhid:{message:"WebHID",description:"Refers to a interface for connecting external devices to the browser. Used for connecting ledger to the browser. Read more here https://developer.mozilla.org/en-US/docs/Web/API/WebHID_API"},websites:{message:"websites",description:"Used in the 'permission_rpc' message."},welcomeBack:{message:"Welcome back!"},welcomeExploreDescription:{message:"Store, send, and spend crypto currencies and assets."},welcomeExploreTitle:{message:"Explore decentralized apps"},welcomeLoginDescription:{message:"Use your MetaMask to login to decentralized apps - no signup needed."},welcomeLoginTitle:{message:"Say hello to your wallet"},welcomeToMetaMask:{message:"Let's get started"},welcomeToMetaMaskIntro:{message:"Trusted by millions, MetaMask is a secure wallet making the world of web3 accessible to all."},whatsThis:{message:"What's this?"},willApproveAmountForBridging:{message:"This will approve $1 for bridging."},willApproveAmountForBridgingHardware:{message:"You’ll need to confirm two transactions on your hardware wallet."},withdrawing:{message:"Withdrawing"},wrongNetworkName:{message:"According to our records, the network name may not correctly match this chain ID."},yes:{message:"Yes"},you:{message:"You"},youDeclinedTheTransaction:{message:"You declined the transaction."},youNeedToAllowCameraAccess:{message:"You need to allow camera access to use this feature."},youReceived:{message:"You received",description:"Label indicating the amount and asset the user received."},youSent:{message:"You sent",description:"Label indicating the amount and asset the user sent."},yourAccounts:{message:"Your accounts"},yourActivity:{message:"Your activity"},yourBalance:{message:"Your balance"},yourBalanceIsAggregated:{message:"Your balance is aggregated"},yourNFTmayBeAtRisk:{message:"Your NFT may be at risk"},yourNetworks:{message:"Your networks"},yourPrivateSeedPhrase:{message:"Your Secret Recovery Phrase"},yourTransactionConfirmed:{message:"Transaction already confirmed"},yourTransactionJustConfirmed:{message:"We weren't able to cancel your transaction before it was confirmed on the blockchain."},yourWalletIsReady:{message:"Your wallet is ready"},zeroGasPriceOnSpeedUpError:{message:"Zero gas price on speed up"}}}}},{package:"$root$",file:"app/_locales/en/messages.json"}],[115,{"../../../../shared/lib/transaction-breakdown-utils":5641,"../../../../shared/lib/transactions-controller-utils":5642,"../../../../ui/ducks/bridge/utils":6635,"../../../../ui/selectors":7402},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getTokenUsdValue=s.getHexGasTotalUsd=void 0;var a=e("../../../../shared/lib/transaction-breakdown-utils"),n=e("../../../../shared/lib/transactions-controller-utils"),r=e("../../../../ui/ducks/bridge/utils"),o=e("../../../../ui/selectors");s.getHexGasTotalUsd=({bridgeHistoryItem:e,state:t})=>{const s=t.metamask.transactions.find((t=>t.id===e.txMetaId));if(!s)return null;const r=(0,a.calcHexGasTotal)(s),i=(0,o.getUSDConversionRateByChainId)(s.chainId)(t);return(0,n.calcTokenAmount)(r,18).toNumber()*i};s.getTokenUsdValue=async({chainId:e,tokenAmount:t,tokenAddress:s,state:a})=>{const n=(0,o.getMarketData)(a),i=(0,r.exchangeRateFromMarketData)(e,s,n);if(i){return t*i*(0,o.getUSDConversionRateByChainId)(e)(a)}const c=await(0,r.getTokenExchangeRate)({chainId:e,tokenAddress:s,currency:"usd"});return c?t*c:null}}}},{package:"$root$",file:"app/scripts/lib/bridge-status/metrics-utils.ts"}],[1272,{"./errors":1273,"./packer":1276,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeSingle=s.decode=s.encodePacked=s.encodeSingle=s.encode=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./packer");s.encode=(e,t,s,a)=>{try{return(0,r.pack)({types:e,values:t,packed:s,tight:a})}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to encode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.encodeSingle=(e,t)=>(0,s.encode)([e],[t]);s.encodePacked=(e,t,a)=>(0,s.encode)(e,t,!0,a);s.decode=(e,t)=>{const s=(0,a.createBytes)(t);try{return(0,r.unpack)(e,s)}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to decode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.decodeSingle=(e,t)=>{const r=(0,s.decode)([e],t);return(0,a.assert)(1===r.length,new n.ParserError("Decoded value array has unexpected length.")),r[0]}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/abi.js"}],[1273,{"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ParserError=s.getErrorStack=s.getErrorMessage=void 0;const a=e("@metamask/utils");s.getErrorMessage=e=>"string"==typeof e?e:e instanceof Error||(0,a.isObject)(e)&&(0,a.hasProperty)(e,"message")&&"string"==typeof e.message?e.message:"Unknown error.";s.getErrorStack=e=>e instanceof Error?e.stack:undefined;class n extends Error{constructor(e,t){super(e),this.name="ParserError";const a=(0,s.getErrorStack)(t);a&&(this.stack=a)}}s.ParserError=n}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/errors.js"}],[1274,{"./abi":1272,"./errors":1273,"./types":1289},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s),n(e("./errors"),s),n(e("./types"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/index.js"}],[1275,{"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.iterate=void 0;const a=e("@metamask/utils");s.iterate=function*(e,t=32){for(let s=0;s<e.length;s+=t){const n=e=>{(0,a.assert)(e>=0,"Cannot skip a negative number of bytes."),(0,a.assert)(e%t==0,"Length must be a multiple of the size."),s+=e},r=e.subarray(s);yield{skip:n,value:r}}return{skip:()=>undefined,value:new Uint8Array}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/iterator.js"}],[1276,{"./errors":1273,"./iterator":1275,"./parsers":1283,"./utils":1291,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.unpack=s.pack=s.isDynamicParser=s.getParser=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./iterator"),o=e("./parsers"),i=e("./utils");s.getParser=e=>{const t={address:o.address,array:o.array,bool:o.bool,bytes:o.bytes,fixedBytes:o.fixedBytes,function:o.fn,number:o.number,string:o.string,tuple:o.tuple},s=t[e];if(s)return s;const a=Object.values(t).find((t=>t.isType(e)));if(a)return a;throw new n.ParserError(`The type "${e}" is not supported.`)};s.isDynamicParser=(e,t)=>{const{isDynamic:s}=e;return"function"==typeof s?s(t):s};s.pack=({types:e,values:t,packed:r=!1,tight:o=!1,arrayPacked:c=!1,byteArray:l=new Uint8Array})=>{(0,a.assert)(e.length===t.length,new n.ParserError(`The number of types (${e.length}) does not match the number of values (${t.length}).`));const{staticBuffer:d,dynamicBuffer:m,pointers:u}=e.reduce((({staticBuffer:e,dynamicBuffer:n,pointers:i},l,d)=>{const m=(0,s.getParser)(l),u=t[d];if(r||c||!(0,s.isDynamicParser)(m,l))return{staticBuffer:m.encode({buffer:e,value:u,type:l,packed:r,tight:o}),dynamicBuffer:n,pointers:i};return{staticBuffer:(0,a.concatBytes)([e,new Uint8Array(32)]),dynamicBuffer:m.encode({buffer:n,value:u,type:l,packed:r,tight:o}),pointers:[...i,{position:e.length,pointer:n.length}]}}),{staticBuffer:new Uint8Array,dynamicBuffer:new Uint8Array,pointers:[]});(0,a.assert)(!r&&!c||0===m.length,new n.ParserError("Invalid pack state."));const p=d.length,h=u.reduce(((e,{pointer:t,position:s})=>{const n=(0,i.padStart)((0,a.numberToBytes)(p+t));return(0,i.set)(e,n,s)}),d);return(0,a.concatBytes)([l,h,m])};s.unpack=(e,t)=>{const o=(0,r.iterate)(t);return e.map((e=>{const{value:{value:r,skip:i},done:c}=o.next();(0,a.assert)(!c,new n.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse "${e}".`));const l=(0,s.getParser)(e);if((0,s.isDynamicParser)(l,e)){const s=(0,a.bytesToNumber)(r.subarray(0,32)),n=t.subarray(s);return l.decode({type:e,value:n,skip:i})}return l.decode({type:e,value:r,skip:i})}))}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/packer.js"}],[1277,{"../errors":1273,"../utils":1291,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.address=s.getAddress=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils");s.getAddress=e=>{const t=(0,a.createBytes)(e);return(0,a.assert)(t.length<=20,new n.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${t.length} bytes.`)),(0,r.padStart)(t,20)},s.address={isDynamic:!1,isType:e=>"address"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:n}){const o=(0,s.getAddress)(t);if(n)return(0,a.concatBytes)([e,o]);const i=(0,r.padStart)(o);return(0,a.concatBytes)([e,i])},decode:({value:e})=>(0,a.add0x)((0,a.bytesToHex)(e.slice(12,32)))}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/address.js"}],[1278,{"../errors":1273,"../packer":1276,"../utils":1291,"./fixed-bytes":1281,"./tuple":1287,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.array=s.getTupleType=s.getArrayType=s.isArrayType=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),o=e("../utils"),i=e("./fixed-bytes"),c=e("./tuple"),l=/^(?<type>.*)\[(?<length>\d*?)\]$/u;s.isArrayType=e=>l.test(e);s.getArrayType=e=>{const t=e.match(l);return(0,a.assert)(t?.groups?.type,new n.ParserError(`Invalid array type. Expected an array type, but received "${e}".`)),[t.groups.type,t.groups.length?parseInt(t.groups.length,10):undefined]};s.getTupleType=(e,t)=>`(${new Array(t).fill(e).join(",")})`,s.array={isDynamic(e){const[t,a]=(0,s.getArrayType)(e);return a===undefined||(0,r.isDynamicParser)((0,r.getParser)(t),t)},isType:e=>(0,s.isArrayType)(e),getByteLength(e){(0,a.assert)((0,s.isArrayType)(e),new n.ParserError(`Expected an array type, but received "${e}".`));const[t,o]=(0,s.getArrayType)(e);return(0,r.isDynamicParser)(this,e)||o===undefined?32:c.tuple.getByteLength((0,s.getTupleType)(t,o))},encode({type:e,buffer:t,value:l,packed:d,tight:m}){const[u,p]=(0,s.getArrayType)(e);if((0,a.assert)(!d||!(0,s.isArrayType)(u),new n.ParserError("Cannot pack nested arrays.")),d&&(0,r.isDynamicParser)((0,r.getParser)(u),u))return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:t,packed:d,arrayPacked:!0,tight:m});if(p)return(0,a.assert)(p===l.length,new n.ParserError(`Array length does not match type length. Expected a length of ${p}, but received ${l.length}.`)),c.tuple.encode({type:(0,s.getTupleType)(u,p),buffer:t,value:l,packed:i.fixedBytes.isType(u)&&m,tight:m});if(d)return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:t,packed:i.fixedBytes.isType(u)&&m,arrayPacked:!0,tight:m});const h=(0,o.padStart)((0,a.numberToBytes)(l.length));return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:(0,a.concatBytes)([t,h]),packed:d,tight:m})},decode({type:e,value:t,...o}){const[i,l]=(0,s.getArrayType)(e);if(l){const e=c.tuple.decode({type:(0,s.getTupleType)(i,l),value:t,...o});return(0,a.assert)(e.length===l,new n.ParserError(`Array length does not match type length. Expected a length of ${l}, but received ${e.length}.`)),e}const d=(0,a.bytesToNumber)(t.subarray(0,32));return(0,r.unpack)(new Array(d).fill(i),t.subarray(32))}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/array.js"}],[1279,{"../errors":1273,"./number":1284,"@metamask/superstruct":2737,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bool=s.getBooleanValue=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),o=e("./number"),i=(0,a.coerce)((0,a.boolean)(),(0,a.union)([(0,a.literal)("true"),(0,a.literal)("false")]),(e=>"true"===e));s.getBooleanValue=e=>{try{return(0,a.create)(e,i)?BigInt(1):BigInt(0)}catch{throw new r.ParserError(`Invalid boolean value. Expected a boolean literal, or the string "true" or "false", but received "${e}".`)}},s.bool={isDynamic:!1,isType:e=>"bool"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:r}){const i=(0,s.getBooleanValue)(t);return a?(0,n.concatBytes)([e,(0,n.bigIntToBytes)(i)]):o.number.encode({type:"uint256",buffer:e,value:i,packed:a,tight:r})},decode:e=>o.number.decode({...e,type:"uint256"})===BigInt(1)}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/bool.js"}],[1280,{"../utils":1291,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bytes=void 0;const a=e("@metamask/utils"),n=e("../utils");s.bytes={isDynamic:!0,isType:e=>"bytes"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:s}){const r=(0,a.createBytes)(t);if(s)return(0,a.concatBytes)([e,r]);const o=32*Math.ceil(r.byteLength/32);return(0,a.concatBytes)([e,(0,n.padStart)((0,a.numberToBytes)(r.byteLength)),(0,n.padEnd)(r,o)])},decode({value:e}){const t=e.subarray(0,32),s=(0,a.bytesToNumber)(t);return e.slice(32,32+s)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/bytes.js"}],[1281,{"../errors":1273,"../utils":1291,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fixedBytes=s.getByteLength=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),o=/^bytes([0-9]{1,2})$/u;s.getByteLength=e=>{const t=e.match(o)?.[1];(0,a.assert)(t,`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`);const s=Number(t);return(0,a.assert)(s>0&&s<=32,new n.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`)),s},s.fixedBytes={isDynamic:!1,isType:e=>o.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:o,packed:i}){const c=(0,s.getByteLength)(e),l=(0,a.createBytes)(o);return(0,a.assert)(l.length<=c,new n.ParserError(`Expected a value of length ${c}, but received a value of length ${l.length}.`)),i?(0,a.concatBytes)([t,(0,r.padEnd)(l,c)]):(0,a.concatBytes)([t,(0,r.padEnd)(l)])},decode({type:e,value:t}){const a=(0,s.getByteLength)(e);return t.slice(0,a)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js"}],[1282,{"../errors":1273,"./fixed-bytes":1281,"@metamask/superstruct":2737,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fn=s.getFunction=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),o=e("./fixed-bytes"),i=(0,a.coerce)((0,a.object)({address:n.StrictHexStruct,selector:n.StrictHexStruct}),(0,a.union)([n.StrictHexStruct,(0,a.instance)(Uint8Array)]),(e=>{const t=(0,n.createBytes)(e);return(0,n.assert)(24===t.length,new r.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${t.length} bytes.`)),{address:(0,n.bytesToHex)(t.subarray(0,20)),selector:(0,n.bytesToHex)(t.subarray(20,24))}}));s.getFunction=e=>{const t=(0,a.create)(e,i);return(0,n.concatBytes)([(0,n.hexToBytes)(t.address),(0,n.hexToBytes)(t.selector)])},s.fn={isDynamic:!1,isType:e=>"function"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:n}){const r=(0,s.getFunction)(t);return o.fixedBytes.encode({type:"bytes24",buffer:e,value:r,packed:a,tight:n})},decode:({value:e})=>({address:(0,n.bytesToHex)(e.slice(0,20)),selector:(0,n.bytesToHex)(e.slice(20,24))})}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/function.js"}],[1283,{"./address":1277,"./array":1278,"./bool":1279,"./bytes":1280,"./fixed-bytes":1281,"./function":1282,"./number":1284,"./parser":1285,"./string":1286,"./tuple":1287},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./address"),s),n(e("./array"),s),n(e("./bool"),s),n(e("./bytes"),s),n(e("./fixed-bytes"),s),n(e("./function"),s),n(e("./number"),s),n(e("./parser"),s),n(e("./string"),s),n(e("./tuple"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/index.js"}],[1284,{"../errors":1273,"../utils":1291,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.number=s.getBigInt=s.assertNumberLength=s.getLength=s.isSigned=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),o=/^u?int(?<length>[0-9]*)?$/u;s.isSigned=e=>!e.startsWith("u");s.getLength=e=>{if("int"===e||"uint"===e)return 256;const t=e.match(o);(0,a.assert)(t?.groups?.length,new n.ParserError(`Invalid number type. Expected a number type, but received "${e}".`));const s=parseInt(t.groups.length,10);return(0,a.assert)(s>=8&&s<=256,new n.ParserError(`Invalid number length. Expected a number between 8 and 256, but received "${e}".`)),(0,a.assert)(s%8==0,new n.ParserError(`Invalid number length. Expected a multiple of 8, but received "${e}".`)),s};s.assertNumberLength=(e,t)=>{const r=(0,s.getLength)(t),o=BigInt(2)**BigInt(r-((0,s.isSigned)(t)?1:0))-BigInt(1);(0,s.isSigned)(t)?(0,a.assert)(e>=-(o+BigInt(1))&&e<=o,new n.ParserError(`Number "${e}" is out of range for type "${t}".`)):(0,a.assert)(e<=o,new n.ParserError(`Number "${e}" is out of range for type "${t}".`))};s.getBigInt=e=>{try{return(0,a.createBigInt)(e)}catch{throw new n.ParserError(`Invalid number. Expected a valid number value, but received "${e}".`)}},s.number={isDynamic:!1,isType:e=>o.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:n,packed:o}){const i=(0,s.getBigInt)(n);if((0,s.assertNumberLength)(i,e),(0,s.isSigned)(e)){if(o){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,a.signedBigIntToBytes)(i,n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.signedBigIntToBytes)(i,32))])}if(o){const n=(0,s.getLength)(e)/8;return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(i),n)])}return(0,a.concatBytes)([t,(0,r.padStart)((0,a.bigIntToBytes)(i))])},decode({type:e,value:t}){const n=t.subarray(0,32);if((0,s.isSigned)(e)){const t=(0,a.bytesToSignedBigInt)(n);return(0,s.assertNumberLength)(t,e),t}const r=(0,a.bytesToBigInt)(n);return(0,s.assertNumberLength)(r,e),r}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/number.js"}],[1285,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/parser.js"}],[1286,{"./bytes":1280,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.string=void 0;const a=e("@metamask/utils"),n=e("./bytes");s.string={isDynamic:!0,isType:e=>"string"===e,getByteLength:()=>32,encode:({buffer:e,value:t,packed:s,tight:r})=>n.bytes.encode({type:"bytes",buffer:e,value:(0,a.stringToBytes)(t),packed:s,tight:r}),decode:e=>(0,a.bytesToString)(n.bytes.decode(e))}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/string.js"}],[1287,{"../errors":1273,"../packer":1276,"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.tuple=s.getTupleElements=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),o=/^\((.+)\)$/u;s.getTupleElements=e=>{(0,a.assert)(e.startsWith("(")&&e.endsWith(")"),new n.ParserError(`Invalid tuple type. Expected tuple type, but received "${e}".`));const t=[];let s="",r=0;for(let a=1;a<e.length-1;a++){const n=e[a];","===n&&0===r?(t.push(s.trim()),s=""):(s+=n,"("===n?r+=1:")"===n&&(r-=1))}return s.trim()&&t.push(s.trim()),t},s.tuple={isDynamic:e=>(0,s.getTupleElements)(e).some((e=>{const t=(0,r.getParser)(e);return(0,r.isDynamicParser)(t,e)})),isType:e=>(e=>o.test(e))(e),getByteLength(e){if((0,r.isDynamicParser)(this,e))return 32;return(0,s.getTupleElements)(e).reduce(((e,t)=>e+(0,r.getParser)(t).getByteLength(t)),0)},encode({type:e,buffer:t,value:a,packed:n,tight:o}){const i=(0,s.getTupleElements)(e);return(0,r.pack)({types:i,values:a,byteArray:t,packed:n,tight:o})},decode({type:e,value:t,skip:a}){const n=(0,s.getTupleElements)(e);return a(this.getByteLength(e)-32),(0,r.unpack)(n,t)}}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/parsers/tuple.js"}],[1288,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/types/abi.js"}],[1289,{"./abi":1288},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/types/index.js"}],[1290,{"@metamask/utils":1302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.padEnd=s.padStart=s.set=void 0;const a=e("@metamask/utils");s.set=(e,t,s)=>(0,a.concatBytes)([e.subarray(0,s),t,e.subarray(s+t.length)]);s.padStart=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([s,e])};s.padEnd=(e,t=32)=>{const s=new Uint8Array(Math.max(t-e.length,0)).fill(0);return(0,a.concatBytes)([e,s])}}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/utils/buffer.js"}],[1291,{"./buffer":1290},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./buffer"),s)}}},{package:"@metamask/abi-utils",file:"node_modules/@metamask/abi-utils/dist/utils/index.js"}],[1292,{"./errors.cjs":1300,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertExhaustive=s.assertStruct=s.assert=s.AssertionError=void 0;const a=e("@metamask/superstruct"),n=e("./errors.cjs");function r(e,t){return s=e,Boolean("string"==typeof s?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var s}class o extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}s.AssertionError=o,s.assert=function(e,t="Assertion failed.",s=o){if(!e){if(t instanceof Error)throw t;throw r(s,t)}},s.assertStruct=function(e,t,s="Assertion failed",i=o){try{(0,a.assert)(e,t)}catch(e){throw r(i,`${s}: ${function(e){return(0,n.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},s.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/assert.cjs"}],[1293,{"./assert.cjs":1292,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.base64=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs");s.base64=(e,t={})=>{const s=t.paddingRequired??!1,r=t.characterSet??"base64";let o,i;return"base64"===r?o=String.raw`[A-Za-z0-9+\/]`:((0,n.assert)("base64url"===r),o=String.raw`[-_A-Za-z0-9]`),i=s?new RegExp(`^(?:${o}{4})*(?:${o}{3}=|${o}{2}==)?$`,"u"):new RegExp(`^(?:${o}{4})*(?:${o}{2,3}|${o}{3}=|${o}{2}==)?$`,"u"),(0,a.pattern)(e,i)}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/base64.cjs"}],[1294,{"./assert.cjs":1292,"./hex.cjs":1301,"@scure/base":2889,buffer:3936},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.createDataView=s.concatBytes=s.valueToBytes=s.base64ToBytes=s.stringToBytes=s.numberToBytes=s.signedBigIntToBytes=s.bigIntToBytes=s.hexToBytes=s.bytesToBase64=s.bytesToString=s.bytesToNumber=s.bytesToSignedBigInt=s.bytesToBigInt=s.bytesToHex=s.assertIsBytes=s.isBytes=void 0;const a=e("@scure/base"),n=e("./assert.cjs"),r=e("./hex.cjs"),o=48,i=58,c=87;const l=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function d(e){return e instanceof Uint8Array}function m(e){(0,n.assert)(d(e),"Value must be a Uint8Array.")}function u(e){if(m(e),0===e.length)return"0x";const t=l(),s=new Array(e.length);for(let a=0;a<e.length;a++)s[a]=t[e[a]];return(0,r.add0x)(s.join(""))}function p(e){m(e);const t=u(e);return BigInt(t)}function h(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),s=t.length%2==0?t:`0${t}`,a=new Uint8Array(s.length/2);for(let e=0;e<a.length;e++){const t=s.charCodeAt(2*e),n=s.charCodeAt(2*e+1),r=t-(t<i?o:c),l=n-(n<i?o:c);a[e]=16*r+l}return a}function g(e){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return h(e.toString(16))}function f(e){(0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return h(e.toString(16))}function b(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function y(e){if("bigint"==typeof e)return g(e);if("number"==typeof e)return f(e);if("string"==typeof e)return e.startsWith("0x")?h(e):b(e);if(d(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}s.isBytes=d,s.assertIsBytes=m,s.bytesToHex=u,s.bytesToBigInt=p,s.bytesToSignedBigInt=function(e){m(e);let t=BigInt(0);for(const s of e)t=(t<<BigInt(8))+BigInt(s);return BigInt.asIntN(8*e.length,t)},s.bytesToNumber=function(e){m(e);const t=p(e);return(0,n.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},s.bytesToString=function(e){return m(e),(new TextDecoder).decode(e)},s.bytesToBase64=function(e){return m(e),a.base64.encode(e)},s.hexToBytes=h,s.bigIntToBytes=g,s.signedBigIntToBytes=function(e,t){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)("number"==typeof t,"Byte length must be a number."),(0,n.assert)(t>0,"Byte length must be greater than 0."),(0,n.assert)(function(e,t){(0,n.assert)(t>0);const s=e>>BigInt(31);return!((~e&s)+(e&~s)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let s=e;const a=new Uint8Array(t);for(let e=0;e<a.length;e++)a[e]=Number(BigInt.asUintN(8,s)),s>>=BigInt(8);return a.reverse()},s.numberToBytes=f,s.stringToBytes=b,s.base64ToBytes=function(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),a.base64.decode(e)},s.valueToBytes=y,s.concatBytes=function(e){const t=new Array(e.length);let s=0;for(let a=0;a<e.length;a++){const n=y(e[a]);t[a]=n,s+=n.length}const a=new Uint8Array(s);for(let e=0,s=0;e<t.length;e++)a.set(t[e],s),s+=t[e].length;return a},s.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/bytes.cjs"}],[1295,{"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toCaipChainId=s.parseCaipAccountId=s.parseCaipChainId=s.isCaipAssetId=s.isCaipAssetType=s.isCaipAccountAddress=s.isCaipAccountId=s.isCaipReference=s.isCaipNamespace=s.isCaipChainId=s.KnownCaipNamespace=s.CaipAssetIdStruct=s.CaipAssetTypeStruct=s.CaipAccountAddressStruct=s.CaipAccountIdStruct=s.CaipReferenceStruct=s.CaipNamespaceStruct=s.CaipChainIdStruct=s.CAIP_ASSET_ID_REGEX=s.CAIP_ASSET_TYPE_REGEX=s.CAIP_ACCOUNT_ADDRESS_REGEX=s.CAIP_ACCOUNT_ID_REGEX=s.CAIP_REFERENCE_REGEX=s.CAIP_NAMESPACE_REGEX=s.CAIP_CHAIN_ID_REGEX=void 0;const a=e("@metamask/superstruct");function n(e){return(0,a.is)(e,s.CaipNamespaceStruct)}function r(e){return(0,a.is)(e,s.CaipReferenceStruct)}s.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,s.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,s.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,s.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,s.CAIP_ASSET_TYPE_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ASSET_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u,s.CaipChainIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_CHAIN_ID_REGEX),s.CaipNamespaceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_NAMESPACE_REGEX),s.CaipReferenceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_REFERENCE_REGEX),s.CaipAccountIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ID_REGEX),s.CaipAccountAddressStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ADDRESS_REGEX),s.CaipAssetTypeStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ASSET_TYPE_REGEX),s.CaipAssetIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ASSET_ID_REGEX),function(e){e.Bip122="bip122",e.Eip155="eip155",e.Wallet="wallet"}(s.KnownCaipNamespace||(s.KnownCaipNamespace={})),s.isCaipChainId=function(e){return(0,a.is)(e,s.CaipChainIdStruct)},s.isCaipNamespace=n,s.isCaipReference=r,s.isCaipAccountId=function(e){return(0,a.is)(e,s.CaipAccountIdStruct)},s.isCaipAccountAddress=function(e){return(0,a.is)(e,s.CaipAccountAddressStruct)},s.isCaipAssetType=function(e){return(0,a.is)(e,s.CaipAssetTypeStruct)},s.isCaipAssetId=function(e){return(0,a.is)(e,s.CaipAssetIdStruct)},s.parseCaipChainId=function(e){const t=s.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},s.parseCaipAccountId=function(e){const t=s.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},s.toCaipChainId=function(e,t){if(!n(e))throw new Error(`Invalid "namespace", must match: ${s.CAIP_NAMESPACE_REGEX.toString()}`);if(!r(t))throw new Error(`Invalid "reference", must match: ${s.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1296,{"./base64.cjs":1293,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ChecksumStruct=void 0;const a=e("@metamask/superstruct"),n=e("./base64.cjs");s.ChecksumStruct=(0,a.size)((0,n.base64)((0,a.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/checksum.cjs"}],[1297,{"./assert.cjs":1292,"./bytes.cjs":1294,"./hex.cjs":1301,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createHex=s.createBytes=s.createBigInt=s.createNumber=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./bytes.cjs"),o=e("./hex.cjs"),i=(0,a.union)([(0,a.number)(),(0,a.bigint)(),(0,a.string)(),o.StrictHexStruct]),c=(0,a.coerce)((0,a.number)(),i,Number),l=(0,a.coerce)((0,a.bigint)(),i,BigInt),d=((0,a.union)([o.StrictHexStruct,(0,a.instance)(Uint8Array)]),(0,a.coerce)((0,a.instance)(Uint8Array),(0,a.union)([o.StrictHexStruct]),r.hexToBytes)),m=(0,a.coerce)(o.StrictHexStruct,(0,a.instance)(Uint8Array),r.bytesToHex);s.createNumber=function(e){try{const t=(0,a.create)(e,c);return(0,n.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof a.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},s.createBigInt=function(e){try{return(0,a.create)(e,l)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},s.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,a.create)(e,d)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},s.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,a.create)(e,m)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/coercers.cjs"}],[1298,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},o=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.FrozenSet=s.FrozenMap=void 0;class i{get size(){return r(this,a,"f").size}[(a=new WeakMap,Symbol.iterator)](){return r(this,a,"f")[Symbol.iterator]()}constructor(e){a.set(this,void 0),o(this,a,new Map(e),"f"),Object.freeze(this)}entries(){return r(this,a,"f").entries()}forEach(e,t){return r(this,a,"f").forEach(((s,a,n)=>e.call(t,s,a,this)))}get(e){return r(this,a,"f").get(e)}has(e){return r(this,a,"f").has(e)}keys(){return r(this,a,"f").keys()}values(){return r(this,a,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}}s.FrozenMap=i;class c{get size(){return r(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return r(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),o(this,n,new Set(e),"f"),Object.freeze(this)}entries(){return r(this,n,"f").entries()}forEach(e,t){return r(this,n,"f").forEach(((s,a,n)=>e.call(t,s,a,this)))}has(e){return r(this,n,"f").has(e)}keys(){return r(this,n,"f").keys()}values(){return r(this,n,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}}s.FrozenSet=c,Object.freeze(i),Object.freeze(i.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/collections.cjs"}],[1299,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1300,{"./misc.cjs":1306,"pony-cause":4866},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.wrapError=s.getErrorMessage=s.isErrorWithStack=s.isErrorWithMessage=s.isErrorWithCode=void 0;const a=e("pony-cause"),n=e("./misc.cjs");function r(e){return"object"==typeof e&&null!==e&&"code"in e}function o(e){return"object"==typeof e&&null!==e&&"message"in e}s.isErrorWithCode=r,s.isErrorWithMessage=o,s.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},s.getErrorMessage=function(e){return o(e)&&"string"==typeof e.message?e.message:(0,n.isNullOrUndefined)(e)?"":String(e)},s.wrapError=function(e,t){if((s=e)instanceof Error||(0,n.isObject)(s)&&"Error"===s.constructor.name){let s;return s=2===Error.length?new Error(t,{cause:e}):new a.ErrorWithCause(t,{cause:e}),r(e)&&(s.code=e.code),s}var s;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/errors.cjs"}],[1301,{"./assert.cjs":1292,"./bytes.cjs":1294,"@metamask/superstruct":2737,"@noble/hashes/sha3":2866},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.remove0x=s.add0x=s.isValidChecksumAddress=s.getChecksumAddress=s.isValidHexAddress=s.assertIsStrictHexString=s.assertIsHexString=s.isStrictHexString=s.isHexString=s.HexChecksumAddressStruct=s.HexAddressStruct=s.StrictHexStruct=s.HexStruct=void 0;const a=e("@metamask/superstruct"),n=e("@noble/hashes/sha3"),r=e("./assert.cjs"),o=e("./bytes.cjs");function i(e){return(0,a.is)(e,s.HexStruct)}function c(e){return(0,a.is)(e,s.StrictHexStruct)}function l(e){(0,r.assert)((0,a.is)(e,s.HexChecksumAddressStruct),"Invalid hex address.");const t=m(e.toLowerCase()),i=m((0,o.bytesToHex)((0,n.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const s=i[t];return(0,r.assert)((0,a.is)(s,(0,a.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e})).join("")}`}function d(e){return!!(0,a.is)(e,s.HexChecksumAddressStruct)&&l(e)===e}function m(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}s.HexStruct=(0,a.pattern)((0,a.string)(),/^(?:0x)?[0-9a-f]+$/iu),s.StrictHexStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]+$/iu),s.HexAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]{40}$/u),s.HexChecksumAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-fA-F]{40}$/u),s.isHexString=i,s.isStrictHexString=c,s.assertIsHexString=function(e){(0,r.assert)(i(e),"Value must be a hexadecimal string.")},s.assertIsStrictHexString=function(e){(0,r.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},s.isValidHexAddress=function(e){return(0,a.is)(e,s.HexAddressStruct)||d(e)},s.getChecksumAddress=l,s.isValidChecksumAddress=d,s.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},s.remove0x=m}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/hex.cjs"}],[1302,{"./assert.cjs":1292,"./base64.cjs":1293,"./bytes.cjs":1294,"./caip-types.cjs":1295,"./checksum.cjs":1296,"./coercers.cjs":1297,"./collections.cjs":1298,"./encryption-types.cjs":1299,"./errors.cjs":1300,"./hex.cjs":1301,"./json.cjs":1303,"./keyring.cjs":1304,"./logging.cjs":1305,"./misc.cjs":1306,"./number.cjs":1307,"./opaque.cjs":1308,"./promise.cjs":1309,"./time.cjs":1310,"./transaction-types.cjs":1311,"./versions.cjs":1312},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./assert.cjs"),s),n(e("./base64.cjs"),s),n(e("./bytes.cjs"),s),n(e("./caip-types.cjs"),s),n(e("./checksum.cjs"),s),n(e("./coercers.cjs"),s),n(e("./collections.cjs"),s),n(e("./encryption-types.cjs"),s),n(e("./errors.cjs"),s),n(e("./hex.cjs"),s),n(e("./json.cjs"),s),n(e("./keyring.cjs"),s),n(e("./logging.cjs"),s),n(e("./misc.cjs"),s),n(e("./number.cjs"),s),n(e("./opaque.cjs"),s),n(e("./promise.cjs"),s),n(e("./time.cjs"),s),n(e("./transaction-types.cjs"),s),n(e("./versions.cjs"),s)}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/index.cjs"}],[1303,{"./assert.cjs":1292,"./misc.cjs":1306,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getJsonRpcIdValidator=s.assertIsJsonRpcError=s.isJsonRpcError=s.assertIsJsonRpcFailure=s.isJsonRpcFailure=s.assertIsJsonRpcSuccess=s.isJsonRpcSuccess=s.assertIsJsonRpcResponse=s.isJsonRpcResponse=s.assertIsPendingJsonRpcResponse=s.isPendingJsonRpcResponse=s.JsonRpcResponseStruct=s.JsonRpcFailureStruct=s.JsonRpcSuccessStruct=s.PendingJsonRpcResponseStruct=s.assertIsJsonRpcRequest=s.isJsonRpcRequest=s.assertIsJsonRpcNotification=s.isJsonRpcNotification=s.JsonRpcNotificationStruct=s.JsonRpcRequestStruct=s.JsonRpcParamsStruct=s.JsonRpcErrorStruct=s.JsonRpcIdStruct=s.JsonRpcVersionStruct=s.jsonrpc2=s.getJsonSize=s.getSafeJson=s.isValidJson=s.JsonStruct=s.UnsafeJsonStruct=s.exactOptional=s.object=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./misc.cjs");function o({path:e,branch:t}){const s=e[e.length-1];return(0,r.hasProperty)(t[t.length-2],s)}function i(e){return new a.Struct({...e,type:`optional ${e.type}`,validator:(t,s)=>!o(s)||e.validator(t,s),refiner:(t,s)=>!o(s)||e.refiner(t,s)})}s.object=e=>(0,a.object)(e),s.exactOptional=i;function c(e){return(0,a.create)(e,s.JsonStruct)}s.UnsafeJsonStruct=(0,a.union)([(0,a.literal)(null),(0,a.boolean)(),(0,a.define)("finite number",(e=>(0,a.is)(e,(0,a.number)())&&Number.isFinite(e))),(0,a.string)(),(0,a.array)((0,a.lazy)((()=>s.UnsafeJsonStruct))),(0,a.record)((0,a.string)(),(0,a.lazy)((()=>s.UnsafeJsonStruct)))]),s.JsonStruct=(0,a.coerce)(s.UnsafeJsonStruct,(0,a.any)(),(e=>((0,n.assertStruct)(e,s.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))))),s.isValidJson=function(e){try{return c(e),!0}catch{return!1}},s.getSafeJson=c,s.getJsonSize=function(e){(0,n.assertStruct)(e,s.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},s.jsonrpc2="2.0",s.JsonRpcVersionStruct=(0,a.literal)(s.jsonrpc2),s.JsonRpcIdStruct=(0,a.nullable)((0,a.union)([(0,a.number)(),(0,a.string)()])),s.JsonRpcErrorStruct=(0,s.object)({code:(0,a.integer)(),message:(0,a.string)(),data:i(s.JsonStruct),stack:i((0,a.string)())}),s.JsonRpcParamsStruct=(0,a.union)([(0,a.record)((0,a.string)(),s.JsonStruct),(0,a.array)(s.JsonStruct)]),s.JsonRpcRequestStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:i(s.JsonRpcParamsStruct)}),s.JsonRpcNotificationStruct=(0,s.object)({jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:i(s.JsonRpcParamsStruct)}),s.isJsonRpcNotification=function(e){return(0,a.is)(e,s.JsonRpcNotificationStruct)},s.assertIsJsonRpcNotification=function(e,t){(0,n.assertStruct)(e,s.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},s.isJsonRpcRequest=function(e){return(0,a.is)(e,s.JsonRpcRequestStruct)},s.assertIsJsonRpcRequest=function(e,t){(0,n.assertStruct)(e,s.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},s.PendingJsonRpcResponseStruct=(0,a.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:(0,a.optional)((0,a.unknown)()),error:(0,a.optional)(s.JsonRpcErrorStruct)}),s.JsonRpcSuccessStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:s.JsonStruct}),s.JsonRpcFailureStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,error:s.JsonRpcErrorStruct}),s.JsonRpcResponseStruct=(0,a.union)([s.JsonRpcSuccessStruct,s.JsonRpcFailureStruct]),s.isPendingJsonRpcResponse=function(e){return(0,a.is)(e,s.PendingJsonRpcResponseStruct)},s.assertIsPendingJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},s.isJsonRpcResponse=function(e){return(0,a.is)(e,s.JsonRpcResponseStruct)},s.assertIsJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},s.isJsonRpcSuccess=function(e){return(0,a.is)(e,s.JsonRpcSuccessStruct)},s.assertIsJsonRpcSuccess=function(e,t){(0,n.assertStruct)(e,s.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},s.isJsonRpcFailure=function(e){return(0,a.is)(e,s.JsonRpcFailureStruct)},s.assertIsJsonRpcFailure=function(e,t){(0,n.assertStruct)(e,s.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},s.isJsonRpcError=function(e){return(0,a.is)(e,s.JsonRpcErrorStruct)},s.assertIsJsonRpcError=function(e,t){(0,n.assertStruct)(e,s.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},s.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:s,permitNull:a}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(s||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||a&&null===e)}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/json.cjs"}],[1304,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/keyring.cjs"}],[1305,{debug:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.createProjectLogger=void 0;const n=(0,a(e("debug")).default)("metamask");s.createProjectLogger=function(e){return n.extend(e)},s.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/logging.cjs"}],[1306,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateNumberSize=s.calculateStringSize=s.isASCII=s.isPlainObject=s.ESCAPE_CHARACTERS_REGEXP=s.JsonSize=s.getKnownPropertyNames=s.hasProperty=s.isObject=s.isNullOrUndefined=s.isNonEmptyArray=void 0,s.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},s.isNullOrUndefined=function(e){return null===e||e===undefined},s.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function a(e){return e.charCodeAt(0)<=127}s.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),s.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(s.JsonSize||(s.JsonSize={})),s.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,s.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},s.isASCII=a,s.calculateStringSize=function(e){return e.split("").reduce(((e,t)=>a(t)?e+1:e+2),0)+(e.match(s.ESCAPE_CHARACTERS_REGEXP)??[]).length},s.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/misc.cjs"}],[1307,{"./assert.cjs":1292,"./hex.cjs":1301},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hexToBigInt=s.hexToNumber=s.bigIntToHex=s.numberToHex=void 0;const a=e("./assert.cjs"),n=e("./hex.cjs");s.numberToHex=e=>((0,a.assert)("number"==typeof e,"Value must be a number."),(0,a.assert)(e>=0,"Value must be a non-negative number."),(0,a.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,n.add0x)(e.toString(16)));s.bigIntToHex=e=>((0,a.assert)("bigint"==typeof e,"Value must be a bigint."),(0,a.assert)(e>=0,"Value must be a non-negative bigint."),(0,n.add0x)(e.toString(16)));s.hexToNumber=e=>{(0,n.assertIsHexString)(e);const t=parseInt(e,16);return(0,a.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};s.hexToBigInt=e=>((0,n.assertIsHexString)(e),BigInt((0,n.add0x)(e)))}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/number.cjs"}],[1308,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/opaque.cjs"}],[1309,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createDeferredPromise=void 0,s.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,s;const a=new Promise(((e,a)=>{t=e,s=a}));return e&&a.catch((e=>{})),{promise:a,resolve:t,reject:s}}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/promise.cjs"}],[1310,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.timeSince=s.inMilliseconds=s.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s.Duration||(s.Duration={}));const a=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};s.inMilliseconds=function(e,t){return a(e,"count"),e*t},s.timeSince=function(e){return a(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/time.cjs"}],[1311,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1312,{"./assert.cjs":1292,"@metamask/superstruct":2737,semver:5410},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.satisfiesVersionRange=s.gtRange=s.gtVersion=s.assertIsSemVerRange=s.assertIsSemVerVersion=s.isValidSemVerRange=s.isValidSemVerVersion=s.VersionRangeStruct=s.VersionStruct=void 0;const a=e("@metamask/superstruct"),n=e("semver"),r=e("./assert.cjs");s.VersionStruct=(0,a.refine)((0,a.string)(),"Version",(e=>null!==(0,n.valid)(e)||`Expected SemVer version, got "${e}"`)),s.VersionRangeStruct=(0,a.refine)((0,a.string)(),"Version range",(e=>null!==(0,n.validRange)(e)||`Expected SemVer range, got "${e}"`)),s.isValidSemVerVersion=function(e){return(0,a.is)(e,s.VersionStruct)},s.isValidSemVerRange=function(e){return(0,a.is)(e,s.VersionRangeStruct)},s.assertIsSemVerVersion=function(e){(0,r.assertStruct)(e,s.VersionStruct)},s.assertIsSemVerRange=function(e){(0,r.assertStruct)(e,s.VersionRangeStruct)},s.gtVersion=function(e,t){return(0,n.gt)(e,t)},s.gtRange=function(e,t){return(0,n.gtr)(e,t)},s.satisfiesVersionRange=function(e,t){return(0,n.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/abi-utils>@metamask/utils",file:"node_modules/@metamask/abi-utils/node_modules/@metamask/utils/dist/versions.cjs"}],[1320,{"./errors.cjs":1321,"@metamask/base-controller":1365,"@metamask/rpc-errors":2404,nanoid:4822},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},f=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.ApprovalController=s.APPROVAL_TYPE_RESULT_SUCCESS=s.APPROVAL_TYPE_RESULT_ERROR=s.ORIGIN_METAMASK=void 0;const b=e("@metamask/base-controller"),y=e("@metamask/rpc-errors"),w=e("nanoid"),k=e("./errors.cjs");s.ORIGIN_METAMASK="metamask",s.APPROVAL_TYPE_RESULT_ERROR="result_error",s.APPROVAL_TYPE_RESULT_SUCCESS="result_success";const A="ApprovalController",E={pendingApprovals:{persist:!1,anonymous:!0},pendingApprovalCount:{persist:!1,anonymous:!1},approvalFlows:{persist:!1,anonymous:!1}};class S extends b.BaseController{constructor({messenger:e,showApprovalRequest:t,state:s={},typesExcludedFromRateLimiting:c=[]}){super({name:A,metadata:E,messenger:e,state:{pendingApprovals:{},pendingApprovalCount:0,approvalFlows:[],...s}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),g(this,n,new Map,"f"),g(this,r,new Map,"f"),g(this,o,t,"f"),g(this,i,c,"f"),this.registerMessageHandlers()}registerMessageHandlers(){this.messagingSystem.registerActionHandler(`${A}:clearRequests`,this.clear.bind(this)),this.messagingSystem.registerActionHandler(`${A}:addRequest`,((e,t)=>t?this.addAndShowApprovalRequest(e):this.add(e))),this.messagingSystem.registerActionHandler(`${A}:hasRequest`,this.has.bind(this)),this.messagingSystem.registerActionHandler(`${A}:acceptRequest`,this.accept.bind(this)),this.messagingSystem.registerActionHandler(`${A}:rejectRequest`,this.reject.bind(this)),this.messagingSystem.registerActionHandler(`${A}:updateRequestState`,this.updateRequestState.bind(this)),this.messagingSystem.registerActionHandler(`${A}:startFlow`,this.startFlow.bind(this)),this.messagingSystem.registerActionHandler(`${A}:endFlow`,this.endFlow.bind(this)),this.messagingSystem.registerActionHandler(`${A}:setFlowLoadingText`,this.setFlowLoadingText.bind(this)),this.messagingSystem.registerActionHandler(`${A}:showSuccess`,this.success.bind(this)),this.messagingSystem.registerActionHandler(`${A}:showError`,this.error.bind(this))}addAndShowApprovalRequest(e){const t=f(this,a,"m",c).call(this,e.origin,e.type,e.id,e.requestData,e.requestState,e.expectsResult);return f(this,o,"f").call(this),t}add(e){return f(this,a,"m",c).call(this,e.origin,e.type,e.id,e.requestData,e.requestState,e.expectsResult)}get(e){return this.state.pendingApprovals[e]}getApprovalCount(e={}){if(!e.origin&&!e.type)throw new Error("Must specify origin, type, or both.");const{origin:t,type:s}=e;if(t&&s)return f(this,r,"f").get(t)?.get(s)||0;if(t)return Array.from((f(this,r,"f").get(t)||new Map).values()).reduce(((e,t)=>e+t),0);let a=0;for(const e of Object.values(this.state.pendingApprovals))e.type===s&&(a+=1);return a}getTotalApprovalCount(){return this.state.pendingApprovalCount}has(e={}){const{id:t,origin:s,type:a}=e;if(t){if("string"!=typeof t)throw new Error("May not specify non-string id.");return f(this,n,"f").has(t)}if(a&&"string"!=typeof a)throw new Error("May not specify non-string type.");if(s){if("string"!=typeof s)throw new Error("May not specify non-string origin.");return a?Boolean(f(this,r,"f").get(s)?.get(a)):f(this,r,"f").has(s)}if(a){for(const e of Object.values(this.state.pendingApprovals))if(e.type===a)return!0;return!1}throw new Error("Must specify a valid combination of id, origin, and type.")}accept(e,t,s){const n=this.get(e),r=f(this,a,"m",p).call(this,e);let o=!1;return s?.deleteAfterResult&&s.waitForResult||(f(this,a,"m",u).call(this,e),o=!0),new Promise(((a,o)=>{const i={success:e=>a({value:e}),error:o};if(s?.waitForResult&&!n.expectsResult)return void o(new k.ApprovalRequestNoResultSupportError(e));const c=s?.waitForResult?i:undefined,l=n.expectsResult?{value:t,resultCallbacks:c}:t;r.resolve(l),s?.waitForResult||a({value:undefined})})).finally((()=>{o||f(this,a,"m",u).call(this,e)}))}reject(e,t){const s=f(this,a,"m",p).call(this,e);f(this,a,"m",u).call(this,e),s.reject(t)}clear(e){for(const t of f(this,n,"f").keys())this.reject(t,e);f(this,r,"f").clear(),this.update((e=>{e.pendingApprovals={},e.pendingApprovalCount=0}))}updateRequestState(e){if(!this.state.pendingApprovals[e.id])throw new k.ApprovalRequestNotFoundError(e.id);this.update((t=>{t.pendingApprovals[e.id].requestState=e.requestState}))}startFlow(e={}){const t=e.id??(0,w.nanoid)(),s=e.loadingText??null;return this.update((e=>{e.approvalFlows.push({id:t,loadingText:s})})),!1!==e.show&&f(this,o,"f").call(this),{id:t,loadingText:s}}endFlow({id:e}){if(!this.state.approvalFlows.length)throw new k.NoApprovalFlowsError;if(e!==this.state.approvalFlows.slice(-1)[0].id)throw new k.EndInvalidFlowError(e,this.state.approvalFlows.map((e=>e.id)));this.update((e=>{e.approvalFlows.pop()}))}setFlowLoadingText({id:e,loadingText:t}){const s=this.state.approvalFlows.findIndex((t=>t.id===e));if(-1===s)throw new k.MissingApprovalFlowError(e);this.update((e=>{e.approvalFlows[s].loadingText=t}))}async success(e={}){return await f(this,a,"m",h).call(this,s.APPROVAL_TYPE_RESULT_SUCCESS,e,{message:e.message,header:e.header,title:e.title,icon:e.icon}),{}}async error(e={}){return await f(this,a,"m",h).call(this,s.APPROVAL_TYPE_RESULT_ERROR,e,{error:e.error,header:e.header,title:e.title,icon:e.icon}),{}}}s.ApprovalController=S,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function(e,t,s=(0,w.nanoid)(),r,o,c){if(f(this,a,"m",l).call(this,s,e,t,r,o),!f(this,i,"f").includes(t)&&this.has({origin:e,type:t}))throw y.rpcErrors.resourceUnavailable(((e,t)=>`Request of type '${t}' already pending for origin ${e}. Please wait.`)(e,t));return new Promise(((i,l)=>{f(this,n,"f").set(s,{resolve:i,reject:l}),f(this,a,"m",d).call(this,e,t),f(this,a,"m",m).call(this,s,e,t,r,o,c)}))},l=function(e,t,s,a,r){let o=null;if(e&&"string"==typeof e?f(this,n,"f").has(e)?o=`Approval request with id '${e}' already exists.`:t&&"string"==typeof t?s&&"string"==typeof s?a&&("object"!=typeof a||Array.isArray(a))?o="Request data must be a plain object if specified.":r&&("object"!=typeof r||Array.isArray(r))&&(o="Request state must be a plain object if specified."):o="Must specify non-empty string type.":o="Must specify non-empty string origin.":o="Must specify non-empty string id.",o)throw y.rpcErrors.internal(o)},d=function(e,t){let s=f(this,r,"f").get(e);s||(s=new Map,f(this,r,"f").set(e,s));const a=s.get(t)||0;s.set(t,a+1)},m=function(e,t,s,a,n,r){const o={id:e,origin:t,type:s,time:Date.now(),requestData:a||null,requestState:n||null,expectsResult:r||!1};this.update((t=>{t.pendingApprovals[e]=o,t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))},u=function(e){if(!f(this,n,"f").has(e))throw new k.ApprovalRequestNotFoundError(e);f(this,n,"f").delete(e);const{origin:t,type:s}=this.state.pendingApprovals[e],a=f(this,r,"f").get(t),o=this.getApprovalCount({origin:t}),i=a.get(s);1===o?f(this,r,"f").delete(t):a.set(s,i-1),this.update((t=>{delete t.pendingApprovals[e],t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))},p=function(e){const t=f(this,n,"f").get(e);if(!t)throw new k.ApprovalRequestNotFoundError(e);return t},h=async function(e,t,a){try{await this.addAndShowApprovalRequest({origin:s.ORIGIN_METAMASK,type:e,requestData:a})}catch(e){console.info("Failed to display result page",e)}finally{if(t.flowToEnd)try{this.endFlow({id:t.flowToEnd})}catch(e){console.info("Failed to end flow",{id:t.flowToEnd,error:e})}}},s.default=S}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/ApprovalController.cjs"}],[1321,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MissingApprovalFlowError=s.EndInvalidFlowError=s.NoApprovalFlowsError=s.ApprovalRequestNoResultSupportError=s.ApprovalRequestNotFoundError=void 0;class a extends Error{constructor(e){super(`Approval request with id '${e}' not found.`)}}s.ApprovalRequestNotFoundError=a;class n extends Error{constructor(e){super(`Approval acceptance requested result but request with id '${e}' does not support it.`)}}s.ApprovalRequestNoResultSupportError=n;class r extends Error{constructor(){super("No approval flows found.")}}s.NoApprovalFlowsError=r;class o extends Error{constructor(e,t){super(`Attempted to end flow with id '${e}' which does not match current flow with id '${t.slice(-1)[0]}'. All Flows: ${t.join(", ")}`)}}s.EndInvalidFlowError=o;class i extends Error{constructor(e){super(`No approval flows found with id '${e}'.`)}}s.MissingApprovalFlowError=i}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/errors.cjs"}],[1322,{"./ApprovalController.cjs":1320,"./errors.cjs":1321},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./ApprovalController.cjs"),s),n(e("./errors.cjs"),s)}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/index.cjs"}],[1323,{"@metamask/controller-utils":1468,"@metamask/eth-query":1674,"@metamask/polling-controller":2289,"@metamask/utils":2815,"async-mutex":3775,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},d=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},m=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AccountTrackerController=void 0;const u=e("@metamask/controller-utils"),p=m(e("@metamask/eth-query")),h=e("@metamask/polling-controller"),g=e("@metamask/utils"),f=e("async-mutex"),b=e("lodash"),y={accountsByChainId:{persist:!0,anonymous:!1}};class w extends((0,h.StaticIntervalPollingController)()){constructor({interval:e=1e4,state:t,messenger:s,getStakedBalanceForChain:i,includeStakedAssets:c=!1}){const{selectedNetworkClientId:d}=s.call("NetworkController:getState"),{configuration:{chainId:m}}=s.call("NetworkController:getNetworkClientById",d);super({name:"AccountTrackerController",messenger:s,state:{accountsByChainId:{[m]:{}},...t},metadata:y}),a.add(this),n.set(this,new f.Mutex),r.set(this,void 0),o.set(this,void 0),l(this,o,i,"f"),l(this,r,c,"f"),this.setIntervalLength(e),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",(()=>this.refresh()))}syncAccounts(e){const t=(0,b.cloneDeep)(this.state.accountsByChainId),{selectedNetworkClientId:s}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:a}}=this.messagingSystem.call("NetworkController:getNetworkClientById",s),n=Object.keys(t?.[a]??{});t[e]||(t[e]={},n.forEach((s=>{t[e][s]={balance:"0x0"}})));const r=Object.values(this.messagingSystem.call("AccountsController:listAccounts").map((e=>(0,u.toChecksumHexAddress)(e.address)))),o=r.filter((e=>!n.includes(e))),i=n.filter((e=>!r.includes(e)));Object.keys(t).forEach((e=>{o.forEach((s=>{t[e][s]={balance:"0x0"}}))})),Object.keys(t).forEach((e=>{i.forEach((s=>{delete t[e][s]}))})),this.update((e=>{e.accountsByChainId=t}))}async _executePoll({networkClientId:e}){this.refresh(e)}async refresh(e){const t=this.messagingSystem.call("AccountsController:getSelectedAccount"),s=await d(this,n,"f").acquire();try{const{chainId:s,ethQuery:n}=d(this,a,"m",i).call(this,e);this.syncAccounts(s);const{accountsByChainId:l}=this.state,{isMultiAccountBalancesEnabled:m}=this.messagingSystem.call("PreferencesController:getState"),p=m?Object.keys(l[s]):[(0,u.toChecksumHexAddress)(t.address)],h={...l[s]};for(const t of p){const s=await d(this,a,"m",c).call(this,t,n);if(s&&(h[t]={balance:s}),d(this,r,"f")){const s=await d(this,o,"f").call(this,t,e);s&&(h[t]={...h[t],stakedBalance:s})}}this.update((e=>{e.accountsByChainId[s]=h}))}finally{s()}}async syncBalanceWithAddresses(e,t){const{ethQuery:s}=d(this,a,"m",i).call(this,t);return await Promise.all(e.map((e=>(0,u.safelyExecuteWithTimeout)((async()=>{(0,g.assert)(s,"Provider not set.");const a=await(0,u.query)(s,"getBalance",[e]);let n;return d(this,r,"f")&&(n=await d(this,o,"f").call(this,e,t)),[e,a,n]}))))).then((e=>e.reduce(((e,t)=>{if(!t)return e;const[s,a,n]=t;return{...e,[s]:{balance:a,stakedBalance:n}}}),{})))}}s.AccountTrackerController=w,n=new WeakMap,r=new WeakMap,o=new WeakMap,a=new WeakSet,i=function(e){const t=e??this.messagingSystem.call("NetworkController:getState").selectedNetworkClientId,{configuration:{chainId:s},provider:a}=this.messagingSystem.call("NetworkController:getNetworkClientById",t);return{chainId:s,ethQuery:new p.default(a)}},c=async function(e,t){return await(0,u.safelyExecuteWithTimeout)((async()=>((0,g.assert)(t,"Provider not set."),await(0,u.query)(t,"getBalance",[e]))))},s.default=w}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/AccountTrackerController.cjs"}],[1324,{"./Standards/ERC20Standard.cjs":1341,"./Standards/NftStandards/ERC1155/ERC1155Standard.cjs":1342,"./Standards/NftStandards/ERC721/ERC721Standard.cjs":1343,"./assetsUtil.cjs":1351,"@ethersproject/bignumber":518,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/controller-utils":1468,"@metamask/utils":2815,"single-call-balance-checker-abi":5443},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},p=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.AssetsContractController=s.MISSING_PROVIDER_ERROR=s.STAKING_CONTRACT_ADDRESS_BY_CHAINID=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID=void 0;const h=e("@ethersproject/bignumber"),g=e("@ethersproject/contracts"),f=e("@ethersproject/providers"),b=e("@metamask/controller-utils"),y=e("@metamask/utils"),w=p(e("single-call-balance-checker-abi")),k=e("./assetsUtil.cjs"),A=e("./Standards/ERC20Standard.cjs"),E=e("./Standards/NftStandards/ERC1155/ERC1155Standard.cjs"),S=e("./Standards/NftStandards/ERC721/ERC721Standard.cjs");s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID={[k.SupportedTokenDetectionNetworks.mainnet]:"0xb1f8e55c7f64d203c1400b9d8555d050f94adf39",[k.SupportedTokenDetectionNetworks.bsc]:"0x2352c63A83f9Fd126af8676146721Fa00924d7e4",[k.SupportedTokenDetectionNetworks.polygon]:"0x2352c63A83f9Fd126af8676146721Fa00924d7e4",[k.SupportedTokenDetectionNetworks.avax]:"0xD023D153a0DFa485130ECFdE2FAA7e612EF94818",[k.SupportedTokenDetectionNetworks.aurora]:"0x1286415D333855237f89Df27D388127181448538",[k.SupportedTokenDetectionNetworks.linea_goerli]:"0x10dAd7Ca3921471f616db788D9300DC97Db01783",[k.SupportedTokenDetectionNetworks.linea_mainnet]:"0xF62e6a41561b3650a69Bb03199C735e3E3328c0D",[k.SupportedTokenDetectionNetworks.arbitrum]:"0x151E24A486D7258dd7C33Fb67E4bB01919B7B32c",[k.SupportedTokenDetectionNetworks.optimism]:"0xB1c568e9C3E6bdaf755A60c7418C269eb11524FC",[k.SupportedTokenDetectionNetworks.base]:"0x6AA75276052D96696134252587894ef5FFA520af",[k.SupportedTokenDetectionNetworks.zksync]:"0x458fEd3144680a5b8bcfaa0F9594aa19B4Ea2D34",[k.SupportedTokenDetectionNetworks.cronos]:"0x768ca200f0fc702ac9ea502498c18f5eff176378",[k.SupportedTokenDetectionNetworks.celo]:"0x6aa75276052d96696134252587894ef5ffa520af",[k.SupportedTokenDetectionNetworks.gnosis]:"0x6aa75276052d96696134252587894ef5ffa520af",[k.SupportedTokenDetectionNetworks.fantom]:"0x6aa75276052d96696134252587894ef5ffa520af",[k.SupportedTokenDetectionNetworks.polygon_zkevm]:"0x6aa75276052d96696134252587894ef5ffa520af",[k.SupportedTokenDetectionNetworks.moonbeam]:"0x6aa75276052d96696134252587894ef5ffa520af",[k.SupportedTokenDetectionNetworks.moonriver]:"0x6aa75276052d96696134252587894ef5ffa520af"},s.STAKING_CONTRACT_ADDRESS_BY_CHAINID={[k.SupportedStakedBalanceNetworks.mainnet]:"0x4fef9d741011476750a243ac70b9789a63dd47df",[k.SupportedStakedBalanceNetworks.holesky]:"0x37bf0883c27365cffcd0c4202918df930989891f"},s.MISSING_PROVIDER_ERROR="AssetsContractController failed to set the provider correctly. A provider must be set for this method to be available";const C="AssetsContractController";class v{constructor({messenger:e,chainId:t}){a.add(this),this.name=C,n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),this.messagingSystem=e,m(this,n,undefined,"f"),m(this,r,b.IPFS_DEFAULT_GATEWAY_URL,"f"),m(this,o,t,"f"),u(this,a,"m",i).call(this),u(this,a,"m",c).call(this)}setProvider(e){m(this,n,e,"f")}get ipfsGateway(){return u(this,r,"f")}get chainId(){return u(this,o,"f")}getERC20Standard(e){const t=u(this,a,"m",l).call(this,e);return new A.ERC20Standard(t)}getERC721Standard(e){const t=u(this,a,"m",l).call(this,e);return new S.ERC721Standard(t)}getERC1155Standard(e){const t=u(this,a,"m",l).call(this,e);return new E.ERC1155Standard(t)}async getERC20BalanceOf(e,t,s){return this.getERC20Standard(s).getBalanceOf(e,t)}async getERC20TokenDecimals(e,t){return this.getERC20Standard(t).getTokenDecimals(e)}async getERC20TokenName(e,t){return this.getERC20Standard(t).getTokenName(e)}async getERC721NftTokenId(e,t,s,a){return this.getERC721Standard(a).getNftTokenId(e,t,s)}async getTokenStandardAndDetails(e,t,s,n){u(this,a,"m",l).call(this,n);try{const t=this.getERC721Standard(n);return{...await t.getDetails(e,u(this,r,"f"),s)}}catch{}try{const t=this.getERC1155Standard(n);return{...await t.getDetails(e,u(this,r,"f"),s)}}catch{}try{const s=this.getERC20Standard(n);return{...await s.getDetails(e,t)}}catch{}throw new Error("Unable to determine contract standard")}async getERC721TokenURI(e,t,s){return this.getERC721Standard(s).getTokenURI(e,t)}async getERC721AssetName(e,t){return this.getERC721Standard(t).getAssetName(e)}async getERC721AssetSymbol(e,t){return this.getERC721Standard(t).getAssetSymbol(e)}async getERC721OwnerOf(e,t,s){return this.getERC721Standard(s).getOwnerOf(e,t)}async getERC1155TokenURI(e,t,s){return this.getERC1155Standard(s).getTokenURI(e,t)}async getERC1155BalanceOf(e,t,s,a){return this.getERC1155Standard(a).getBalanceOf(t,e,s)}async transferSingleERC1155(e,t,s,a,n,r){return this.getERC1155Standard(r).transferSingle(e,t,s,a,n)}async getBalancesInSingleCall(e,t,n){const r=u(this,a,"m",d).call(this,n),o=u(this,a,"m",l).call(this,n);if(!(r in s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID))return{};const i=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID[r],c=new g.Contract(i,w.default,o),m=await c.balances([e],t),p={};return m.length>0&&t.forEach(((e,t)=>{const s=m[t];"0"!==String(s)&&(p[e]=s)})),p}async getStakedBalanceForChain(e,t){const n=u(this,a,"m",d).call(this,t),r=u(this,a,"m",l).call(this,t);let o=h.BigNumber.from(0);if(![k.SupportedStakedBalanceNetworks.mainnet,k.SupportedStakedBalanceNetworks.holesky].includes(n))return undefined;if(!(n in s.STAKING_CONTRACT_ADDRESS_BY_CHAINID))return undefined;const i=s.STAKING_CONTRACT_ADDRESS_BY_CHAINID[n],c=[{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"shares",type:"uint256"}],name:"convertToAssets",outputs:[{internalType:"uint256",name:"assets",type:"uint256"}],stateMutability:"view",type:"function"}];try{const t=new g.Contract(i,c,r),s=await t.getShares(e);s.lte(0)||(o=await t.convertToAssets(s.toString()))}catch(e){console.error(e)}return o.toHexString()}}s.AssetsContractController=v,n=new WeakMap,r=new WeakMap,o=new WeakMap,a=new WeakSet,i=function(){const e=["constructor","messagingSystem","setProvider","provider","ipfsGateway","chainId"];(0,y.getKnownPropertyNames)(Object.getPrototypeOf(this)).forEach((t=>{(t=>!e.find((e=>e===t))&&"function"==typeof this[t])(t)&&this.messagingSystem.registerActionHandler(`${C}:${t}`,this[t].bind(this))}))},c=function(){this.messagingSystem.subscribe("PreferencesController:stateChange",(({ipfsGateway:e})=>{m(this,r,e,"f")})),this.messagingSystem.subscribe("NetworkController:networkDidChange",(({selectedNetworkClientId:e})=>{const t=u(this,a,"m",d).call(this,e);u(this,o,"f")!==t&&(m(this,o,t,"f"),m(this,n,u(this,a,"m",l).call(this),"f"))}))},l=function(e){const t=e?this.messagingSystem.call("NetworkController:getNetworkClientById",e).provider:this.messagingSystem.call("NetworkController:getSelectedNetworkClient")?.provider??u(this,n,"f");if(t===undefined)throw new Error(s.MISSING_PROVIDER_ERROR);return new f.Web3Provider(t)},d=function(e){if(e){const t=this.messagingSystem.call("NetworkController:getNetworkConfigurationByNetworkClientId",e);if(t)return t.chainId}const{selectedNetworkClientId:t}=this.messagingSystem.call("NetworkController:getState"),s=this.messagingSystem.call("NetworkController:getNetworkClientById",t);return s.configuration?.chainId??u(this,o,"f")},s.default=v}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/AssetsContractController.cjs"}],[1325,{"./crypto-compare-service/index.cjs":1354,"@metamask/controller-utils":1468,"@metamask/polling-controller":2289,"async-mutex":3775},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.CurrencyRateController=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/polling-controller"),r=e("async-mutex"),o=e("./crypto-compare-service/index.cjs"),i={currentCurrency:{persist:!0,anonymous:!0},currencyRates:{persist:!0,anonymous:!0}},c={currentCurrency:"usd",currencyRates:{ETH:{conversionDate:0,conversionRate:0,usdConversionRate:null}}};class l extends((0,n.StaticIntervalPollingController)()){constructor({includeUsdRate:e=!1,interval:t=18e4,messenger:s,state:a,fetchMultiExchangeRate:n=o.fetchMultiExchangeRate}){super({name:"CurrencyRateController",metadata:i,messenger:s,state:{...c,...a}}),this.mutex=new r.Mutex,this.includeUsdRate=e,this.setIntervalLength(t),this.fetchMultiExchangeRate=n}async setCurrentCurrency(e){const t=await this.mutex.acquire(),s=Object.keys(this.state.currencyRates);try{this.update((()=>({...c,currentCurrency:e})))}finally{t()}this.updateExchangeRate(s)}async updateExchangeRate(e){const t=await this.mutex.acquire();try{const{currentCurrency:t}=this.state,s=Object.values(a.TESTNET_TICKER_SYMBOLS),n=e.reduce(((e,t)=>t?(e[t]=s.includes(t)?a.FALL_BACK_VS_CURRENCY:t,e):e),{}),r=await this.fetchMultiExchangeRate(t,[...new Set(Object.values(n))],this.includeUsdRate),o=Object.entries(n).reduce(((e,[s,a])=>{const n=r[a.toLowerCase()];return e[s]={conversionDate:n!==undefined?Date.now()/1e3:null,conversionRate:n?.[t.toLowerCase()]??null,usdConversionRate:n?.usd??null},e}),{});this.update((e=>{e.currencyRates={...e.currencyRates,...o}}))}catch(e){throw console.error("Failed to fetch exchange rates.",e),e}finally{t()}}destroy(){super.destroy(),this.stopAllPolling()}async _executePoll({nativeCurrencies:e}){await this.updateExchangeRate(e)}}s.CurrencyRateController=l,s.default=l}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/CurrencyRateController.cjs"}],[1326,{"../assetsUtil.cjs":1351,"./fetch-positions.cjs":1327,"./group-defi-positions.cjs":1328,"@metamask/polling-controller":2289},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.DeFiPositionsController=s.getDefaultDefiPositionsControllerState=void 0;const d=e("@metamask/polling-controller"),m=e("./fetch-positions.cjs"),u=e("./group-defi-positions.cjs"),p=e("../assetsUtil.cjs"),h={allDeFiPositions:{persist:!1,anonymous:!1}};s.getDefaultDefiPositionsControllerState=()=>({allDeFiPositions:{}});class g extends((0,d.StaticIntervalPollingController)()){constructor({messenger:e,isEnabled:t=(()=>!0)}){super({name:"DeFiPositionsController",metadata:h,messenger:e,state:(0,s.getDefaultDefiPositionsControllerState)()}),a.add(this),n.set(this,void 0),r.set(this,void 0),this.setIntervalLength(6e4),c(this,n,(0,m.buildPositionFetcher)(),"f"),c(this,r,t,"f"),this.messagingSystem.subscribe("KeyringController:unlock",(()=>{this.startPolling(null)})),this.messagingSystem.subscribe("KeyringController:lock",(()=>{this.stopAllPolling()})),this.messagingSystem.subscribe("TransactionController:transactionConfirmed",(async e=>{l(this,r,"f").call(this)&&await l(this,a,"m",o).call(this,e.txParams.from)})),this.messagingSystem.subscribe("AccountsController:accountAdded",(async e=>{l(this,r,"f").call(this)&&e.type.startsWith("eip155:")&&await l(this,a,"m",o).call(this,e.address)}))}async _executePoll(){if(!l(this,r,"f").call(this))return;const e=this.messagingSystem.call("AccountsController:listAccounts"),t=(await(0,p.reduceInBatchesSerially)({initialResult:[],values:e,batchSize:10,eachBatch:async(e,t)=>[...e,...(await Promise.all(t.map((async({address:e,type:t})=>{if(t.startsWith("eip155:")){return{accountAddress:e,positions:await l(this,a,"m",i).call(this,e)}}return undefined})))).filter(Boolean)]})).reduce(((e,{accountAddress:t,positions:s})=>(e[t]=s,e)),{});this.update((e=>{e.allDeFiPositions=t}))}}s.DeFiPositionsController=g,n=new WeakMap,r=new WeakMap,a=new WeakSet,o=async function(e){const t=await l(this,a,"m",i).call(this,e);this.update((s=>{s.allDeFiPositions[e]=t}))},i=async function(e){try{const t=await l(this,n,"f").call(this,e);return(0,u.groupDeFiPositions)(t)}catch{return null}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/DeFiPositionsController.cjs"}],[1327,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.buildPositionFetcher=s.DEFI_POSITIONS_API_URL=void 0,s.DEFI_POSITIONS_API_URL="https://defiadapters.dev-api.cx.metamask.io",s.buildPositionFetcher=function(){return async e=>{const t=await fetch(`${s.DEFI_POSITIONS_API_URL}/positions/${e}`);if(200!==t.status)throw new Error(`Unable to fetch defi positions - HTTP ${t.status}`);return(await t.json()).data}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/fetch-positions.cjs"}],[1328,{"@metamask/controller-utils":1468},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.groupDeFiPositions=void 0;const a=e("@metamask/controller-utils");function n(e){if(!e.tokens)return{...e,marketValue:e.price?e.balance*e.price:undefined};const t=e.tokens.map((e=>{const{tokens:t,...s}=n(e);return s})),s=t.reduce(((e,t)=>e===undefined||t.marketValue===undefined?undefined:e+t.marketValue),0);return{...e,marketValue:s,tokens:t}}s.groupDeFiPositions=function(e){const t={};for(const s of e){if(!s.success)continue;const{chainId:e,protocolId:r,iconUrl:o,positionType:i,protocolDisplayName:c}=s,l=(0,a.toHex)(e);t[l]||(t[l]={aggregatedMarketValue:0,protocols:{}});const d=t[l];d.protocols[r]||(d.protocols[r]={protocolDetails:{name:c,iconUrl:o},aggregatedMarketValue:0,positionTypes:{}});const m=d.protocols[r];let u=m.positionTypes[i];u||(u={aggregatedMarketValue:0,positions:[]},m.positionTypes[i]=u);for(const e of s.tokens){const t=n(e);if(s.metadata?.groupPositions?0===u.positions.length?u.positions.push([t]):u.positions[0].push(t):u.positions.push([t]),t.marketValue){const e="borrow"===s.positionType?-1:1;u.aggregatedMarketValue+=t.marketValue,m.aggregatedMarketValue+=t.marketValue*e,d.aggregatedMarketValue+=t.marketValue*e}}}return t}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/DeFiPositionsController/group-defi-positions.cjs"}],[1329,{"./utils.cjs":1331,"@metamask/base-controller":1365,"@metamask/keyring-api":1958,"@metamask/keyring-snap-client":2011,"@metamask/snaps-utils":2715,"@metamask/utils":2815,"async-mutex":3775},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y,w,k,A,E,S,C=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},v=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAssetsController=s.getDefaultMultichainAssetsControllerState=void 0;const T=e("@metamask/base-controller"),_=e("@metamask/keyring-api"),x=e("@metamask/keyring-snap-client"),I=e("@metamask/snaps-utils"),P=e("@metamask/utils"),D=e("async-mutex"),R=e("./utils.cjs");function N(){return{accountsAssets:{},assetsMetadata:{}}}s.getDefaultMultichainAssetsControllerState=N;const B={assetsMetadata:{persist:!0,anonymous:!1},accountsAssets:{persist:!0,anonymous:!1}};class M extends T.BaseController{constructor({messenger:e,state:t={}}){super({messenger:e,name:"MultichainAssetsController",metadata:B,state:{accountsAssets:{},assetsMetadata:{},...t}}),a.add(this),n.set(this,void 0),r.set(this,new D.Mutex),C(this,n,{},"f"),this.messagingSystem.subscribe("AccountsController:accountAdded",(async e=>await v(this,a,"m",i).call(this,e))),this.messagingSystem.subscribe("AccountsController:accountRemoved",(async e=>await v(this,a,"m",u).call(this,e))),this.messagingSystem.subscribe("AccountsController:accountAssetListUpdated",(async e=>await v(this,a,"m",o).call(this,e))),v(this,a,"m",c).call(this)}getAssetMetadata(e){return this.state.assetsMetadata[e]}}s.MultichainAssetsController=M,n=new WeakMap,r=new WeakMap,a=new WeakSet,o=async function(e){return v(this,a,"m",S).call(this,(async()=>v(this,a,"m",l).call(this,e)))},i=async function(e){return v(this,a,"m",S).call(this,(async()=>v(this,a,"m",m).call(this,e)))},c=function(){this.messagingSystem.registerActionHandler("MultichainAssetsController:getAssetMetadata",this.getAssetMetadata.bind(this))},l=async function(e){v(this,a,"m",E).call(this);const t=e.assets;let s=new Set([]);for(const e in t)if((0,P.hasProperty)(t,e)){const{added:a,removed:n}=t[e];if(a.length>0||n.length>0){const t=this.state.accountsAssets[e]||[],r=new Set([...t,...a.filter((e=>(0,P.isCaipAssetType)(e)))]);for(const e of n)r.delete(e);s=new Set([...s,...r]),this.update((t=>{t.accountsAssets[e]=Array.from(r)}))}}await v(this,a,"m",p).call(this,Array.from(s))},d=function(e){return!(0,_.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},m=async function(e){if(v(this,a,"m",d).call(this,e)&&(v(this,a,"m",E).call(this),e.metadata.snap)){const t=await v(this,a,"m",k).call(this,e.id,e.metadata.snap.id);await v(this,a,"m",p).call(this,t),this.update((s=>{s.accountsAssets[e.id]=t}))}},u=async function(e){this.state.accountsAssets[e]&&this.update((t=>{delete t.accountsAssets[e]}))},p=async function(e){v(this,a,"m",E).call(this);const t=e.filter((e=>!this.state.assetsMetadata[e]));t.length>0&&(t.every((e=>{const{chainId:t}=(0,P.parseCaipAssetType)(e);return Boolean(v(this,a,"m",f).call(this,t))}))||C(this,n,v(this,a,"m",g).call(this),"f"),await v(this,a,"m",h).call(this,t))},h=async function(e){const t={};for(const s of e){const{chainId:e}=(0,P.parseCaipAssetType)(s);t[e]||(t[e]=[]),t[e].push(s)}let s={};for(const e of Object.keys(t)){const n=t[e],r=v(this,a,"m",f).call(this,e);if(r){const e=await v(this,a,"m",w).call(this,n,r.id);s={...s,...e?.assets??{}}}}this.update((e=>{e.assetsMetadata={...this.state.assetsMetadata,...s}}))},g=function(){const e={},t=v(this,a,"m",b).call(this),s=t.map((e=>v(this,a,"m",y).call(this,e.id)));for(const[a,n]of s.entries()){let s;for(const r of Object.values(n))if(s=(0,R.getChainIdsCaveat)(r),s)for(const n of s)e[n]||(e[n]=[]),e[n].push(t[a])}return e},f=function(e){const t=v(this,n,"f")[e];return t?.[0]},b=function(){return this.messagingSystem.call("SnapController:getAll").filter((e=>e.enabled&&!e.blocked))},y=function(e){return this.messagingSystem.call("PermissionController:getPermissions",e)},w=async function(e,t){try{return await this.messagingSystem.call("SnapController:handleRequest",{snapId:t,origin:"metamask",handler:I.HandlerType.OnAssetsLookup,request:{jsonrpc:"2.0",method:"onAssetLookup",params:{assets:e}}})}catch(e){return console.error(e),undefined}},k=async function(e,t){return await v(this,a,"m",A).call(this,t).listAccountAssets(e)},A=function(e){return new x.KeyringClient({send:async t=>await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:I.HandlerType.OnKeyringRequest,request:t})})},E=function(){if(!v(this,r,"f").isLocked())throw new Error("MultichainAssetsControllerError - Attempt to update state")},S=async function(e){return async function(e,t){const s=await e.acquire();try{return await t({releaseLock:s})}finally{s()}}(v(this,r,"f"),e)}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/MultichainAssetsController.cjs"}],[1330,{"./MultichainAssetsController.cjs":1329},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultMultichainAssetsControllerState=s.MultichainAssetsController=void 0;var a=e("./MultichainAssetsController.cjs");Object.defineProperty(s,"MultichainAssetsController",{enumerable:!0,get:function(){return a.MultichainAssetsController}}),Object.defineProperty(s,"getDefaultMultichainAssetsControllerState",{enumerable:!0,get:function(){return a.getDefaultMultichainAssetsControllerState}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/index.cjs"}],[1331,{"@metamask/snaps-utils":2715},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getChainIdsCaveat=void 0;const a=e("@metamask/snaps-utils");s.getChainIdsCaveat=function(e){if(!e?.caveats)return null;const t=e.caveats.find((e=>e.type===a.SnapCaveatType.ChainIds));return t?t.value:null}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsController/utils.cjs"}],[1332,{"./constant.cjs":1333,"@metamask/keyring-api":1958,"@metamask/polling-controller":2289,"@metamask/snaps-utils":2715,"async-mutex":3775},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},y=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainAssetsRatesController=s.getDefaultMultichainAssetsRatesControllerState=void 0;const w=e("@metamask/keyring-api"),k=e("@metamask/polling-controller"),A=e("@metamask/snaps-utils"),E=e("async-mutex"),S=e("./constant.cjs");function C(){return{conversionRates:{},historicalPrices:{}}}s.getDefaultMultichainAssetsRatesControllerState=C;const v={conversionRates:{persist:!0,anonymous:!0},historicalPrices:{persist:!1,anonymous:!0}};class T extends((0,k.StaticIntervalPollingController)()){constructor({interval:e=18e3,state:t={},messenger:s}){var c,l;super({name:"MultichainAssetsRatesController",messenger:s,state:{conversionRates:{},historicalPrices:{},...t},metadata:v}),a.add(this),n.set(this,new E.Mutex),r.set(this,void 0),o.set(this,void 0),i.set(this,!0),this.setIntervalLength(e),this.messagingSystem.subscribe("KeyringController:lock",(()=>{b(this,i,!1,"f")})),this.messagingSystem.subscribe("KeyringController:unlock",(()=>{b(this,i,!0,"f")})),c=this,({accountsAssets:{set value(e){b(c,o,e,"f")}}.value}=this.messagingSystem.call("MultichainAssetsController:getState")),l=this,({currentCurrency:{set value(e){b(l,r,e,"f")}}.value}=this.messagingSystem.call("CurrencyRateController:getState")),this.messagingSystem.subscribe("CurrencyRateController:stateChange",(async e=>{b(this,r,e.currentCurrency,"f"),await this.updateAssetsRates()})),this.messagingSystem.subscribe("MultichainAssetsController:stateChange",(async e=>{b(this,o,e.accountsAssets,"f"),await this.updateAssetsRates()}))}async _executePoll(){await this.updateAssetsRates()}get isActive(){return y(this,i,"f")}async updateAssetsRates(){const e=await y(this,n,"f").acquire();return(async()=>{if(!this.isActive)return;const e=y(this,a,"m",d).call(this);for(const t of e){const e=y(this,a,"m",m).call(this,t.id);if(0===e?.length)continue;const s=y(this,a,"m",u).call(this,e),n=await y(this,a,"m",f).call(this,{snapId:t?.metadata.snap?.id,handler:A.HandlerType.OnAssetsConversion,params:{...s,includeMarketData:!0}}),r=y(this,a,"m",p).call(this,n),o=y(this,a,"m",h).call(this,e,r);y(this,a,"m",g).call(this,o)}})().finally((()=>{e()}))}async fetchHistoricalPricesForAsset(e){const t=await y(this,n,"f").acquire();return(async()=>{const t=S.MAP_CAIP_CURRENCIES[y(this,r,"f")]??S.MAP_CAIP_CURRENCIES.usd,s=this.state.historicalPrices[e]?.[y(this,r,"f")]?.expirationTime;if(!1===(s&&s<Date.now()))return;const n=this.messagingSystem.call("AccountsController:getSelectedMultichainAccount");try{const s=await y(this,a,"m",f).call(this,{snapId:n?.metadata.snap?.id,handler:A.HandlerType.OnAssetHistoricalPrice,params:{from:e,to:t}});if(!s)return;this.update((t=>{t.historicalPrices={...t.historicalPrices,[e]:{...t.historicalPrices[e],[y(this,r,"f")]:s?.historicalPrice}}}))}catch{throw new Error(`Failed to fetch historical prices for asset: ${e}`)}})().finally((()=>{t()}))}}s.MultichainAssetsRatesController=T,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function(e){return!(0,w.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},l=function(){return this.messagingSystem.call("AccountsController:listMultichainAccounts")},d=function(){return y(this,a,"m",l).call(this).filter((e=>y(this,a,"m",c).call(this,e)))},m=function(e){return y(this,o,"f")?.[e]??[]},u=function(e){const t=S.MAP_CAIP_CURRENCIES[y(this,r,"f")]??S.MAP_CAIP_CURRENCIES.usd;return{conversions:e.map((e=>({from:e,to:t})))}},p=function(e){const{conversionRates:t}=e;return Object.fromEntries(Object.entries(t).map((([e,t])=>[e,Object.values(t)[0]])))},h=function(e,t){const s={};for(const a of e)t[a]&&(s[a]={...t[a],currency:S.MAP_CAIP_CURRENCIES[y(this,r,"f")]??S.MAP_CAIP_CURRENCIES.usd});return s},g=function(e){this.update((t=>{t.conversionRates={...t.conversionRates,...e}}))},f=async function({snapId:e,handler:t,params:s}){return this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:t,request:{jsonrpc:"2.0",method:t,params:s}})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/MultichainAssetsRatesController.cjs"}],[1333,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MAP_CAIP_CURRENCIES=void 0,s.MAP_CAIP_CURRENCIES={btc:"bip122:000000000019d6689c085ae165831e93/slip44:0",eth:"eip155:1/slip44:60",ltc:"bip122:12a765e31ffd4059bada1e25190f6e98/slip44:2",bch:"bip122:000000000000000000651ef99cb9fcbe/slip44:145",bnb:"cosmos:Binance-Chain-Tigris/slip44:714",eos:"eos:aca376f2/slip44:194",xrp:"xrpl:mainnet/slip44:144",xlm:"stellar:pubnet/slip44:148",link:"eip155:1/erc20:0x514910771af9Ca656af840dff83E8264EcF986CA",dot:"polkadot:91b171bb158e2d3848fa23a9f1c25182/slip44:354",yfi:"eip155:1/erc20:0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e",usd:"swift:0/iso4217:USD",aed:"swift:0/iso4217:AED",ars:"swift:0/iso4217:ARS",aud:"swift:0/iso4217:AUD",bdt:"swift:0/iso4217:BDT",bhd:"swift:0/iso4217:BHD",bmd:"swift:0/iso4217:BMD",brl:"swift:0/iso4217:BRL",cad:"swift:0/iso4217:CAD",chf:"swift:0/iso4217:CHF",clp:"swift:0/iso4217:CLP",cny:"swift:0/iso4217:CNY",czk:"swift:0/iso4217:CZK",dkk:"swift:0/iso4217:DKK",eur:"swift:0/iso4217:EUR",gbp:"swift:0/iso4217:GBP",hkd:"swift:0/iso4217:HKD",huf:"swift:0/iso4217:HUF",idr:"swift:0/iso4217:IDR",ils:"swift:0/iso4217:ILS",inr:"swift:0/iso4217:INR",jpy:"swift:0/iso4217:JPY",krw:"swift:0/iso4217:KRW",kwd:"swift:0/iso4217:KWD",lkr:"swift:0/iso4217:LKR",mmk:"swift:0/iso4217:MMK",mxn:"swift:0/iso4217:MXN",myr:"swift:0/iso4217:MYR",ngn:"swift:0/iso4217:NGN",nok:"swift:0/iso4217:NOK",nzd:"swift:0/iso4217:NZD",php:"swift:0/iso4217:PHP",pkr:"swift:0/iso4217:PKR",pln:"swift:0/iso4217:PLN",rub:"swift:0/iso4217:RUB",sar:"swift:0/iso4217:SAR",sek:"swift:0/iso4217:SEK",sgd:"swift:0/iso4217:SGD",thb:"swift:0/iso4217:THB",try:"swift:0/iso4217:TRY",twd:"swift:0/iso4217:TWD",uah:"swift:0/iso4217:UAH",vef:"swift:0/iso4217:VEF",vnd:"swift:0/iso4217:VND",zar:"swift:0/iso4217:ZAR",xdr:"swift:0/iso4217:XDR",xag:"swift:0/iso4217:XAG",xau:"swift:0/iso4217:XAU"}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/constant.cjs"}],[1334,{"./MultichainAssetsRatesController.cjs":1332},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultMultichainAssetsRatesControllerState=s.MultichainAssetsRatesController=void 0;var a=e("./MultichainAssetsRatesController.cjs");Object.defineProperty(s,"MultichainAssetsRatesController",{enumerable:!0,get:function(){return a.MultichainAssetsRatesController}}),Object.defineProperty(s,"getDefaultMultichainAssetsRatesControllerState",{enumerable:!0,get:function(){return a.getDefaultMultichainAssetsRatesControllerState}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainAssetsRatesController/index.cjs"}],[1335,{"@metamask/base-controller":1365,"@metamask/keyring-api":1958,"@metamask/keyring-snap-client":2011,"@metamask/snaps-utils":2715},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainBalancesController=s.getDefaultMultichainBalancesControllerState=void 0;const g=e("@metamask/base-controller"),f=e("@metamask/keyring-api"),b=e("@metamask/keyring-snap-client"),y=e("@metamask/snaps-utils");function w(){return{balances:{}}}s.getDefaultMultichainBalancesControllerState=w;const k={balances:{persist:!0,anonymous:!1}};class A extends g.BaseController{constructor({messenger:e,state:t={}}){super({messenger:e,name:"MultichainBalancesController",metadata:k,state:{balances:{},...t}}),a.add(this);for(const e of h(this,a,"m",o).call(this))this.updateBalance(e.id);this.messagingSystem.subscribe("AccountsController:accountRemoved",(e=>h(this,a,"m",m).call(this,e))),this.messagingSystem.subscribe("AccountsController:accountBalancesUpdated",(e=>h(this,a,"m",d).call(this,e))),this.messagingSystem.subscribe("MultichainAssetsController:stateChange",(async e=>{for(const t of Object.keys(e.accountsAssets))await h(this,a,"m",n).call(this,t,e.accountsAssets[t])}))}async updateBalance(e){await h(this,a,"m",n).call(this,e,h(this,a,"m",i).call(this,e))}}s.MultichainBalancesController=A,a=new WeakSet,n=async function(e,t){const{isUnlocked:s}=this.messagingSystem.call("KeyringController:getState");if(s)try{const s=h(this,a,"m",c).call(this,e);if(s.metadata.snap){const n=await h(this,a,"m",u).call(this,s.id,s.metadata.snap.id,t);this.update((t=>{t.balances[e]=n}))}}catch(t){console.error(`Failed to fetch balances for account ${e}:`,t)}},r=function(){return this.messagingSystem.call("AccountsController:listMultichainAccounts")},o=function(){return h(this,a,"m",r).call(this).filter((e=>h(this,a,"m",l).call(this,e)))},i=function(e){return this.messagingSystem.call("MultichainAssetsController:getState").accountsAssets[e]??[]},c=function(e){const t=h(this,a,"m",o).call(this).find((t=>t.id===e));if(!t)throw new Error(`Unknown account: ${e}`);return t},l=function(e){return!(0,f.isEvmAccountType)(e.type)&&e.metadata.snap!==undefined},d=function(e){this.update((t=>{Object.entries(e.balances).forEach((([e,s])=>{e in t.balances&&Object.assign(t.balances[e],s)}))}))},m=async function(e){e in this.state.balances&&this.update((t=>{delete t.balances[e]}))},u=async function(e,t,s){return await h(this,a,"m",p).call(this,t).getAccountBalances(e,s)},p=function(e){return new b.KeyringClient({send:async t=>await this.messagingSystem.call("SnapController:handleRequest",{snapId:e,origin:"metamask",handler:y.HandlerType.OnKeyringRequest,request:t})})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainBalancesController/MultichainBalancesController.cjs"}],[1336,{"./MultichainBalancesController.cjs":1335},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainBalancesController=void 0;var a=e("./MultichainBalancesController.cjs");Object.defineProperty(s,"MultichainBalancesController",{enumerable:!0,get:function(){return a.MultichainBalancesController}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/MultichainBalancesController/index.cjs"}],[1337,{"./assetsUtil.cjs":1351,"./constants.cjs":1352,"@ethersproject/address":511,"@metamask/base-controller":1365,"@metamask/controller-utils":1468,"@metamask/rpc-errors":2404,"@metamask/utils":2815,"async-mutex":3775,"bn.js":3888,uuid:5526},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y,w,k,A,E,S,C,v,T,_,x,I,P,D,R=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},N=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},B=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.NftController=s.getDefaultNftControllerState=void 0;const M=e("@ethersproject/address"),F=e("@metamask/base-controller"),O=e("@metamask/controller-utils"),j=e("@metamask/rpc-errors"),L=e("@metamask/utils"),$=e("async-mutex"),U=B(e("bn.js")),H=e("uuid"),W=e("./assetsUtil.cjs"),G=e("./constants.cjs"),q={allNftContracts:{persist:!0,anonymous:!1},allNfts:{persist:!0,anonymous:!1},ignoredNfts:{persist:!0,anonymous:!1}},V="allNfts",K="allNftContracts";s.getDefaultNftControllerState=()=>({allNftContracts:{},allNfts:{},ignoredNfts:[]});class Y extends F.BaseController{constructor({chainId:e,ipfsGateway:t=O.IPFS_DEFAULT_GATEWAY_URL,openSeaEnabled:g=!1,useIpfsSubdomains:f=!0,isIpfsGatewayEnabled:b=!0,onNftAdded:y,messenger:w,state:k={}}){super({name:"NftController",metadata:q,messenger:w,state:{...(0,s.getDefaultNftControllerState)(),...k}}),a.add(this),n.set(this,new $.Mutex),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),m.set(this,void 0),R(this,r,this.messagingSystem.call("AccountsController:getSelectedAccount").id,"f"),R(this,o,e,"f"),R(this,i,t,"f"),R(this,c,g,"f"),R(this,l,f,"f"),R(this,d,b,"f"),R(this,m,y,"f"),this.messagingSystem.subscribe("PreferencesController:stateChange",N(this,a,"m",p).bind(this)),this.messagingSystem.subscribe("NetworkController:networkDidChange",N(this,a,"m",u).bind(this)),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",N(this,a,"m",h).bind(this))}getNftApi(){return`${O.NFT_API_BASE_URL}/tokens`}async watchNft(e,t,s,{networkClientId:n,userAddress:r}={}){const o=N(this,a,"m",P).call(this,r);if(!o)return;await N(this,a,"m",x).call(this,e,t,o);const i=await N(this,a,"m",k).call(this,e.address,e.tokenId,n);if(i.standard&&i.standard!==t)throw j.rpcErrors.invalidInput(`Suggested NFT of type ${i.standard} does not match received type ${t}`);const c={asset:{...e,...i},type:t,id:(0,H.v4)(),time:Date.now(),interactingAddress:o,origin:s};await this._requestApproval(c);const{address:l,tokenId:d}=e,{name:m,standard:u,description:p,image:h}=i;await this.addNft(l,d,{nftMetadata:{name:m??null,description:p??null,image:h??null,standard:u??null},userAddress:r,source:G.Source.Dapp,networkClientId:n})}setApiKey(e){this.openSeaApiKey=e}async isNftOwner(e,t,s,{networkClientId:a}={}){try{const n=await this.messagingSystem.call("AssetsContractController:getERC721OwnerOf",t,s,a);return e.toLowerCase()===n.toLowerCase()}catch{}try{return!(await this.messagingSystem.call("AssetsContractController:getERC1155BalanceOf",e,t,s,a)).isZero()}catch{}throw new Error("Unable to verify ownership. Possibly because the standard is not supported or the user's currently selected network does not match the chain of the asset in question.")}async addNftVerifyOwnership(e,t,{userAddress:s,networkClientId:n,source:r}={}){const o=N(this,a,"m",P).call(this,s);if(!await this.isNftOwner(o,e,t,{networkClientId:n}))throw new Error("This NFT is not owned by the user");await this.addNft(e,t,{networkClientId:n,userAddress:o,source:r})}async addNft(e,t,{nftMetadata:s,userAddress:n,source:r=G.Source.Custom,networkClientId:o,chainId:i}={}){const c=N(this,a,"m",P).call(this,n);if(!c)return;const l=(0,O.toChecksumHexAddress)(e),d=i||N(this,a,"m",I).call(this,{networkClientId:o});s=s||await N(this,a,"m",k).call(this,l,t,o);const m=(await N(this,a,"m",C).call(this,{tokenAddress:l,userAddress:c,networkClientId:o,source:r,nftMetadata:s,chainIdHex:r===G.Source.Detected?d:undefined})).find((e=>e.address.toLowerCase()===l.toLowerCase()));s.chainId||(s.chainId=(0,O.convertHexToDecimal)(d)),m&&await N(this,a,"m",S).call(this,l,t,s,m,d,c,r)}async updateNftMetadata({nfts:e,userAddress:t,networkClientId:s}){const r=N(this,a,"m",P).call(this,t),o=await N(this,n,"f").acquire();try{const t=N(this,a,"m",I).call(this,{networkClientId:s}),n=e.map((e=>({...e,address:(0,O.toChecksumHexAddress)(e.address)}))),o=await Promise.all(n.map((async e=>({nft:e,newMetadata:await N(this,a,"m",k).call(this,e.address,e.tokenId,s)})))),i=[],{allNfts:c}=this.state,l=c[r]?.[t]||[];o.forEach((e=>{const t=l.find((t=>t.address.toLowerCase()===e.nft.address.toLowerCase()&&t.tokenId===e.nft.tokenId));if(t){(0,W.compareNftMetadata)(e.newMetadata,t)&&i.push(e)}})),0!==i.length&&i.forEach((e=>this.updateNft(e.nft,e.newMetadata,r,t)))}finally{o()}}removeNft(e,t,{networkClientId:s,userAddress:n}={}){const r=N(this,a,"m",P).call(this,n),o=N(this,a,"m",I).call(this,{networkClientId:s}),i=(0,O.toChecksumHexAddress)(e);N(this,a,"m",T).call(this,i,t,{chainId:o,userAddress:r});const{allNfts:c}=this.state;(c[r]?.[o]||[]).find((e=>e.address.toLowerCase()===i.toLowerCase()))||N(this,a,"m",_).call(this,i,{chainId:o,userAddress:r})}removeAndIgnoreNft(e,t,{networkClientId:s,userAddress:n}={}){const r=N(this,a,"m",P).call(this,n),o=N(this,a,"m",I).call(this,{networkClientId:s}),i=(0,O.toChecksumHexAddress)(e);N(this,a,"m",v).call(this,i,t,{chainId:o,userAddress:r});const{allNfts:c}=this.state;(c[r]?.[o]||[]).find((e=>e.address.toLowerCase()===i.toLowerCase()))||N(this,a,"m",_).call(this,i,{chainId:o,userAddress:r})}clearIgnoredNfts(){this.update((e=>{e.ignoredNfts=[]}))}async checkAndUpdateSingleNftOwnershipStatus(e,t,{userAddress:s,networkClientId:n}={}){const r=N(this,a,"m",P).call(this,s),o=N(this,a,"m",I).call(this,{networkClientId:n}),{address:i,tokenId:c}=e;let l=e.isCurrentlyOwned;try{l=await this.isNftOwner(r,i,c,{networkClientId:n})}catch{}const d={...e,isCurrentlyOwned:l};if(t)return d;const{allNfts:m}=this.state,u=[...m[r]?.[o]||[]],p=u.findIndex((e=>e.tokenId===c&&e.address.toLowerCase()===i.toLowerCase()));return-1!==p&&(u[p]=d,this.update((e=>{e.allNfts[r]=Object.assign({},e.allNfts[r],{[o]:u})})),N(this,a,"m",g).call(this,u,V,{userAddress:r,chainId:o})),d}async checkAndUpdateAllNftsOwnershipStatus({networkClientId:e,userAddress:t}={}){const s=N(this,a,"m",P).call(this,t),n=N(this,a,"m",I).call(this,{networkClientId:e}),{allNfts:r}=this.state,o=r[s]?.[n]||[],i=await Promise.all(o.map((async s=>await this.checkAndUpdateSingleNftOwnershipStatus(s,!0,{networkClientId:e,userAddress:t})??s)));N(this,a,"m",g).call(this,i,V,{userAddress:s,chainId:n})}updateNftFavoriteStatus(e,t,s,{networkClientId:n,userAddress:r}={}){const o=N(this,a,"m",P).call(this,r),i=N(this,a,"m",I).call(this,{networkClientId:n}),{allNfts:c}=this.state,l=[...c[o]?.[i]||[]],d=l.findIndex((s=>s.address===e&&s.tokenId===t));if(-1===d)return;const m={...l[d],favorite:s};l[d]=m,N(this,a,"m",g).call(this,l,V,{chainId:i,userAddress:o})}findNftByAddressAndTokenId(e,t,s,a){const{allNfts:n}=this.state,r=n[s]?.[a]||[],o=r.findIndex((s=>s.address.toLowerCase()===e.toLowerCase()&&s.tokenId===t));return-1===o?null:{nft:r[o],index:o}}updateNft(e,t,s,n){const{allNfts:r}=this.state,o=r[s]?.[n]||[],i=this.findNftByAddressAndTokenId(e.address,e.tokenId,s,n);if(!i)return;const c={...e,...t},l=[...o.slice(0,i.index),c,...o.slice(i.index+1)];N(this,a,"m",g).call(this,l,V,{chainId:n,userAddress:s})}resetNftTransactionStatusByTransactionId(e,t,s){const{allNfts:n}=this.state,r=n[t]?.[s]||[],o=r.findIndex((t=>t.transactionId===e));if(-1===o)return!1;const i={...r[o],transactionId:undefined},c=[...r.slice(0,o),i,...r.slice(o+1)];return N(this,a,"m",g).call(this,c,V,{chainId:s,userAddress:t}),!0}async getNFTContractInfo(e,t){const s=new URL(N(this,a,"m",f).call(this));s.searchParams.append("chainId",t);for(const t of e)s.searchParams.append("contract",t);return await(0,O.handleFetch)(s,{headers:{Version:O.NFT_API_VERSION}})}async _requestApproval(e){return this.messagingSystem.call("ApprovalController:addRequest",{id:e.id,origin:e.origin,type:O.ApprovalType.WatchAsset,requestData:{id:e.id,interactingAddress:e.interactingAddress,asset:{address:e.asset.address,tokenId:e.asset.tokenId,name:e.asset.name,description:e.asset.description,image:e.asset.image,standard:e.asset.standard}}},!0)}resetState(){this.update((()=>(0,s.getDefaultNftControllerState)()))}}s.NftController=Y,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,m=new WeakMap,a=new WeakSet,u=function({selectedNetworkClientId:e}){const{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);R(this,o,t,"f")},p=async function({ipfsGateway:e,openSeaEnabled:t,isIpfsGatewayEnabled:s}){const n=this.messagingSystem.call("AccountsController:getSelectedAccount");if(R(this,r,n.id,"f"),N(this,i,"f")!==e||N(this,c,"f")!==t||N(this,d,"f")!==s){R(this,i,e,"f"),R(this,c,t,"f"),R(this,d,s,"f");(s&&""!==e||t)&&n&&await N(this,a,"m",D).call(this,n)}},h=async function(e){const t=N(this,r,"f");R(this,r,e.id,"f");(N(this,d,"f")&&""!==N(this,i,"f")||N(this,c,"f"))&&t!==e.id&&await N(this,a,"m",D).call(this,e)},g=function(e,t,{userAddress:s,chainId:a}){s&&this.update((n=>{const r=n[t],o={...r[s]||{},[a]:e};n[t]={...r,[s]:o}}))},f=function(){return`${O.NFT_API_BASE_URL}/collections`},b=async function(e,t){const s=new URLSearchParams({chainIds:"1",tokens:`${e}:${t}`,includeTopBid:"true",includeAttributes:"true",includeLastSale:"true"}).toString(),a=await(0,O.fetchWithErrorHandling)({url:`${this.getNftApi()}?${s}`,options:{headers:{Version:O.NFT_API_VERSION}}}),n=new URLSearchParams({chainId:"1",id:`${a?.tokens[0]?.token?.collection?.id}`}).toString(),r=await(0,O.fetchWithErrorHandling)({url:`${O.NFT_API_BASE_URL}/collections?${n}`,options:{headers:{Version:O.NFT_API_VERSION}}});if(!a?.tokens?.[0]?.token)return{name:null,description:null,image:null,standard:null};const{image:o,metadata:{imageOriginal:i}={},name:c,description:l,collection:d,kind:m,rarityRank:u,rarity:p,attributes:h,lastSale:g,imageSmall:f}=a.tokens[0].token;return Object.assign({},{name:c||null},{description:l||null},{image:o||null},d?.creator&&{creator:d.creator},i&&{imageOriginal:i},f&&{imageThumbnail:f},m&&{standard:m.toUpperCase()},g&&{lastSale:g},h&&{attributes:h},a.tokens[0].market?.topBid&&{topBid:a.tokens[0].market?.topBid},u&&{rarityRank:u},p&&{rarity:p},(d||r)&&{collection:{...d||{},creator:d?.creator||r?.collections[0].creator,openseaVerificationStatus:r?.collections[0].openseaVerificationStatus,contractDeployedAt:r?.collections[0].contractDeployedAt,ownerCount:r?.collections[0].ownerCount,topBid:r?.collections[0].topBid}})},y=async function(e,t,s){const n=await N(this,a,"m",w).call(this,e,t,s);let r=n[0];const o=n[1],m=r.startsWith("ipfs://");if(m&&!N(this,d,"f"))return{image:null,name:null,description:null,standard:o||null,favorite:!1,tokenURI:r??null};const u=N(this,c,"f");if(!m&&!u)return{image:null,name:null,description:null,standard:o||null,favorite:!1,tokenURI:r??null};if(m&&(r=await(0,W.getFormattedIpfsUrl)(N(this,i,"f"),r,N(this,l,"f"))),r.startsWith("data:image/"))return{image:r,name:null,description:null,standard:o||null,favorite:!1,tokenURI:r??null};try{const e=await(0,O.handleFetch)(r);return{image:e[Object.prototype.hasOwnProperty.call(e,"image")?"image":"image_url"],name:e.name,description:e.description,standard:o,favorite:!1,tokenURI:r??null}}catch{return{image:null,name:null,description:null,standard:o||null,favorite:!1,tokenURI:r??null}}},w=async function(e,t,s){try{return[await this.messagingSystem.call("AssetsContractController:getERC721TokenURI",e,t,s),O.ERC721]}catch{}try{const a=await this.messagingSystem.call("AssetsContractController:getERC1155TokenURI",e,t,s);if(!a.includes("{id}"))return[a,O.ERC1155];const n=(0,L.remove0x)((0,O.BNToHex)(new U.default(t))).padStart(64,"0").toLowerCase();return[a.replace("{id}",n),O.ERC1155]}catch{}return["",""]},k=async function(e,t,s){const n=N(this,a,"m",I).call(this,{networkClientId:s}),[r,o]=await Promise.all([(0,O.safelyExecute)((()=>N(this,a,"m",y).call(this,e,t,s))),N(this,c,"f")&&"0x1"===n?(0,O.safelyExecute)((()=>N(this,a,"m",b).call(this,e,t))):undefined]);return{...o,name:r?.name??o?.name??null,description:r?.description??o?.description??null,image:o?.image??r?.image??null,standard:r?.standard??o?.standard??null,tokenURI:r?.tokenURI??null}},A=async function(e,t){const[s,a]=await Promise.all([this.messagingSystem.call("AssetsContractController:getERC721AssetName",e,t),this.messagingSystem.call("AssetsContractController:getERC721AssetSymbol",e,t)]);return{collection:{name:s},symbol:a,address:e}},E=async function(e,t,s){const n=await(0,O.safelyExecute)((()=>N(this,a,"m",A).call(this,e,s)));return n||!Object.values(t).every((e=>null===e))?{address:e,...n,schema_name:t?.standard??null,collection:{name:null,image_url:t?.collection?.image??t?.collection?.imageUrl??null,tokenCount:t?.collection?.tokenCount??null,...t?.collection,...n?.collection}}:{address:e,asset_contract_type:null,created_date:null,schema_name:null,symbol:null,total_supply:null,description:null,external_link:null,collection:{name:null,image_url:null}}},S=async function(e,t,s,r,o,i,c){const l=await N(this,n,"f").acquire();try{const n=(0,O.toChecksumHexAddress)(e),{allNfts:l}=this.state,d=[...l[i]?.[o]??[]],u=d.find((e=>e.address.toLowerCase()===n.toLowerCase()&&e.tokenId===t));if(u){const e=(0,W.compareNftMetadata)(s,u),a=(0,W.hasNewCollectionFields)(s,u);if(!e&&u.isCurrentlyOwned&&!a)return;const r=d.findIndex((e=>e.address.toLowerCase()===n.toLowerCase()&&e.tokenId===t));-1!==r&&(d[r]={...u,...s})}else{const e={address:n,tokenId:t,favorite:!1,isCurrentlyOwned:!0,...s};d.push(e)}N(this,a,"m",g).call(this,d,V,{chainId:o,userAddress:i}),N(this,m,"f")&&N(this,m,"f").call(this,{address:n,symbol:r.symbol,tokenId:t.toString(),standard:s.standard,source:c})}finally{l()}},C=async function({tokenAddress:e,userAddress:t,networkClientId:s,source:r,nftMetadata:o,chainIdHex:i}){const c=await N(this,n,"f").acquire();try{const n=(0,O.toChecksumHexAddress)(e),{allNftContracts:c}=this.state,l=i||N(this,a,"m",I).call(this,{networkClientId:s}),d=c[t]?.[l]||[];if(d.find((e=>e.address.toLowerCase()===n.toLowerCase())))return d;const m=await N(this,a,"m",E).call(this,n,o,s),{asset_contract_type:u,created_date:p,symbol:h,description:f,external_link:b,schema_name:y,collection:{name:w,image_url:k,tokenCount:A}}=m;if(r===G.Source.Detected&&"address"in m&&"string"==typeof m.address&&"collection"in m&&null===m.collection.name&&"image_url"in m.collection&&null===m.collection.image_url&&Object.entries(m).every((([e,t])=>"address"===e||"collection"===e||!t)))return d;const S=Object.assign({},{address:n},f&&{description:f},w&&{name:w},k&&{logo:k},h&&{symbol:h},null!=A&&{totalSupply:A},u&&{assetContractType:u},p&&{createdDate:p},y&&{schemaName:y},b&&{externalLink:b}),C=[...d,S];return N(this,a,"m",g).call(this,C,K,{chainId:l,userAddress:t}),C}finally{c()}},v=function(e,t,{chainId:s,userAddress:n}){const r=(0,O.toChecksumHexAddress)(e),{allNfts:o,ignoredNfts:i}=this.state,c=[...i],l=(o[n]?.[s]||[]).filter((e=>{if(e.address.toLowerCase()===r.toLowerCase()&&e.tokenId===t){return!c.find((e=>e.address===r&&e.tokenId===t))&&c.push(e),!1}return!0}));N(this,a,"m",g).call(this,l,V,{userAddress:n,chainId:s}),this.update((e=>{e.ignoredNfts=c}))},T=function(e,t,{chainId:s,userAddress:n}){const r=(0,O.toChecksumHexAddress)(e),{allNfts:o}=this.state,i=(o[n]?.[s]||[]).filter((e=>!(e.address.toLowerCase()===r.toLowerCase()&&e.tokenId===t)));N(this,a,"m",g).call(this,i,V,{userAddress:n,chainId:s})},_=function(e,{chainId:t,userAddress:s}){const n=(0,O.toChecksumHexAddress)(e),{allNftContracts:r}=this.state,o=(r[s]?.[t]||[]).filter((e=>!(e.address.toLowerCase()===n.toLowerCase())));return N(this,a,"m",g).call(this,o,K,{chainId:t,userAddress:s}),o},x=async function(e,t,s,{networkClientId:a}={}){const{address:n,tokenId:r}=e;if(!t)throw j.rpcErrors.invalidParams("Asset type is required");if(t!==O.ERC721&&t!==O.ERC1155)throw j.rpcErrors.invalidParams(`Non NFT asset type ${t} not supported by watchNft`);if(!n||!r)throw j.rpcErrors.invalidParams("Both address and tokenId are required");if(!(0,M.isAddress)(n))throw j.rpcErrors.invalidParams("Invalid address");if(!/^\d+$/u.test(r))throw j.rpcErrors.invalidParams("Invalid tokenId");try{if(!await this.isNftOwner(s,n,r,{networkClientId:a}))throw j.rpcErrors.invalidInput("Suggested NFT is not owned by the selected account")}catch(e){if(e instanceof Error)throw j.rpcErrors.resourceUnavailable(e.message);throw e}},I=function({networkClientId:e}){if(e){const{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return t}return N(this,o,"f")},P=function(e){if(e)return e;const t=this.messagingSystem.call("AccountsController:getAccount",N(this,r,"f"));return t?.address||""},D=async function(e){const t=(this.state.allNfts[e.address]?.[N(this,o,"f")]??[]).filter((e=>!e.name&&!e.description&&!e.image));0!==t.length&&t.length<500&&await this.updateNftMetadata({nfts:t,userAddress:e.address})},s.default=Y}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/NftController.cjs"}],[1338,{"./assetsUtil.cjs":1351,"./constants.cjs":1352,"@metamask/base-controller":1365,"@metamask/controller-utils":1468,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.NftDetectionController=s.MAX_GET_COLLECTION_BATCH_SIZE=s.BlockaidResultType=void 0;const p=e("@metamask/base-controller"),h=e("@metamask/controller-utils"),g=e("@metamask/utils"),f=e("./assetsUtil.cjs"),b=e("./constants.cjs"),y=[h.ChainId.mainnet,h.ChainId["linea-mainnet"]];var w;!function(e){e.Benign="Benign",e.Spam="Spam",e.Warning="Warning",e.Malicious="Malicious"}(w||(s.BlockaidResultType=w={})),s.MAX_GET_COLLECTION_BATCH_SIZE=20;class k extends p.BaseController{constructor({messenger:e,disabled:t=!1,addNft:s,getNftState:l}){super({name:"NftDetectionController",messenger:e,metadata:{},state:{}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),m(this,n,t,"f"),m(this,i,{},"f"),m(this,o,l,"f"),m(this,r,s,"f"),this.messagingSystem.subscribe("PreferencesController:stateChange",u(this,a,"m",c).bind(this))}isMainnet(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return t===h.ChainId.mainnet}isMainnetByNetworkClientId(e){return e.configuration.chainId===h.ChainId.mainnet}async detectNfts(e,t){const c=t?.userAddress??this.messagingSystem.call("AccountsController:getSelectedAccount").address,l=e.filter((e=>y.includes(e)));if(0===l.length||u(this,n,"f"))return;if(!c)return;const m=`${e.join(",")}:${c}`;if(m in u(this,i,"f"))return void await u(this,i,"f")[m];const{promise:p,resolve:k,reject:A}=(0,g.createDeferredPromise)({suppressUnhandledRejection:!0});let E;u(this,i,"f")[m]=p;let S,C=[];try{do{S=await u(this,a,"m",d).call(this,c,l,E),C=S.tokens.filter((e=>!1===e.token.isSpam&&(!e.blockaidResult?.result_type||e.blockaidResult?.result_type===w.Benign)));const e=C.reduce(((e,t)=>(e[t.token.chainId]?.includes(t.token.contract)||t.token.contract!==t?.token?.collection?.id||(e[t.token.chainId]||(e[t.token.chainId]=[]),e[t.token.chainId].push(t.token.contract)),e)),{});if(Object.values(e).some((e=>e.length>0))){const t=await Promise.all(Object.entries(e).map((([e,t])=>(0,f.reduceInBatchesSerially)({values:t,batchSize:s.MAX_GET_COLLECTION_BATCH_SIZE,eachBatch:async(t,s)=>{const a=new URLSearchParams(s.map((e=>["contract",e])));a.append("chainId",e);return{...t,...await(0,h.fetchWithErrorHandling)({url:`${h.NFT_API_BASE_URL}/collections?${a.toString()}`,options:{headers:{Version:h.NFT_API_VERSION}},timeout:h.NFT_API_TIMEOUT})}},initialResult:{}})))),a={collections:[]};t.forEach((e=>{e?.collections&&a?.collections.push(...e.collections)})),a.collections?.length&&C.forEach((e=>{const t=a.collections.find((t=>t.id?.toLowerCase()===e.token.contract.toLowerCase()&&e.token.chainId===t.chainId));t&&(e.token={...e.token,collection:{...e.token.collection??{},openseaVerificationStatus:t?.openseaVerificationStatus,contractDeployedAt:t.contractDeployedAt,creator:t?.creator,ownerCount:t.ownerCount,topBid:t.topBid}})}))}const t=C.map((async e=>{const{tokenId:t,contract:s,kind:a,image:n,imageSmall:i,metadata:l,name:d,description:m,attributes:p,topBid:g,lastSale:f,rarityRank:y,rarityScore:w,collection:k,chainId:A}=e.token,{imageOriginal:E}=l||{};let S;const{ignoredNfts:C}=u(this,o,"f").call(this);if(C.length&&(S=C.find((e=>e.address===(0,h.toChecksumHexAddress)(s)&&e.tokenId===t))),!S){const e=Object.assign({},{name:d},m&&{description:m},n&&{image:n},i&&{imageThumbnail:i},E&&{imageOriginal:E},a&&{standard:a.toUpperCase()},f&&{lastSale:f},p&&{attributes:p},g&&{topBid:g},y&&{rarityRank:y},w&&{rarityScore:w},k&&{collection:k},A&&{chainId:A});await u(this,r,"f").call(this,s,t,{nftMetadata:e,userAddress:c,source:b.Source.Detected,chainId:(0,h.toHex)(A)})}}));await Promise.all(t)}while(E=S.continuation);k()}catch(e){throw A(e),e}finally{delete u(this,i,"f")[m]}}}s.NftDetectionController=k,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function({useNftDetection:e}){!e!==u(this,n,"f")&&m(this,n,!e,"f")},l=function({chainIds:e,address:t,next:s}){const a=e.join("&chainIds=");return`${h.NFT_API_BASE_URL}/users/${t}/tokens?chainIds=${a}&limit=50&includeTopBid=true&continuation=${s??""}`},d=async function(e,t,s){const n=t.map((e=>(0,h.convertHexToDecimal)(e).toString())),r=u(this,a,"m",l).call(this,{chainIds:n,address:e,next:s});return await(0,h.handleFetch)(r,{headers:{Version:h.NFT_API_VERSION}})},s.default=k}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/NftDetectionController.cjs"}],[1339,{"../crypto-compare-service/index.cjs":1354,"@metamask/base-controller":1365,"async-mutex":3775},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},p=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RatesController=s.Cryptocurrency=s.name=void 0;const h=e("@metamask/base-controller"),g=e("async-mutex"),f=e("../crypto-compare-service/index.cjs");var b;s.name="RatesController",function(e){e.Btc="btc",e.Solana="sol"}(b||(s.Cryptocurrency=b={}));const y={fiatCurrency:{persist:!0,anonymous:!0},rates:{persist:!0,anonymous:!0},cryptocurrencies:{persist:!0,anonymous:!0}},w={fiatCurrency:"usd",rates:{[b.Btc]:{conversionDate:0,conversionRate:0},[b.Solana]:{conversionDate:0,conversionRate:0}},cryptocurrencies:[b.Btc,b.Solana]};class k extends h.BaseController{constructor({interval:e=18e4,messenger:t,state:l,includeUsdRate:d,fetchMultiExchangeRate:m=f.fetchMultiExchangeRate}){super({name:s.name,metadata:y,messenger:t,state:{...w,...l}}),a.add(this),n.set(this,new g.Mutex),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),c.set(this,void 0),u(this,o,d,"f"),u(this,r,m,"f"),u(this,i,e,"f")}async start(){p(this,c,"f")||(this.messagingSystem.publish(`${s.name}:pollingStarted`),await p(this,a,"m",m).call(this),u(this,c,setInterval((()=>{p(this,a,"m",d).call(this).catch(console.error)}),p(this,i,"f")),"f"))}async stop(){p(this,c,"f")&&(clearInterval(p(this,c,"f")),u(this,c,undefined,"f"),this.messagingSystem.publish(`${s.name}:pollingStopped`))}getCryptocurrencyList(){const{cryptocurrencies:e}=this.state;return e}async setCryptocurrencyList(e){await p(this,a,"m",l).call(this,(()=>{this.update((t=>({...t,cryptocurrencies:e})))}))}async setFiatCurrency(e){if(""===e)throw new Error("The currency can not be an empty string");await p(this,a,"m",l).call(this,(()=>{this.update((t=>({...t,fiatCurrency:e})))})),await p(this,a,"m",m).call(this)}}s.RatesController=k,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,a=new WeakSet,l=async function(e){const t=await p(this,n,"f").acquire();try{return e()}finally{t()}},d=async function(){await p(this,a,"m",m).call(this)},m=async function(){await p(this,a,"m",l).call(this,(async()=>{const{fiatCurrency:e,cryptocurrencies:t}=this.state,s=await p(this,r,"f").call(this,e,t,p(this,o,"f")),a={};for(const[t,n]of Object.entries(s))a[t]={conversionDate:Date.now(),conversionRate:n[e],...p(this,o,"f")&&{usdConversionRate:n.usd}};this.update((e=>({...e,rates:a})))}))}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/RatesController/RatesController.cjs"}],[1340,{"./RatesController.cjs":1339},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.Cryptocurrency=s.RatesController=void 0;var a=e("./RatesController.cjs");Object.defineProperty(s,"RatesController",{enumerable:!0,get:function(){return a.RatesController}}),Object.defineProperty(s,"Cryptocurrency",{enumerable:!0,get:function(){return a.Cryptocurrency}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/RatesController/index.cjs"}],[1341,{"../assetsUtil.cjs":1351,"@ethereumjs/util":477,"@ethersproject/contracts":527,"@metamask/abi-utils":1274,"@metamask/controller-utils":1468,"@metamask/metamask-eth-abis":2055,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC20Standard=void 0;const a=e("@ethereumjs/util"),n=e("@ethersproject/contracts"),r=e("@metamask/abi-utils"),o=e("@metamask/controller-utils"),i=e("@metamask/metamask-eth-abis"),c=e("@metamask/utils"),l=e("../assetsUtil.cjs");s.ERC20Standard=class{constructor(e){this.provider=e}async getBalanceOf(e,t){const s=new n.Contract(e,i.abiERC20,this.provider),a=await s.balanceOf(t);return(0,l.ethersBigNumberToBN)(a)}async getTokenDecimals(e){const t=new n.Contract(e,i.abiERC20,this.provider);try{return(await t.decimals()).toString()}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))throw new Error("Failed to parse token decimals");throw e}}async getTokenName(e){const t=new n.Contract(e,i.abiERC20,this.provider);try{return(await t.name()).toString()}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))throw new Error("Failed to parse token name");throw e}}async getTokenSymbol(e){const t={to:e,data:"0x95d89b41"},s=await this.provider.call(t);(0,c.assertIsStrictHexString)(s);try{const e=(0,r.decodeSingle)("string",s);if(e?.length>0)return e}catch{}try{const e=/^(00)+|(00)+$/gu,t=s?.replace(e,""),n=(0,a.bytesToUtf8)((0,c.hexToBytes)(t));if(n.length>0)return n}catch{}throw new Error("Failed to parse token symbol")}async getDetails(e,t){const[s,a,n]=await Promise.all([this.getTokenDecimals(e),this.getTokenSymbol(e),t?this.getBalanceOf(e,t):undefined]);return{decimals:s,symbol:a,balance:n,standard:o.ERC20}}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/ERC20Standard.cjs"}],[1342,{"../../../assetsUtil.cjs":1351,"@ethersproject/contracts":527,"@metamask/controller-utils":1468,"@metamask/metamask-eth-abis":2055},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC1155Standard=void 0;const a=e("@ethersproject/contracts"),n=e("@metamask/controller-utils"),r=e("@metamask/metamask-eth-abis"),o=e("../../../assetsUtil.cjs");s.ERC1155Standard=class{constructor(e){this.provider=e}async contractSupportsURIMetadataInterface(e){return this.contractSupportsInterface(e,n.ERC1155_METADATA_URI_INTERFACE_ID)}async contractSupportsTokenReceiverInterface(e){return this.contractSupportsInterface(e,n.ERC1155_TOKEN_RECEIVER_INTERFACE_ID)}async contractSupportsBase1155Interface(e){return this.contractSupportsInterface(e,n.ERC1155_INTERFACE_ID)}async getTokenURI(e,t){return new a.Contract(e,r.abiERC1155,this.provider).uri(t)}async getBalanceOf(e,t,s){const n=new a.Contract(e,r.abiERC1155,this.provider),i=await n.balanceOf(t,s);return(0,o.ethersBigNumberToBN)(i)}async transferSingle(e,t,s,n,o){const i=new a.Contract(e,r.abiERC1155,this.provider);return new Promise(((a,r)=>{i.transferSingle(e,t,s,n,o,((e,t)=>{e?r(e):a(t)}))}))}async getAssetSymbol(e){return new a.Contract(e,[{inputs:[],name:"symbol",outputs:[{name:"_symbol",type:"string"}],stateMutability:"view",type:"function",payable:!1}],this.provider).symbol()}async getAssetName(e){return new a.Contract(e,[{inputs:[],name:"name",outputs:[{name:"_name",type:"string"}],stateMutability:"view",type:"function",payable:!1}],this.provider).name()}async contractSupportsInterface(e,t){return new a.Contract(e,r.abiERC1155,this.provider).supportsInterface(t)}async getDetails(e,t,s){if(!await this.contractSupportsBase1155Interface(e))throw new Error("This isn't a valid ERC1155 contract");let a;const[r,i,c]=await Promise.all([(0,n.safelyExecute)((()=>this.getAssetSymbol(e))),(0,n.safelyExecute)((()=>this.getAssetName(e))),s?(0,n.safelyExecute)((()=>this.getTokenURI(e,s).then((e=>e.startsWith("ipfs://")?(0,o.getFormattedIpfsUrl)(t,e,!0):e)))):undefined]);if(c)try{const e=await(0,n.timeoutFetch)(c),s=await e.json();a=s?.image,a?.startsWith("ipfs://")&&(a=(0,o.getFormattedIpfsUrl)(t,a,!0))}catch{}return{standard:n.ERC1155,tokenURI:c,image:a,symbol:r,name:i}}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/NftStandards/ERC1155/ERC1155Standard.cjs"}],[1343,{"../../../assetsUtil.cjs":1351,"@ethersproject/contracts":527,"@metamask/controller-utils":1468,"@metamask/metamask-eth-abis":2055},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ERC721Standard=void 0;const a=e("@ethersproject/contracts"),n=e("@metamask/controller-utils"),r=e("@metamask/metamask-eth-abis"),o=e("../../../assetsUtil.cjs");s.ERC721Standard=class{constructor(e){this.contractSupportsMetadataInterface=async e=>this.contractSupportsInterface(e,n.ERC721_METADATA_INTERFACE_ID),this.contractSupportsEnumerableInterface=async e=>this.contractSupportsInterface(e,n.ERC721_ENUMERABLE_INTERFACE_ID),this.contractSupportsBase721Interface=async e=>this.contractSupportsInterface(e,n.ERC721_INTERFACE_ID),this.getNftTokenId=async(e,t,s)=>new a.Contract(e,r.abiERC721,this.provider).tokenOfOwnerByIndex(t,s),this.getTokenURI=async(e,t)=>{const s=new a.Contract(e,r.abiERC721,this.provider);return await this.contractSupportsMetadataInterface(e)||console.error("Contract does not support ERC721 metadata interface."),s.tokenURI(t)},this.getAssetName=async e=>new a.Contract(e,r.abiERC721,this.provider).name(),this.getAssetSymbol=async e=>new a.Contract(e,r.abiERC721,this.provider).symbol(),this.contractSupportsInterface=async(e,t)=>{const s=new a.Contract(e,r.abiERC721,this.provider);try{return await s.supportsInterface(t)}catch(e){if(e instanceof Error&&e.message.includes("call revert exception"))return!1;throw e}},this.getDetails=async(e,t,s)=>{if(!await this.contractSupportsBase721Interface(e))throw new Error("This isn't a valid ERC721 contract");const[a,r,i]=await Promise.all([(0,n.safelyExecute)((()=>this.getAssetSymbol(e))),(0,n.safelyExecute)((()=>this.getAssetName(e))),s?(0,n.safelyExecute)((()=>this.getTokenURI(e,s).then((e=>e.startsWith("ipfs://")?(0,o.getFormattedIpfsUrl)(t,e,!0):e)))):undefined]);let c;if(i)try{const e=await(0,n.timeoutFetch)(i),s=await e.json();c=s?.image,c?.startsWith("ipfs://")&&(c=await(0,o.getFormattedIpfsUrl)(t,c,!0))}catch{}return{standard:n.ERC721,tokenURI:i,symbol:a,name:r,image:c}},this.provider=e}async getOwnerOf(e,t){return new a.Contract(e,r.abiERC721,this.provider).ownerOf(t)}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/Standards/NftStandards/ERC721/ERC721Standard.cjs"}],[1344,{"./multicall.cjs":1358,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/controller-utils":1468,"@metamask/metamask-eth-abis":2055,"@metamask/polling-controller":2289,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenBalancesController=s.getDefaultTokenBalancesState=void 0;const g=e("@ethersproject/contracts"),f=e("@ethersproject/providers"),b=e("@metamask/controller-utils"),y=e("@metamask/metamask-eth-abis"),w=e("@metamask/polling-controller"),k=e("lodash"),A=e("./multicall.cjs"),E={tokenBalances:{persist:!0,anonymous:!1}};function S(){return{tokenBalances:{}}}s.getDefaultTokenBalancesState=S;class C extends((0,w.StaticIntervalPollingController)()){constructor({interval:e=18e4,messenger:t,state:s={}}){var u,g;super({name:"TokenBalancesController",metadata:E,messenger:t,state:{tokenBalances:{},...s}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,(({isMultiAccountBalancesEnabled:e,useMultiAccountBalanceChecker:t})=>Boolean(e||t))),c.set(this,(e=>{const t=p(this,i,"f").call(this,e),s=t&&!p(this,n,"f");h(this,n,t,"f"),s&&this.updateBalances().catch(console.error)})),l.set(this,(({allTokens:e,allDetectedTokens:t})=>{const s=p(this,m,"f").call(this,e,t).filter((s=>!(0,k.isEqual)(p(this,r,"f")[s],e[s])||!(0,k.isEqual)(p(this,o,"f")[s],t[s])));h(this,r,e,"f"),h(this,o,t,"f"),this.updateBalances({chainIds:s}).catch(console.error)})),m.set(this,((e,t)=>[...new Set([...Object.keys(e),...Object.keys(t)])])),this.setIntervalLength(e),h(this,n,p(this,i,"f").call(this,this.messagingSystem.call("PreferencesController:getState")),"f"),this.messagingSystem.subscribe("PreferencesController:stateChange",p(this,c,"f").bind(this)),u=this,g=this,({allTokens:{set value(e){h(u,r,e,"f")}}.value,allDetectedTokens:{set value(e){h(g,o,e,"f")}}.value}=this.messagingSystem.call("TokensController:getState")),this.messagingSystem.subscribe("TokensController:stateChange",p(this,l,"f").bind(this)),this.messagingSystem.subscribe("NetworkController:stateChange",p(this,a,"m",d).bind(this))}async _executePoll({chainId:e}){await this.updateBalancesByChainId({chainId:e})}async updateBalances({chainIds:e}={}){e??(e=p(this,m,"f").call(this,p(this,r,"f"),p(this,o,"f"))),await Promise.allSettled(e.map((e=>this.updateBalancesByChainId({chainId:e}))))}async updateBalancesByChainId({chainId:e}){const{address:t}=this.messagingSystem.call("AccountsController:getSelectedAccount"),s=[],i=([e,a])=>p(this,n,"f")||(e=>(0,b.toChecksumHexAddress)(e)===(0,b.toChecksumHexAddress)(t))(e)?a.forEach((t=>s.push({accountAddress:e,tokenAddress:t.address}))):undefined;Object.entries(p(this,r,"f")[e]??{}).forEach(i),Object.entries(p(this,o,"f")[e]??{}).forEach(i);let c=[];if(s.length>0){const t=new f.Web3Provider(p(this,a,"m",u).call(this,e).provider),n=s.map((({accountAddress:e,tokenAddress:s})=>({contract:new g.Contract(s,y.abiERC20,t),functionSignature:"balanceOf(address)",arguments:[e]})));c=await(0,A.multicallOrFallback)(n,e,t)}this.update((t=>{var a,n;for(const s of Object.keys(t.tokenBalances))t.tokenBalances[s][e]={};for(let r=0;r<c.length;r++){const{success:o,value:i}=c[r],{accountAddress:l,tokenAddress:d}=s[r];o&&(((n=(a=t.tokenBalances)[l]??(a[l]={}))[e]??(n[e]={}))[d]=(0,b.toHex)(i))}}))}resetState(){this.update((()=>({tokenBalances:{}})))}}s.TokenBalancesController=C,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,l=new WeakMap,m=new WeakMap,a=new WeakSet,d=function(e,t){for(const e of t)if("remove"===e.op&&"networkConfigurationsByChainId"===e.path[0]){const t=e.path[1];this.update((e=>{for(const s of Object.keys(e.tokenBalances))delete e.tokenBalances[s][t]}))}},u=function(e){const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e];if(!s)throw new Error(`TokenBalancesController: No network configuration found for chainId ${e}`);const{networkClientId:a}=s.rpcEndpoints[s.defaultRpcEndpointIndex];return this.messagingSystem.call("NetworkController:getNetworkClientById",a)},s.default=C}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenBalancesController.cjs"}],[1345,{"./assetsUtil.cjs":1351,"./multi-chain-accounts-service/index.cjs":1356,"@metamask/contract-metadata":1465,"@metamask/controller-utils":1468,"@metamask/polling-controller":2289,"@metamask/utils":2815,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y,w,k,A,E,S,C,v,T,_,x,I,P,D,R,N,B=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},M=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},F=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenDetectionController=s.controllerName=s.mapChainIdWithTokenListMap=s.STATIC_MAINNET_TOKEN_LIST=void 0;const O=F(e("@metamask/contract-metadata")),j=e("@metamask/controller-utils"),L=e("@metamask/polling-controller"),$=e("@metamask/utils"),U=e("lodash"),H=e("./assetsUtil.cjs"),W=e("./multi-chain-accounts-service/index.cjs"),G=18e4;function q(e){return(0,U.mapValues)(e,(e=>(0,U.isObject)(e)&&"data"in e?(0,U.get)(e,["data"]):e))}s.STATIC_MAINNET_TOKEN_LIST=Object.entries(O.default).reduce(((e,[t,s])=>{const{logo:a,erc20:n,erc721:r,...o}=s;return{...e,[t.toLowerCase()]:{...o,address:t.toLowerCase(),iconUrl:`images/contract/${a}`,aggregators:[]}}}),{}),s.mapChainIdWithTokenListMap=q,s.controllerName="TokenDetectionController";class V extends((0,L.StaticIntervalPollingController)()){constructor({interval:e=18e4,disabled:t=!0,getBalancesInSingleCall:f,trackMetaMetricsEvent:b,messenger:y,useAccountsAPI:w=!0,platform:A}){super({name:s.controllerName,messenger:y,state:{},metadata:{}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,{}),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),m.set(this,void 0),u.set(this,void 0),p.set(this,void 0),h.set(this,{isAccountsAPIEnabled:!0,supportedNetworksCache:null,platform:"",async getSupportedNetworks(){if(!this.isAccountsAPIEnabled)throw new Error("Accounts API Feature Switch is disabled");if(this.supportedNetworksCache)return this.supportedNetworksCache;const e=await(0,W.fetchSupportedNetworks)().catch((()=>null));return this.supportedNetworksCache=e,e},async getMultiNetworksBalances(e,t,s){const a=t.map((e=>(0,$.hexToNumber)(e)));if(!s||!a.every((e=>s.includes(e)))){const e=(s??[]).toString();throw new Error(`Unsupported Network: supported networks ${e}, requested networks: ${a.toString()}`)}return(await(0,W.fetchMultiChainBalances)(e,{networks:a},this.platform)).balances}}),B(this,c,t,"f"),this.setIntervalLength(e),B(this,r,M(this,a,"m",R).call(this).id,"f");const{chainId:E,networkClientId:S}=M(this,a,"m",k).call(this);B(this,o,S,"f");const{tokensChainsCache:C}=this.messagingSystem.call("TokenListController:getState");B(this,i,C,"f");const{useTokenDetection:v}=this.messagingSystem.call("PreferencesController:getState");B(this,d,v,"f"),B(this,m,(0,H.isTokenDetectionSupportedForNetwork)(E),"f"),B(this,u,f,"f"),B(this,p,b,"f");const{isUnlocked:T}=this.messagingSystem.call("KeyringController:getState");B(this,l,T,"f"),M(this,h,"f").isAccountsAPIEnabled=w,M(this,h,"f").platform=A,M(this,a,"m",g).call(this)}enable(){B(this,c,!1,"f")}disable(){B(this,c,!0,"f")}get isActive(){return!M(this,c,"f")&&M(this,l,"f")}async start(){this.enable(),await M(this,a,"m",b).call(this)}stop(){this.disable(),M(this,a,"m",f).call(this)}async _executePoll({chainIds:e,address:t}){this.isActive&&await this.detectTokens({chainIds:e,selectedAddress:t})}async detectTokens({chainIds:e,selectedAddress:t}={}){if(!this.isActive)return;const s=t??M(this,a,"m",N).call(this),n=M(this,a,"m",w).call(this,e);let r;M(this,h,"f").isAccountsAPIEnabled&&(r=await M(this,h,"f").getSupportedNetworks());const{chainsToDetectUsingRpc:o,chainsToDetectUsingAccountAPI:i}=M(this,a,"m",E).call(this,n,r);if(r&&i.length>0){const e=await M(this,a,"m",S).call(this,i,s,r);"failed"===e?.result&&M(this,a,"m",C).call(this,o,i,n)}o.length>0&&await M(this,a,"m",T).call(this,o,s)}}s.TokenDetectionController=V,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,m=new WeakMap,u=new WeakMap,p=new WeakMap,h=new WeakMap,a=new WeakSet,g=function(){this.messagingSystem.subscribe("KeyringController:unlock",(async()=>{B(this,l,!0,"f"),await M(this,a,"m",A).call(this)})),this.messagingSystem.subscribe("KeyringController:lock",(()=>{B(this,l,!1,"f"),M(this,a,"m",f).call(this)})),this.messagingSystem.subscribe("TokenListController:stateChange",(async({tokensChainsCache:e})=>{M(this,a,"m",y).call(this,e,M(this,i,"f"))||await M(this,a,"m",A).call(this)})),this.messagingSystem.subscribe("PreferencesController:stateChange",(async({useTokenDetection:e})=>{const t=M(this,a,"m",R).call(this),s=M(this,d,"f")!==e;B(this,d,e,"f"),s&&await M(this,a,"m",A).call(this,{selectedAddress:t.address})})),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",(async e=>{const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=Object.keys(t);M(this,r,"f")!==e.id&&(B(this,r,e.id,"f"),await M(this,a,"m",A).call(this,{selectedAddress:e.address,chainIds:s}))}))},f=function(){M(this,n,"f")&&clearInterval(M(this,n,"f"))},b=async function(){this.isActive&&(M(this,a,"m",f).call(this),await this.detectTokens(),B(this,n,setInterval((async()=>{await this.detectTokens()}),this.getIntervalLength()),"f"))},y=function(e,t){const s=q(t),a=q(e);return(0,U.isEqual)(a,s)},w=function(e){const{networkConfigurationsByChainId:t,selectedNetworkClientId:s}=this.messagingSystem.call("NetworkController:getState");if(!e){const e=this.messagingSystem.call("NetworkController:getNetworkConfigurationByNetworkClientId",s);return[{chainId:e?.chainId??j.ChainId.mainnet,networkClientId:s}]}return e.map((e=>{const s=t[e];return{chainId:e,networkClientId:s.rpcEndpoints[s.defaultRpcEndpointIndex].networkClientId}}))},k=function(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return{chainId:t,networkClientId:e}},A=async function({selectedAddress:e,chainIds:t}={}){await this.detectTokens({chainIds:t,selectedAddress:e}),this.setIntervalLength(G)},E=function(e,t){const s=[],a=[];return e.forEach((({chainId:e,networkClientId:n})=>{t?.includes((0,$.hexToNumber)(e))?s.push(e):a.push({chainId:e,networkClientId:n})})),{chainsToDetectUsingRpc:a,chainsToDetectUsingAccountAPI:s}},S=async function(e,t,s){return await M(this,a,"m",I).call(this,{chainIds:e,selectedAddress:t,supportedNetworks:s})},C=function(e,t,s){t.forEach((t=>{const a=s.find((e=>e.chainId===t));a&&e.push({chainId:a.chainId,networkClientId:a.networkClientId})}))},v=function(e){if(!(0,H.isTokenDetectionSupportedForNetwork)(e))return!1;if(!M(this,d,"f")&&e!==j.ChainId.mainnet)return!1;if(!M(this,d,"f")&&e===j.ChainId.mainnet)B(this,i,M(this,a,"m",x).call(this),"f");else{const{tokensChainsCache:e}=this.messagingSystem.call("TokenListController:getState");B(this,i,e??{},"f")}return!0},T=async function(e,t){for(const{chainId:s,networkClientId:n}of e){if(!M(this,a,"m",v).call(this,s))continue;const e=M(this,a,"m",_).call(this,{chainId:s,selectedAddress:t}).map((e=>M(this,a,"m",D).call(this,{tokensSlice:e,selectedAddress:t,networkClientId:n,chainId:s})));await Promise.all(e)}},_=function({chainId:e,selectedAddress:t}){const{allTokens:s,allDetectedTokens:a,allIgnoredTokens:n}=this.messagingSystem.call("TokensController:getState"),[r,o,c]=[s,a,n].map((s=>(s[e]?.[t]??[]).map((e=>"string"==typeof e?e:e.address)))),l=[];for(const t of Object.keys(M(this,i,"f")?.[e]?.data||{}))[r,o,c].every((e=>!e.find((e=>(0,j.isEqualCaseInsensitive)(e,t)))))&&l.push(t);const d=[];for(let e=0,t=1e3;e<l.length;e+=t)d.push(l.slice(e,e+t));return d},x=function(){return{"0x1":{data:Object.entries(s.STATIC_MAINNET_TOKEN_LIST).reduce(((e,[t,s])=>({...e,[t]:{name:s.name,symbol:s.symbol,decimals:s.decimals,address:s.address,aggregators:[],iconUrl:s?.iconUrl}})),{}),timestamp:0}}},I=async function({selectedAddress:e,chainIds:t,supportedNetworks:s}){return await(0,j.safelyExecute)((async()=>{const n=await M(this,h,"f").getMultiNetworksBalances(e,t,s).catch((()=>null));if(null===n)return{result:"failed"};for(const s of t){const t=!M(this,d,"f")&&s===j.ChainId.mainnet,{tokensChainsCache:r}=this.messagingSystem.call("TokenListController:getState");B(this,i,t?M(this,a,"m",x).call(this):r??{},"f");const o=M(this,a,"m",_).call(this,{chainId:s,selectedAddress:e}),c=n.filter((e=>e.chainId===(0,$.hexToNumber)(s)));if(!c||0===c.length)continue;const{tokensWithBalance:l,eventTokensDetails:m}=M(this,a,"m",P).call(this,o,c,s);l.length&&(M(this,p,"f").call(this,{event:"Token Detected",category:"Wallet",properties:{tokens:m,token_standard:j.ERC20,asset_type:j.ASSET_TYPES.TOKEN}}),await this.messagingSystem.call("TokensController:addDetectedTokens",l,{selectedAddress:e,chainId:s}))}return{result:"success"}}))},P=function(e,t,s){const a=[],n=[],r=new Set(e.flat());return t?.forEach((e=>{const t=e.address;if(!r.has(t))return;const o=M(this,i,"f")[s]?.data[t];if(!o)return;const{decimals:c,symbol:l,aggregators:d,iconUrl:m,name:u}=o;n.push(`${l} - ${t}`),a.push({address:t,decimals:c,symbol:l,aggregators:d,image:m,isERC721:!1,name:u})})),{tokensWithBalance:a,eventTokensDetails:n}},D=async function({tokensSlice:e,selectedAddress:t,networkClientId:s,chainId:a}){await(0,j.safelyExecute)((async()=>{const n=await M(this,u,"f").call(this,t,e,s),r=[],o=[];for(const e of Object.keys(n)){const{decimals:t,symbol:s,aggregators:n,iconUrl:c,name:l}=M(this,i,"f")[a].data[e];o.push(`${s} - ${e}`),r.push({address:e,decimals:t,symbol:s,aggregators:n,image:c,isERC721:!1,name:l})}r.length&&(M(this,p,"f").call(this,{event:"Token Detected",category:"Wallet",properties:{tokens:o,token_standard:j.ERC20,asset_type:j.ASSET_TYPES.TOKEN}}),await this.messagingSystem.call("TokensController:addDetectedTokens",r,{selectedAddress:t,chainId:a}))}))},R=function(){return this.messagingSystem.call("AccountsController:getSelectedAccount")},N=function(){const e=this.messagingSystem.call("AccountsController:getAccount",M(this,r,"f"));return e?.address||""},s.default=V}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenDetectionController.cjs"}],[1346,{"./assetsUtil.cjs":1351,"./token-service.cjs":1361,"@metamask/controller-utils":1468,"@metamask/polling-controller":2289,"async-mutex":3775},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenListController=s.getDefaultTokenListState=void 0;const c=e("@metamask/controller-utils"),l=e("@metamask/polling-controller"),d=e("async-mutex"),m=e("./assetsUtil.cjs"),u=e("./token-service.cjs"),p={tokensChainsCache:{persist:!0,anonymous:!0},preventPollingOnNetworkRestart:{persist:!0,anonymous:!0}};s.getDefaultTokenListState=()=>({tokensChainsCache:{},preventPollingOnNetworkRestart:!1});class h extends((0,l.StaticIntervalPollingController)()){constructor({chainId:e,preventPollingOnNetworkRestart:t=!1,onNetworkStateChange:r,interval:o=864e5,cacheRefreshThreshold:c=864e5,messenger:l,state:m}){super({name:"TokenListController",metadata:p,messenger:l,state:{...(0,s.getDefaultTokenListState)(),...m}}),a.add(this),this.mutex=new d.Mutex,this.intervalDelay=o,this.setIntervalLength(o),this.cacheRefreshThreshold=c,this.chainId=e,this.updatePreventPollingOnNetworkRestart(t),this.abortController=new AbortController,r?r((async e=>{await i(this,a,"m",n).call(this,e)})):this.messagingSystem.subscribe("NetworkController:stateChange",(async e=>{await i(this,a,"m",n).call(this,e)}))}async start(){(0,m.isTokenListSupportedForNetwork)(this.chainId)&&await i(this,a,"m",r).call(this)}async restart(){this.stopPolling(),await i(this,a,"m",r).call(this)}stop(){this.stopPolling()}destroy(){super.destroy(),this.stopPolling()}stopPolling(){this.intervalId&&clearInterval(this.intervalId)}async _executePoll({chainId:e}){return this.fetchTokenList(e)}async fetchTokenList(e){const t=await this.mutex.acquire();try{const{tokensChainsCache:t}=this.state;let s={};const n=await(0,c.safelyExecute)((()=>i(this,a,"m",o).call(this,e)));if(n)s={...n};else{const a=await(0,c.safelyExecute)((()=>(0,u.fetchTokenListByChainId)(e,this.abortController.signal)));if(a){s={};for(const t of a)s[t.address]={...t,aggregators:(0,m.formatAggregatorNames)(t.aggregators),iconUrl:(0,m.formatIconUrlWithProxy)({chainId:e,tokenAddress:t.address})}}else s={...t[e]?.data||{}}}this.update((()=>({...this.state,tokensChainsCache:{...t,[e]:{timestamp:Date.now(),data:s}}})))}finally{t()}}clearingTokenListData(){this.update((()=>({...this.state,tokensChainsCache:{}})))}updatePreventPollingOnNetworkRestart(e){this.update((()=>({...this.state,preventPollingOnNetworkRestart:e})))}}s.TokenListController=h,a=new WeakSet,n=async function(e){const t=this.messagingSystem.call("NetworkController:getNetworkClientById",e.selectedNetworkClientId),{chainId:s}=t.configuration;this.chainId!==s&&(this.abortController.abort(),this.abortController=new AbortController,this.chainId=s,this.state.preventPollingOnNetworkRestart&&this.clearingTokenListData())},r=async function(){await(0,c.safelyExecute)((()=>this.fetchTokenList(this.chainId))),this.intervalId=setInterval((async()=>{await(0,c.safelyExecute)((()=>this.fetchTokenList(this.chainId)))}),this.intervalDelay)},o=async function(e){const{tokensChainsCache:t}=this.state,s=t[e],a=Date.now();return s?.data&&a-s?.timestamp<this.cacheRefreshThreshold?s.data:null},s.default=h}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenListController.cjs"}],[1347,{"./assetsUtil.cjs":1351,"./crypto-compare-service/index.cjs":1354,"./token-prices-service/codefi-v2.cjs":1359,"@metamask/controller-utils":1468,"@metamask/polling-controller":2289,"@metamask/utils":2815,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y,w,k,A,E,S,C,v,T=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},_=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenRatesController=s.getDefaultTokenRatesControllerState=s.controllerName=void 0;const x=e("@metamask/controller-utils"),I=e("@metamask/polling-controller"),P=e("@metamask/utils"),D=e("lodash"),R=e("./assetsUtil.cjs"),N=e("./crypto-compare-service/index.cjs"),B=e("./token-prices-service/codefi-v2.cjs");var M;async function F({from:e,to:t}){try{return(await(0,N.fetchExchangeRate)(t,e,false)).conversionRate}catch(e){if(e instanceof Error&&e.message.includes("market does not exist for this coin pair"))return null;throw e}}!function(e){e.Active="Active",e.Inactive="Inactive"}(M||(M={})),s.controllerName="TokenRatesController";const O={marketData:{persist:!0,anonymous:!1}};s.getDefaultTokenRatesControllerState=()=>({marketData:{}});class j extends((0,I.StaticIntervalPollingController)()){constructor({interval:e=18e4,disabled:t=!1,tokenPricesService:b,messenger:A,state:E}){super({name:s.controllerName,messenger:A,state:{...(0,s.getDefaultTokenRatesControllerState)(),...E},metadata:O}),a.add(this),n.set(this,void 0),r.set(this,M.Inactive),o.set(this,void 0),i.set(this,{}),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),m.set(this,void 0),u.set(this,void 0),p.set(this,void 0),h.set(this,void 0),this.setIntervalLength(e),T(this,o,b,"f"),T(this,l,t,"f"),T(this,u,e,"f");const{chainId:S,ticker:C}=_(this,a,"m",w).call(this);T(this,d,S,"f"),T(this,m,C,"f"),T(this,c,_(this,a,"m",y).call(this).id,"f");const{allTokens:v,allDetectedTokens:x}=_(this,a,"m",k).call(this);T(this,p,v,"f"),T(this,h,x,"f"),_(this,a,"m",g).call(this),_(this,a,"m",f).call(this)}enable(){T(this,l,!1,"f")}disable(){T(this,l,!0,"f")}async start(){_(this,a,"m",A).call(this),T(this,r,M.Active,"f"),await _(this,a,"m",E).call(this)}stop(){_(this,a,"m",A).call(this),T(this,r,M.Inactive,"f")}async updateExchangeRates(){await this.updateExchangeRatesByChainId({chainId:_(this,d,"f"),nativeCurrency:_(this,m,"f")})}async updateExchangeRatesByChainId({chainId:e,nativeCurrency:t}){if(_(this,l,"f"))return;const s=_(this,a,"m",b).call(this,e),n=`${e}:${t}:${s.length}`;if(n in _(this,i,"f"))return void await _(this,i,"f")[n];const{promise:r,resolve:o,reject:c}=(0,P.createDeferredPromise)({suppressUnhandledRejection:!0});_(this,i,"f")[n]=r;try{const n={[e]:{...await _(this,a,"m",S).call(this,{tokenAddresses:s,chainId:e,nativeCurrency:t})??{}}};this.update((e=>{e.marketData={...e.marketData,...n}})),o()}catch(e){throw c(e),e}finally{delete _(this,i,"f")[n]}}async _executePoll({chainId:e}){const{networkConfigurationsByChainId:t}=this.messagingSystem.call("NetworkController:getState"),s=t[e];s?await this.updateExchangeRatesByChainId({chainId:e,nativeCurrency:s.nativeCurrency}):console.error(`TokenRatesController: No network configuration found for chainId ${e}`)}resetState(){this.update((()=>(0,s.getDefaultTokenRatesControllerState)()))}}s.TokenRatesController=j,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,m=new WeakMap,u=new WeakMap,p=new WeakMap,h=new WeakMap,a=new WeakSet,g=function(){this.messagingSystem.subscribe("TokensController:stateChange",(async({allTokens:e,allDetectedTokens:t})=>{if(_(this,l,"f"))return;const s=[...new Set([...Object.keys(e),...Object.keys(t)])].filter((s=>!(0,D.isEqual)(_(this,p,"f")[s],e[s])||!(0,D.isEqual)(_(this,h,"f")[s],t[s])));T(this,p,e,"f"),T(this,h,t,"f");const{networkConfigurationsByChainId:a}=this.messagingSystem.call("NetworkController:getState");await Promise.allSettled(s.map((async e=>{const t=a[e]?.nativeCurrency;t&&await this.updateExchangeRatesByChainId({chainId:e,nativeCurrency:t})})))}),(({allTokens:e,allDetectedTokens:t})=>({allTokens:e,allDetectedTokens:t})))},f=function(){this.messagingSystem.subscribe("NetworkController:stateChange",(async({selectedNetworkClientId:e},t)=>{const{configuration:{chainId:s,ticker:a}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);_(this,d,"f")===s&&_(this,m,"f")===a||(T(this,d,s,"f"),T(this,m,a,"f"),_(this,r,"f")===M.Active&&await this.updateExchangeRates());for(const e of t)if("remove"===e.op&&"networkConfigurationsByChainId"===e.path[0]){const t=e.path[1];this.update((e=>{delete e.marketData[t]}))}}))},b=function(e){const t=e=>Object.values(e??{}).flatMap((e=>e.map((({address:e})=>(0,x.toChecksumHexAddress)(e))))),s=t(_(this,p,"f")[e]),a=t(_(this,h,"f")[e]);return[...new Set([...s,...a])].sort()},y=function(){return this.messagingSystem.call("AccountsController:getSelectedAccount")},w=function(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),t=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return{chainId:t.configuration.chainId,ticker:t.configuration.ticker}},k=function(){const{allTokens:e,allDetectedTokens:t}=this.messagingSystem.call("TokensController:getState");return{allTokens:e,allDetectedTokens:t}},A=function(){_(this,n,"f")&&clearTimeout(_(this,n,"f"))},E=async function e(){await(0,x.safelyExecute)((()=>this.updateExchangeRates())),T(this,n,setTimeout((()=>{_(this,a,"m",e).call(this)}),_(this,u,"f")),"f")},S=async function({tokenAddresses:e,chainId:t,nativeCurrency:s}){return _(this,o,"f").validateChainIdSupported(t)?_(this,o,"f").validateCurrencySupported(s)?await _(this,a,"m",C).call(this,{tokenAddresses:e,chainId:t,nativeCurrency:s}):await _(this,a,"m",v).call(this,{chainId:t,tokenAddresses:e,nativeCurrency:s}):e.reduce(((e,t)=>e={...e,[t]:undefined}),{})},C=async function({tokenAddresses:e,chainId:t,nativeCurrency:s}){let a;if(a=await(0,R.reduceInBatchesSerially)({values:[...e].sort(),batchSize:R.TOKEN_PRICES_BATCH_SIZE,eachBatch:async(e,a)=>({...e,...await _(this,o,"f").fetchTokenPrices({tokenAddresses:a,chainId:t,currency:s})}),initialResult:{}}),0===e.length){const e=await _(this,o,"f").fetchTokenPrices({tokenAddresses:[],chainId:t,currency:s});a={[(0,B.getNativeTokenAddress)(t)]:{currency:s,...e[(0,B.getNativeTokenAddress)(t)]}}}return Object.entries(a).reduce(((e,[t,s])=>e={...e,[t]:{...s}}),{})},v=async function({chainId:e,tokenAddresses:t,nativeCurrency:s}){const[n,r]=await Promise.all([_(this,a,"m",C).call(this,{tokenAddresses:t,chainId:e,nativeCurrency:x.FALL_BACK_VS_CURRENCY}),F({from:x.FALL_BACK_VS_CURRENCY,to:s})]);if(null===r)return{};const o=e=>e!==undefined&&null!==e?e*r:undefined;return Object.entries(n).reduce(((e,[t,a])=>e={...e,[t]:{...a,currency:s,price:o(a.price),marketCap:o(a.marketCap),allTimeHigh:o(a.allTimeHigh),allTimeLow:o(a.allTimeLow),totalVolume:o(a.totalVolume),high1d:o(a.high1d),low1d:o(a.low1d),dilutedMarketCap:o(a.dilutedMarketCap)}}),{})},s.default=j}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenRatesController.cjs"}],[1348,{"../assetsUtil.cjs":1351,"../token-service.cjs":1361,"@metamask/base-controller":1365},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.TokenSearchDiscoveryDataController=s.getDefaultTokenSearchDiscoveryDataControllerState=s.MAX_TOKEN_DISPLAY_DATA_LENGTH=s.controllerName=void 0;const u=e("@metamask/base-controller"),p=e("../assetsUtil.cjs"),h=e("../token-service.cjs");s.controllerName="TokenSearchDiscoveryDataController",s.MAX_TOKEN_DISPLAY_DATA_LENGTH=10;const g={tokenDisplayData:{persist:!0,anonymous:!1},swapsTokenAddressesByChainId:{persist:!0,anonymous:!1}};function f(){return{tokenDisplayData:[],swapsTokenAddressesByChainId:{}}}s.getDefaultTokenSearchDiscoveryDataControllerState=f;class b extends u.BaseController{constructor({state:e={},messenger:t,tokenPricesService:l,swapsSupportedChainIds:m,fetchTokens:u,fetchSwapsTokensThresholdMs:p}){super({name:s.controllerName,metadata:g,messenger:t,state:{tokenDisplayData:[],swapsTokenAddressesByChainId:{},...e}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),c.set(this,void 0),d(this,n,new AbortController,"f"),d(this,r,l,"f"),d(this,o,m,"f"),d(this,i,u,"f"),d(this,c,p,"f")}async fetchSwapsTokens(e){if(!m(this,o,"f").includes(e))return;const t=this.state.swapsTokenAddressesByChainId[e];if((!t||t.lastFetched<Date.now()-m(this,c,"f"))&&!t?.isFetching)try{this.update((t=>{t.swapsTokenAddressesByChainId[e]?t.swapsTokenAddressesByChainId[e].isFetching=!0:t.swapsTokenAddressesByChainId[e]={lastFetched:Date.now(),addresses:[],isFetching:!0}}));const t=await m(this,i,"f").call(this,e);this.update((s=>{s.swapsTokenAddressesByChainId[e]={lastFetched:Date.now(),addresses:t.map((e=>e.address)),isFetching:!1}}))}catch(e){console.error(e)}}async fetchTokenDisplayData(e,t){let r;await this.fetchSwapsTokens(e);try{r=await(0,h.fetchTokenMetadata)(e,t,m(this,n,"f").signal)}catch(e){if(!(e instanceof Error&&e.message.includes(h.TOKEN_METADATA_NO_SUPPORT_ERROR)))throw e}const{currentCurrency:o}=this.messagingSystem.call("CurrencyRateController:getState");let i;if(r){const s=await m(this,a,"m",l).call(this,e,t);i={found:!0,address:t,chainId:e,currency:o,token:{...r,isERC721:!1,image:(0,p.formatIconUrlWithProxy)({chainId:e,tokenAddress:t})},price:s}}else i={found:!1,address:t,chainId:e,currency:o};this.update((a=>{a.tokenDisplayData=[i,...a.tokenDisplayData.filter((s=>s.address!==t||s.chainId!==e||s.currency!==o))].slice(0,s.MAX_TOKEN_DISPLAY_DATA_LENGTH)}))}}s.TokenSearchDiscoveryDataController=b,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,a=new WeakSet,l=async function(e,t){const{currentCurrency:s}=this.messagingSystem.call("CurrencyRateController:getState");try{return(await m(this,r,"f").fetchTokenPrices({chainId:e,tokenAddresses:[t],currency:s}))[t]??null}catch(e){return console.error(e),null}}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenSearchDiscoveryDataController/TokenSearchDiscoveryDataController.cjs"}],[1349,{"./TokenSearchDiscoveryDataController.cjs":1348},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./TokenSearchDiscoveryDataController.cjs"),s)}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokenSearchDiscoveryDataController/index.cjs"}],[135,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=function(e){if(e.includes(a)){const t=e.slice(a.length);return t.slice(t.indexOf(n)+n.length)}return e};const a="Error: [ethjs-rpc] rpc error with payload ",n="Error: "}}},{package:"$root$",file:"app/scripts/lib/extractEthjsErrorMessage.js"}],[1350,{"./Standards/ERC20Standard.cjs":1341,"./Standards/NftStandards/ERC1155/ERC1155Standard.cjs":1342,"./assetsUtil.cjs":1351,"./token-service.cjs":1361,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/base-controller":1365,"@metamask/contract-metadata":1465,"@metamask/controller-utils":1468,"@metamask/metamask-eth-abis":2055,"@metamask/rpc-errors":2404,"async-mutex":3775,lodash:4718,uuid:5526},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y,w,k,A,E=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},S=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},C=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.TokensController=s.getDefaultTokensState=void 0;const v=e("@ethersproject/contracts"),T=e("@ethersproject/providers"),_=e("@metamask/base-controller"),x=C(e("@metamask/contract-metadata")),I=e("@metamask/controller-utils"),P=e("@metamask/metamask-eth-abis"),D=e("@metamask/rpc-errors"),R=e("async-mutex"),N=e("lodash"),B=e("uuid"),M=e("./assetsUtil.cjs"),F=e("./Standards/ERC20Standard.cjs"),O=e("./Standards/NftStandards/ERC1155/ERC1155Standard.cjs"),j=e("./token-service.cjs"),L={allTokens:{persist:!0,anonymous:!1},allIgnoredTokens:{persist:!0,anonymous:!1},allDetectedTokens:{persist:!0,anonymous:!1}},$="TokensController";s.getDefaultTokensState=()=>({allTokens:{},allIgnoredTokens:{},allDetectedTokens:{}});class U extends _.BaseController{constructor({chainId:e,provider:t,state:u,messenger:p}){super({name:$,metadata:L,messenger:p,state:{...(0,s.getDefaultTokensState)(),...u}}),a.add(this),n.set(this,new R.Mutex),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),c.set(this,void 0),E(this,r,e,"f"),E(this,i,t,"f"),E(this,o,S(this,a,"m",k).call(this).id,"f"),E(this,c,new AbortController,"f"),this.messagingSystem.registerActionHandler(`${$}:addDetectedTokens`,this.addDetectedTokens.bind(this)),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",S(this,a,"m",m).bind(this)),this.messagingSystem.subscribe("NetworkController:networkDidChange",S(this,a,"m",l).bind(this)),this.messagingSystem.subscribe("NetworkController:stateChange",S(this,a,"m",d).bind(this)),this.messagingSystem.subscribe("TokenListController:stateChange",(({tokensChainsCache:e})=>{const{allTokens:t}=this.state,s=S(this,a,"m",A).call(this),n=(0,N.cloneDeep)(t);for(const[t,a]of Object.entries(e)){const e=a?.data||{};if(n[t]&&n[t][s]){const a=n[t][s];for(const[,t]of Object.entries(a)){const s=e[t.address];s&&s.name&&!t.name&&(t.name=s.name)}}}this.update((()=>({...this.state,allTokens:n})))}))}async addToken({address:e,symbol:t,decimals:s,name:o,image:i,interactingAddress:c,networkClientId:l}){const d=S(this,r,"f"),m=await S(this,n,"f").acquire(),{allTokens:h,allIgnoredTokens:g,allDetectedTokens:f}=this.state;let w=d;l&&(w=this.messagingSystem.call("NetworkController:getNetworkClientById",l).configuration.chainId);const k=S(this,a,"m",y).call(this,c);try{e=(0,I.toChecksumHexAddress)(e);const n=h[w]?.[k]||[],c=g[w]?.[k]||[],d=f[w]?.[k]||[],m=[...n],[y,A]=await Promise.all([S(this,a,"m",p).call(this,e,l),S(this,a,"m",u).call(this,e)]);if(!l&&w!==S(this,r,"f"))throw new Error("TokensController Error: Switched networks while adding token");const E={address:e,symbol:t,decimals:s,image:i||(0,M.formatIconUrlWithProxy)({chainId:w,tokenAddress:e}),isERC721:y,aggregators:(0,M.formatAggregatorNames)(A?.aggregators||[]),name:o},C=m.findIndex((t=>t.address.toLowerCase()===e.toLowerCase()));-1!==C?m[C]=E:m.push(E);const v=c.filter((t=>t.toLowerCase()!==e.toLowerCase())),T=d.filter((t=>t.address.toLowerCase()!==e.toLowerCase())),{newAllTokens:_,newAllIgnoredTokens:x,newAllDetectedTokens:P}=S(this,a,"m",b).call(this,{newTokens:m,newIgnoredTokens:v,newDetectedTokens:T,interactingAddress:k,interactingChainId:w}),D={allTokens:_,allIgnoredTokens:x,allDetectedTokens:P};return this.update((e=>{Object.assign(e,D)})),m}finally{m()}}async addTokens(e,t){const s=await S(this,n,"f").acquire(),{allTokens:o,allIgnoredTokens:i,allDetectedTokens:c}=this.state,l={};let d=S(this,r,"f");t&&(d=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId);const m=[...o[d]?.[S(this,a,"m",k).call(this).address]||[],...e].reduce(((e,t)=>(e[t.address]=t,e)),{});try{e.forEach((e=>{const{address:t,symbol:s,decimals:a,image:n,aggregators:r,name:o}=e,i={address:(0,I.toChecksumHexAddress)(t),symbol:s,decimals:a,image:n,aggregators:r,name:o};return m[t]=i,l[t.toLowerCase()]=!0,i}));const t=Object.values(m),s=i[d??S(this,r,"f")]?.[S(this,a,"m",A).call(this)]?.filter((e=>!m[e.toLowerCase()])),n=d?c?.[d]?.[S(this,a,"m",A).call(this)]:[],o=n?.filter((e=>!l[e.address.toLowerCase()])),{newAllTokens:u,newAllDetectedTokens:p,newAllIgnoredTokens:h}=S(this,a,"m",b).call(this,{newTokens:t,newDetectedTokens:o,newIgnoredTokens:s,interactingChainId:d});this.update((e=>{e.allTokens=u,e.allDetectedTokens=p,e.allIgnoredTokens=h}))}finally{s()}}ignoreTokens(e,t){let s=S(this,r,"f");t&&(s=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId);const{allTokens:n,allDetectedTokens:o,allIgnoredTokens:i}=this.state,c={},l=i[s??S(this,r,"f")]?.[S(this,a,"m",A).call(this)]||[];let d=[...l];const m=n[s??S(this,r,"f")]?.[S(this,a,"m",A).call(this)]||[],u=o[s??S(this,r,"f")]?.[S(this,a,"m",A).call(this)]||[],p=e.map((e=>{const t=(0,I.toChecksumHexAddress)(e);return c[e.toLowerCase()]=!0,t}));d=[...l,...p];const h=u.filter((e=>!c[e.address.toLowerCase()])),g=m.filter((e=>!c[e.address.toLowerCase()])),{newAllIgnoredTokens:f,newAllDetectedTokens:y,newAllTokens:w}=S(this,a,"m",b).call(this,{newIgnoredTokens:d,newDetectedTokens:h,newTokens:g,interactingChainId:s});this.update((e=>{e.allIgnoredTokens=f,e.allDetectedTokens=y,e.allTokens=w}))}async addDetectedTokens(e,t){const s=await S(this,n,"f").acquire(),o=t?.chainId??S(this,r,"f"),i=t?.selectedAddress??S(this,a,"m",A).call(this),{allTokens:c,allDetectedTokens:l,allIgnoredTokens:d}=this.state;let m=[...c?.[o]?.[i]??[]],u=[...l?.[o]?.[i]??[]];try{e.forEach((e=>{const{address:t,symbol:s,decimals:a,image:n,aggregators:r,isERC721:c,name:l}=e,p=(0,I.toChecksumHexAddress)(t),h={address:p,symbol:s,decimals:a,image:n,isERC721:c,aggregators:r,name:l},g=m.findIndex((e=>e.address.toLowerCase()===p.toLowerCase()));if(-1!==g)m[g]=h;else{if(-1===(d?.[o]?.[i]?.indexOf(t)??-1)){const e=u.findIndex((e=>e.address.toLowerCase()===p.toLowerCase()));-1!==e?u[e]=h:u.push(h)}}}));const{newAllTokens:t,newAllDetectedTokens:s}=S(this,a,"m",b).call(this,{newTokens:m,newDetectedTokens:u,interactingAddress:i,interactingChainId:o}),n=S(this,a,"m",A).call(this);m=t?.[S(this,r,"f")]?.[n]||[],u=s?.[S(this,r,"f")]?.[n]||[],this.update((e=>{e.allTokens=t,e.allDetectedTokens=s}))}finally{s()}}async updateTokenType(e){const t=await S(this,a,"m",p).call(this,e),s=S(this,r,"f"),n=S(this,a,"m",A).call(this),o=[...this.state.allTokens[s][n]],i=o.findIndex((t=>t.address.toLowerCase()===e.toLowerCase())),c={...o[i],isERC721:t};return o[i]=c,this.update((e=>{e.allTokens[s][n]=o})),c}async watchAsset({asset:e,type:t,interactingAddress:s,networkClientId:n}){if(t!==I.ERC20)throw new Error(`Asset of type ${t} not supported`);if(!e.address)throw D.rpcErrors.invalidParams("Address must be specified");if(!(0,I.isValidHexAddress)(e.address))throw D.rpcErrors.invalidParams(`Invalid address "${e.address}"`);const r=S(this,a,"m",y).call(this,s);if(await S(this,a,"m",p).call(this,e.address,n))throw D.rpcErrors.invalidParams(`Contract ${e.address} must match type ${t}, but was detected as ${I.ERC721}`);const o=S(this,a,"m",h).call(this,n);if(await(0,I.safelyExecute)((()=>new O.ERC1155Standard(o).contractSupportsBase1155Interface(e.address))))throw D.rpcErrors.invalidParams(`Contract ${e.address} must match type ${t}, but was detected as ${I.ERC1155}`);const i=new F.ERC20Standard(o),[c,l,d]=await Promise.all([(0,I.safelyExecute)((()=>i.getTokenName(e.address))),(0,I.safelyExecute)((()=>i.getTokenSymbol(e.address))),(0,I.safelyExecute)((async()=>i.getTokenDecimals(e.address)))]);if(e.name=c,!e.symbol&&!l)throw D.rpcErrors.invalidParams("A symbol is required, but was not found in either the request or contract");if(l!==undefined&&e.symbol!==undefined&&e.symbol.toUpperCase()!==l.toUpperCase())throw D.rpcErrors.invalidParams(`The symbol in the request (${e.symbol}) does not match the symbol in the contract (${l})`);if(e.symbol=l??e.symbol,"string"!=typeof e.symbol)throw D.rpcErrors.invalidParams("Invalid symbol: not a string");if(e.symbol.length>11)throw D.rpcErrors.invalidParams(`Invalid symbol "${e.symbol}": longer than 11 characters`);if(e.decimals===undefined&&d===undefined)throw D.rpcErrors.invalidParams("Decimals are required, but were not found in either the request or contract");if(d!==undefined&&e.decimals!==undefined&&String(e.decimals)!==d)throw D.rpcErrors.invalidParams(`The decimals in the request (${e.decimals}) do not match the decimals in the contract (${d})`);const m=d??e.decimals,u=parseInt(m,10);if(!Number.isInteger(u)||u>36||u<0)throw D.rpcErrors.invalidParams(`Invalid decimals "${m}": must be an integer 0 <= 36`);e.decimals=u;const g={asset:e,id:S(this,a,"m",f).call(this),time:Date.now(),type:t,interactingAddress:r};await S(this,a,"m",w).call(this,g);const{address:b,symbol:k,decimals:A,name:E,image:C}=e;await this.addToken({address:b,symbol:k,decimals:A,name:E,image:C,interactingAddress:g.interactingAddress,networkClientId:n})}clearIgnoredTokens(){this.update((e=>{e.allIgnoredTokens={}}))}resetState(){this.update((()=>(0,s.getDefaultTokensState)()))}}s.TokensController=U,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,a=new WeakSet,l=function({selectedNetworkClientId:e}){const t=this.messagingSystem.call("NetworkController:getNetworkClientById",e),{chainId:s}=t.configuration;S(this,c,"f").abort(),E(this,c,new AbortController,"f"),E(this,r,s,"f")},d=function(e,t){for(const e of t)if("remove"===e.op&&"networkConfigurationsByChainId"===e.path[0]){const t=e.path[1];this.update((e=>{delete e.allTokens[t],delete e.allIgnoredTokens[t],delete e.allDetectedTokens[t]}))}},m=function(e){E(this,o,e.id,"f")},u=async function(e){try{return await(0,j.fetchTokenMetadata)(S(this,r,"f"),e,S(this,c,"f").signal)}catch(e){if(e instanceof Error&&e.message.includes(j.TOKEN_METADATA_NO_SUPPORT_ERROR))return undefined;throw e}},p=async function(e,t){const s=(0,I.toChecksumHexAddress)(e);if(!0===x.default[s]?.erc721)return Promise.resolve(!0);if(!0===x.default[s]?.erc20)return Promise.resolve(!1);const n=S(this,a,"m",g).call(this,e,P.abiERC721,t);try{return await n.supportsInterface(I.ERC721_INTERFACE_ID)}catch(e){return!1}},h=function(e){return new T.Web3Provider(e?this.messagingSystem.call("NetworkController:getNetworkClientById",e).provider:S(this,i,"f"))},g=function(e,t,s){const n=S(this,a,"m",h).call(this,s);return new v.Contract(e,t,n)},f=function(){return(0,B.v1)()},b=function(e){const{newTokens:t,newIgnoredTokens:s,newDetectedTokens:n,interactingAddress:o,interactingChainId:i}=e,{allTokens:c,allIgnoredTokens:l,allDetectedTokens:d}=this.state,m=S(this,a,"m",y).call(this,o),u=i??S(this,r,"f");let p=c;if(t?.length||t&&c&&c[u]&&c[u][m]){const e={...c[u],[m]:t};p={...c,[u]:e}}let h=l;if(s?.length||s&&l&&l[u]&&l[u][m]){const e={...l[u],[m]:s};h={...l,[u]:e}}let g=d;if(n?.length||n&&d&&d[u]&&d[u][m]){const e={...d[u],[m]:n};g={...d,[u]:e}}return{newAllTokens:p,newAllIgnoredTokens:h,newAllDetectedTokens:g}},y=function(e){return e||S(this,a,"m",A).call(this)},w=async function(e){return this.messagingSystem.call("ApprovalController:addRequest",{id:e.id,origin:I.ORIGIN_METAMASK,type:I.ApprovalType.WatchAsset,requestData:{id:e.id,interactingAddress:e.interactingAddress,asset:{address:e.asset.address,decimals:e.asset.decimals,symbol:e.asset.symbol,image:e.asset.image||null}}},!0)},k=function(){return this.messagingSystem.call("AccountsController:getSelectedAccount")},A=function(){const e=this.messagingSystem.call("AccountsController:getAccount",S(this,o,"f"));return e?.address||""},s.default=U}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/TokensController.cjs"}],[1351,{"@metamask/controller-utils":1468,"@metamask/utils":2815,"bn.js":3888,multiformats:4812},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.getKeyByValue=s.fetchTokenContractExchangeRates=s.reduceInBatchesSerially=s.divideIntoBatches=s.ethersBigNumberToBN=s.addUrlProtocolPrefix=s.getFormattedIpfsUrl=s.getIpfsCIDv1AndPath=s.removeIpfsProtocolPrefix=s.isTokenListSupportedForNetwork=s.isTokenDetectionSupportedForNetwork=s.SupportedStakedBalanceNetworks=s.SupportedTokenDetectionNetworks=s.formatIconUrlWithProxy=s.formatAggregatorNames=s.hasNewCollectionFields=s.compareNftMetadata=s.TOKEN_PRICES_BATCH_SIZE=void 0;const n=e("@metamask/controller-utils"),r=e("@metamask/utils"),o=a(e("bn.js"));s.TOKEN_PRICES_BATCH_SIZE=30,s.compareNftMetadata=function(e,t){return["image","backgroundColor","imagePreview","imageThumbnail","imageOriginal","animation","animationOriginal","externalLink","tokenURI","chainId"].reduce(((s,a)=>e[a]&&e[a]!==t[a]?s+1:s),0)>0},s.hasNewCollectionFields=function(e,t){const s=Object.keys(e.collection??{}),a=new Set(Object.keys(t.collection??{}));return s.some((e=>!a.has(e)))};const i={aave:"Aave",bancor:"Bancor",cmc:"CMC",cryptocom:"Crypto.com",coinGecko:"CoinGecko",oneInch:"1inch",paraswap:"Paraswap",pmm:"PMM",zapper:"Zapper",zerion:"Zerion",zeroEx:"0x",synthetix:"Synthetix",yearn:"Yearn",apeswap:"ApeSwap",binanceDex:"BinanceDex",pancakeTop100:"PancakeTop100",pancakeExtended:"PancakeExtended",balancer:"Balancer",quickswap:"QuickSwap",matcha:"Matcha",pangolinDex:"PangolinDex",pangolinDexStableCoin:"PangolinDexStableCoin",pangolinDexAvaxBridge:"PangolinDexAvaxBridge",traderJoe:"TraderJoe",airswapLight:"AirswapLight",kleros:"Kleros"};s.formatAggregatorNames=e=>e.map((e=>i[e]||`${e[0].toUpperCase()}${e.substring(1,e.length)}`));var c,l;function d(e){return Object.values(c).includes(e)}function m(e){if(e.startsWith("ipfs://ipfs/"))return e.replace("ipfs://ipfs/","");if(e.startsWith("ipfs://"))return e.replace("ipfs://","");throw new Error("this method should not be used with non ipfs urls")}async function u(t){const s=m(t),a=s.indexOf("/"),n=-1!==a?s.substring(0,a):s,r=-1!==a?s.substring(a):undefined,{CID:o}=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t}(e("multiformats"));return{cid:o.parse(n).toV1().toString(),path:r}}function p(e){return e.match(/(^http:\/\/)|(^https:\/\/)/u)?e:`https://${e}`}function h(e,{batchSize:t}){const s=[];for(let a=0;a<e.length;a+=t)s.push(e.slice(a,a+t));return s}async function g({values:e,batchSize:t,eachBatch:s,initialResult:a}){const n=h(e,{batchSize:t});let r=a;for(const[e,t]of n.entries())r=await s(r,t,e);return r}s.formatIconUrlWithProxy=({chainId:e,tokenAddress:t})=>`https://static.cx.metamask.io/api/v1/tokenIcons/${(0,n.convertHexToDecimal)(e).toString()}/${t.toLowerCase()}.png`,function(e){e.mainnet="0x1",e.bsc="0x38",e.polygon="0x89",e.avax="0xa86a",e.aurora="0x4e454152",e.linea_goerli="0xe704",e.linea_mainnet="0xe708",e.arbitrum="0xa4b1",e.optimism="0xa",e.base="0x2105",e.zksync="0x144",e.cronos="0x19",e.celo="0xa4ec",e.gnosis="0x64",e.fantom="0xfa",e.polygon_zkevm="0x44d",e.moonbeam="0x504",e.moonriver="0x505"}(c||(s.SupportedTokenDetectionNetworks=c={})),function(e){e.mainnet="0x1",e.holesky="0x4268"}(l||(s.SupportedStakedBalanceNetworks=l={})),s.isTokenDetectionSupportedForNetwork=d,s.isTokenListSupportedForNetwork=function(e){return d(e)},s.removeIpfsProtocolPrefix=m,s.getIpfsCIDv1AndPath=u,s.getFormattedIpfsUrl=async function(e,t,s){const{host:a,protocol:n,origin:r}=new URL(p(e));if(s){const{cid:e,path:s}=await u(t);return`${n}//${e}.ipfs.${a}${s??""}`}return`${r}/ipfs/${m(t)}`},s.addUrlProtocolPrefix=p,s.ethersBigNumberToBN=function(e){return new o.default((0,r.remove0x)(e.toHexString()),"hex")},s.divideIntoBatches=h,s.reduceInBatchesSerially=g,s.fetchTokenContractExchangeRates=async function({tokenPricesService:e,nativeCurrency:t,tokenAddresses:a,chainId:r}){const o=e.validateChainIdSupported(r),i=e.validateCurrencySupported(t);if(!o||!i)return{};const c=await g({values:[...a].sort(),batchSize:s.TOKEN_PRICES_BATCH_SIZE,eachBatch:async(s,a)=>({...s,...await e.fetchTokenPrices({tokenAddresses:a,chainId:r,currency:t})}),initialResult:{}});return Object.entries(c).reduce(((e,[t,s])=>({...e,[(0,n.toChecksumHexAddress)(t)]:s?.price})),{})},s.getKeyByValue=function(e,t){for(const[s,a]of e.entries())if(a===t)return s;return null}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/assetsUtil.cjs"}],[1352,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.Source=void 0,function(e){e.Custom="custom",e.Dapp="dapp",e.Detected="detected"}(a||(s.Source=a={}))}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/constants.cjs"}],[1353,{"../assetsUtil.cjs":1351,"@metamask/controller-utils":1468},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiExchangeRate=s.fetchExchangeRate=void 0;const a=e("@metamask/controller-utils"),n=e("../assetsUtil.cjs"),r=new Map([["MNT","MANTLE"],["OMNI","OMNINET"]]),o="https://min-api.cryptocompare.com";function i(e){if("Error"===e.Response)throw new Error(e.Message)}s.fetchExchangeRate=async function(e,t,s){e=e.toUpperCase(),t=t.toUpperCase(),e=r.get(e)??e,t=r.get(t)??t;const n=await(0,a.handleFetch)(function(e,t,s){return`${o}/data/price?fsym=${t}&tsyms=${e}`+(s&&"USD"!==e.toUpperCase()?",USD":"")}(e,t,s));i(n);const c=Number(n[e.toUpperCase()]),l=Number(n.USD);if(!Number.isFinite(c))throw new Error(`Invalid response for ${e.toUpperCase()}: ${n[e.toUpperCase()]}`);if(s&&!Number.isFinite(l))throw new Error(`Invalid response for usdConversionRate: ${n.USD}`);return{conversionRate:c,usdConversionRate:l}},s.fetchMultiExchangeRate=async function(e,t,s){const c=function(e,t,s=!1){const a=s&&!t.some((e=>"USD"===e.toUpperCase()))?[...t,"USD"]:t,n=new URLSearchParams;n.append("fsyms",e.join(",")),n.append("tsyms",a.join(","));const r=new URL(`${o}/data/pricemulti`);return r.search=n.toString(),r.toString()}(t.map((e=>r.get(e)??e)),[e],s),l=await(0,a.handleFetch)(c);i(l);const d={};for(const[t,a]of Object.entries(l)){const o=(0,n.getKeyByValue)(r,t);d[o?.toLowerCase()??t.toLowerCase()]={[e.toLowerCase()]:a[e.toUpperCase()],...s&&{usd:a.USD}}}return d}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/crypto-compare-service/crypto-compare.cjs"}],[1354,{"./crypto-compare.cjs":1353},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiExchangeRate=s.fetchExchangeRate=void 0;var a=e("./crypto-compare.cjs");Object.defineProperty(s,"fetchExchangeRate",{enumerable:!0,get:function(){return a.fetchExchangeRate}}),Object.defineProperty(s,"fetchMultiExchangeRate",{enumerable:!0,get:function(){return a.fetchMultiExchangeRate}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/crypto-compare-service/index.cjs"}],[1355,{"./AccountTrackerController.cjs":1323,"./AssetsContractController.cjs":1324,"./CurrencyRateController.cjs":1325,"./DeFiPositionsController/DeFiPositionsController.cjs":1326,"./MultichainAssetsController/index.cjs":1330,"./MultichainAssetsRatesController/index.cjs":1334,"./MultichainBalancesController/index.cjs":1336,"./NftController.cjs":1337,"./NftDetectionController.cjs":1338,"./RatesController/index.cjs":1340,"./TokenBalancesController.cjs":1344,"./TokenDetectionController.cjs":1345,"./TokenListController.cjs":1346,"./TokenRatesController.cjs":1347,"./TokenSearchDiscoveryDataController/index.cjs":1349,"./TokensController.cjs":1350,"./assetsUtil.cjs":1351,"./token-prices-service/index.cjs":1360},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),s.DeFiPositionsController=s.TokenSearchDiscoveryDataController=s.getDefaultMultichainAssetsRatesControllerState=s.MultichainAssetsRatesController=s.getDefaultMultichainAssetsControllerState=s.MultichainAssetsController=s.MultichainBalancesController=s.Cryptocurrency=s.RatesController=s.getNativeTokenAddress=s.SUPPORTED_CHAIN_IDS=s.CodefiTokenPricesServiceV2=s.getKeyByValue=s.fetchTokenContractExchangeRates=s.getFormattedIpfsUrl=s.formatIconUrlWithProxy=s.isTokenDetectionSupportedForNetwork=s.TokensController=s.TokenRatesController=s.getDefaultTokenRatesControllerState=s.TokenListController=s.TokenDetectionController=s.TokenBalancesController=s.NftDetectionController=s.NftController=s.getDefaultNftControllerState=s.AssetsContractController=s.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID=s.AccountTrackerController=void 0;var r=e("./AccountTrackerController.cjs");Object.defineProperty(s,"AccountTrackerController",{enumerable:!0,get:function(){return r.AccountTrackerController}});var o=e("./AssetsContractController.cjs");Object.defineProperty(s,"SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID",{enumerable:!0,get:function(){return o.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID}}),Object.defineProperty(s,"AssetsContractController",{enumerable:!0,get:function(){return o.AssetsContractController}}),n(e("./CurrencyRateController.cjs"),s);var i=e("./NftController.cjs");Object.defineProperty(s,"getDefaultNftControllerState",{enumerable:!0,get:function(){return i.getDefaultNftControllerState}}),Object.defineProperty(s,"NftController",{enumerable:!0,get:function(){return i.NftController}});var c=e("./NftDetectionController.cjs");Object.defineProperty(s,"NftDetectionController",{enumerable:!0,get:function(){return c.NftDetectionController}});var l=e("./TokenBalancesController.cjs");Object.defineProperty(s,"TokenBalancesController",{enumerable:!0,get:function(){return l.TokenBalancesController}});var d=e("./TokenDetectionController.cjs");Object.defineProperty(s,"TokenDetectionController",{enumerable:!0,get:function(){return d.TokenDetectionController}});var m=e("./TokenListController.cjs");Object.defineProperty(s,"TokenListController",{enumerable:!0,get:function(){return m.TokenListController}});var u=e("./TokenRatesController.cjs");Object.defineProperty(s,"getDefaultTokenRatesControllerState",{enumerable:!0,get:function(){return u.getDefaultTokenRatesControllerState}}),Object.defineProperty(s,"TokenRatesController",{enumerable:!0,get:function(){return u.TokenRatesController}});var p=e("./TokensController.cjs");Object.defineProperty(s,"TokensController",{enumerable:!0,get:function(){return p.TokensController}});var h=e("./assetsUtil.cjs");Object.defineProperty(s,"isTokenDetectionSupportedForNetwork",{enumerable:!0,get:function(){return h.isTokenDetectionSupportedForNetwork}}),Object.defineProperty(s,"formatIconUrlWithProxy",{enumerable:!0,get:function(){return h.formatIconUrlWithProxy}}),Object.defineProperty(s,"getFormattedIpfsUrl",{enumerable:!0,get:function(){return h.getFormattedIpfsUrl}}),Object.defineProperty(s,"fetchTokenContractExchangeRates",{enumerable:!0,get:function(){return h.fetchTokenContractExchangeRates}}),Object.defineProperty(s,"getKeyByValue",{enumerable:!0,get:function(){return h.getKeyByValue}});var g=e("./token-prices-service/index.cjs");Object.defineProperty(s,"CodefiTokenPricesServiceV2",{enumerable:!0,get:function(){return g.CodefiTokenPricesServiceV2}}),Object.defineProperty(s,"SUPPORTED_CHAIN_IDS",{enumerable:!0,get:function(){return g.SUPPORTED_CHAIN_IDS}}),Object.defineProperty(s,"getNativeTokenAddress",{enumerable:!0,get:function(){return g.getNativeTokenAddress}});var f=e("./RatesController/index.cjs");Object.defineProperty(s,"RatesController",{enumerable:!0,get:function(){return f.RatesController}}),Object.defineProperty(s,"Cryptocurrency",{enumerable:!0,get:function(){return f.Cryptocurrency}});var b=e("./MultichainBalancesController/index.cjs");Object.defineProperty(s,"MultichainBalancesController",{enumerable:!0,get:function(){return b.MultichainBalancesController}});var y=e("./MultichainAssetsController/index.cjs");Object.defineProperty(s,"MultichainAssetsController",{enumerable:!0,get:function(){return y.MultichainAssetsController}}),Object.defineProperty(s,"getDefaultMultichainAssetsControllerState",{enumerable:!0,get:function(){return y.getDefaultMultichainAssetsControllerState}});var w=e("./MultichainAssetsRatesController/index.cjs");Object.defineProperty(s,"MultichainAssetsRatesController",{enumerable:!0,get:function(){return w.MultichainAssetsRatesController}}),Object.defineProperty(s,"getDefaultMultichainAssetsRatesControllerState",{enumerable:!0,get:function(){return w.getDefaultMultichainAssetsRatesControllerState}});var k=e("./TokenSearchDiscoveryDataController/index.cjs");Object.defineProperty(s,"TokenSearchDiscoveryDataController",{enumerable:!0,get:function(){return k.TokenSearchDiscoveryDataController}});var A=e("./DeFiPositionsController/DeFiPositionsController.cjs");Object.defineProperty(s,"DeFiPositionsController",{enumerable:!0,get:function(){return A.DeFiPositionsController}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/index.cjs"}],[1356,{"./multi-chain-accounts.cjs":1357},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchSupportedNetworks=s.fetchMultiChainBalances=void 0;var a=e("./multi-chain-accounts.cjs");Object.defineProperty(s,"fetchMultiChainBalances",{enumerable:!0,get:function(){return a.fetchMultiChainBalances}}),Object.defineProperty(s,"fetchSupportedNetworks",{enumerable:!0,get:function(){return a.fetchSupportedNetworks}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multi-chain-accounts-service/index.cjs"}],[1357,{"@metamask/controller-utils":1468},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchMultiChainBalances=s.fetchSupportedNetworks=s.MULTICHAIN_ACCOUNTS_DOMAIN=void 0;const a=e("@metamask/controller-utils");s.MULTICHAIN_ACCOUNTS_DOMAIN="https://accounts.api.cx.metamask.io";s.fetchSupportedNetworks=async function(){const e=new URL(`${s.MULTICHAIN_ACCOUNTS_DOMAIN}/v1/supportedNetworks`);return(await(0,a.handleFetch)(e)).fullSupport},s.fetchMultiChainBalances=async function(e,t,n){const r=((e,t)=>{const a=new URL(`${s.MULTICHAIN_ACCOUNTS_DOMAIN}/v2/accounts/${e}/balances`);return t?.networks!==undefined&&a.searchParams.append("networks",t.networks),a})(e,{networks:t?.networks?.join()});return await(0,a.handleFetch)(r,{headers:{"x-metamask-clientproduct":`metamask-${n}`}})}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multi-chain-accounts-service/multi-chain-accounts.cjs"}],[1358,{"./assetsUtil.cjs":1351,"@ethersproject/contracts":527},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.multicallOrFallback=void 0;const a=e("@ethersproject/contracts"),n=e("./assetsUtil.cjs"),r={"0x1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaa36a7":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4268":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5e9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b6e6":"0xcA11bde05977b3631167028862bE2a173976CA11","0x18fc4a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a4":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaa37dc":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4ba":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eed":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eee":"0xcA11bde05977b3631167028862bE2a173976CA11","0x66eeb":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15f2249":"0xcA11bde05977b3631167028862bE2a173976CA11","0x89":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13881":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13882":"0xcA11bde05977b3631167028862bE2a173976CA11","0x44d":"0xca11bde05977b3631167028862be2a173976ca11","0x5a2":"0xca11bde05977b3631167028862be2a173976ca11","0x98a":"0xca11bde05977b3631167028862be2a173976ca11","0x64":"0xcA11bde05977b3631167028862bE2a173976CA11","0x27d8":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa86a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa869":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfa2":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfa":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfaf0":"0xca11bde05977b3631167028862be2a173976ca11","0x38":"0xcA11bde05977b3631167028862bE2a173976CA11","0x61":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15eb":"0xcA11bde05977b3631167028862bE2a173976CA11","0xcc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x504":"0xcA11bde05977b3631167028862bE2a173976CA11","0x505":"0xcA11bde05977b3631167028862bE2a173976CA11","0x507":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2a15c308d":"0xca11bde05977b3631167028862be2a173976ca11","0x2a15c3083":"0xca11bde05977b3631167028862be2a173976ca11","0x63564c40":"0xcA11bde05977b3631167028862bE2a173976CA11","0x19":"0xcA11bde05977b3631167028862bE2a173976CA11","0x152":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5535072":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6c1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7a":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13":"0xcA11bde05977b3631167028862bE2a173976CA11","0x10":"0xcA11bde05977b3631167028862bE2a173976CA11","0x72":"0xcA11bde05977b3631167028862bE2a173976CA11","0x120":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4e454152":"0xcA11bde05977b3631167028862bE2a173976CA11","0x250":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5c2359":"0xcA11bde05977b3631167028862bE2a173976CA11","0xec0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x42":"0xcA11bde05977b3631167028862bE2a173976CA11","0x80":"0xcA11bde05977b3631167028862bE2a173976CA11","0x440":"0xcA11bde05977b3631167028862bE2a173976CA11","0x257":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9fe":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd3a0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x84444":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2329":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2328":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6c":"0xcA11bde05977b3631167028862bE2a173976CA11","0x12":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa516":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5afe":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa4ec":"0xcA11bde05977b3631167028862bE2a173976CA11","0xaef3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x116ea":"0xcA11bde05977b3631167028862bE2a173976CA11","0x116e9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2019":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3e9":"0xca11bde05977b3631167028862be2a173976ca11","0x7d1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x141":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4d2":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e14":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1e15":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1251":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7f08":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8ae":"0xcA11bde05977b3631167028862bE2a173976CA11","0x138b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1389":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1388":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f92":"0xcA11bde05977b3631167028862bE2a173976CA11","0x14a33":"0xca11bde05977b3631167028862be2a173976ca11","0x14a34":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2105":"0xca11bde05977b3631167028862be2a173976ca11","0x936":"0xcA11bde05977b3631167028862bE2a173976CA11","0xff":"0xcA11bde05977b3631167028862bE2a173976CA11","0x46a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x46b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x14f":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd2af":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9ac0ce":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe705":"0xca11bde05977b3631167028862be2a173976ca11","0xe704":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe708":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2b6f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x39":"0xcA11bde05977b3631167028862bE2a173976CA11","0x23a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1644":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdea8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3af":"0xcA11bde05977b3631167028862bE2a173976CA11","0x171":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3e7":"0xcA11bde05977b3631167028862bE2a173976CA11","0x76adf1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3b9ac9ff":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2c":"0xca11bde05977b3631167028862be2a173976ca11","0x2e":"0xca11bde05977b3631167028862be2a173976ca11","0x15b3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x82751":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8274f":"0xca11bde05977b3631167028862be2a173976ca11","0x82750":"0xcA11bde05977b3631167028862bE2a173976CA11","0x96f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3cc5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4571":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe99":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7d0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1297":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1d5e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3a14269b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x561bf78b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x235ddd0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3cd156dc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5d456c62":"0xcA11bde05977b3631167028862bE2a173976CA11","0x79f99296":"0xcA11bde05977b3631167028862bE2a173976CA11","0x585eb4b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x507aaa2a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1fc3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x32d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a73":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a72":"0xcA11bde05977b3631167028862bE2a173976CA11","0x8a71":"0xcA11bde05977b3631167028862bE2a173976CA11","0xe9ac0d6":"0xca11bde05977b3631167028862be2a173976ca11","0x1069":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7e5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x53":"0xca11bde05977b3631167028862be2a173976ca11","0x52":"0xca11bde05977b3631167028862be2a173976ca11","0xe298":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x94":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2c6":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2803":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2802":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa9":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c5f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c60":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13a":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4cb2f":"0xdbfa261cd7d17bb40479a0493ad6c0fee435859e","0x7f93":"0xcA11bde05977b3631167028862bE2a173976CA11","0xb660":"0xcA11bde05977b3631167028862bE2a173976CA11","0xb02113d3f":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdad":"0xcA11bde05977b3631167028862bE2a173976CA11","0xdae":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15b38":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15b32":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45c":"0xcA11bde05977b3631167028862bE2a173976CA11","0x45b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x41a6ace":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa729":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f47b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b59":"0xca11bde05977b3631167028862be2a173976ca11","0x1b58":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc3":"0xca11bde05977b3631167028862be2a173976ca11","0x16fd8":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc7":"0xca11bde05977b3631167028862be2a173976ca11","0x405":"0xca11bde05977b3631167028862be2a173976ca11","0x334":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1ce":"0xca11bde05977b3631167028862be2a173976ca11","0x1cf":"0xca11bde05977b3631167028862be2a173976ca11","0xa70e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x868b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa0c71fd":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13e31":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa1337":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f2b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xf63":"0xcA11bde05977b3631167028862bE2a173976CA11","0x144":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x118":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x12c":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x18995f":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0x2b74":"0xF9cda624FBC7e059355ce98a31693d299FACd963","0xfc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x9da":"0xcA11bde05977b3631167028862bE2a173976CA11","0x137":"0xcA11bde05977b3631167028862bE2a173976CA11","0x13ed":"0xcA11bde05977b3631167028862bE2a173976CA11","0x24b1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xba9302":"0xcA11bde05977b3631167028862bE2a173976CA11","0x7c8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x138d5":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6d":"0xcA11bde05977b3631167028862bE2a173976CA11","0x343b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x34a1":"0xcA11bde05977b3631167028862bE2a173976CA11","0x3109":"0xcA11bde05977b3631167028862bE2a173976CA11","0x91b":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa96":"0xcA11bde05977b3631167028862bE2a173976CA11","0x22c3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2be3":"0xcA11bde05977b3631167028862bE2a173976CA11","0xbf03":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b254":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa7b14":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2276":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1b9e":"0xcA11bde05977b3631167028862bE2a173976CA11","0x6a63bb8":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15af3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x15af1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xae3f3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x531":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c61":"0xcA11bde05977b3631167028862bE2a173976CA11","0x28c58":"0xca11bde05977b3631167028862be2a173976ca11","0x1d88":"0xcA11bde05977b3631167028862bE2a173976CA11","0x5b9b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4c7e1":"0xcA11bde05977b3631167028862bE2a173976CA11","0xa53b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1a2b":"0xcA11bde05977b3631167028862bE2a173976CA11","0x406":"0xca11bde05977b3631167028862be2a173976ca11","0x2cef":"0xcA11bde05977b3631167028862bE2a173976CA11","0x18b2":"0xca11bde05977b3631167028862be2a173976ca11","0x182a9":"0xcA11bde05977b3631167028862bE2a173976CA11","0xc4":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfdd":"0xcA11bde05977b3631167028862bE2a173976CA11","0xfde":"0xcA11bde05977b3631167028862bE2a173976CA11","0x99c0a0f":"0xca11bde05977b3631167028862be2a173976ca11","0x22cf":"0xcA11bde05977b3631167028862bE2a173976CA11","0x310c5":"0xca11bde05977b3631167028862be2a173976ca11","0x46f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x659":"0xca11bde05977b3631167028862be2a173976ca11","0x139c968f9":"0xcA11bde05977b3631167028862bE2a173976CA11","0xed88":"0xcA11bde05977b3631167028862bE2a173976CA11","0xd036":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1f3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x31bf8c3":"0xcA11bde05977b3631167028862bE2a173976CA11","0x1cbc67bfdc":"0xcA11bde05977b3631167028862bE2a173976CA11","0x98967f":"0xcA11bde05977b3631167028862bE2a173976CA11","0x4f588":"0xcA11bde05977b3631167028862bE2a173976CA11","0x16db":"0xca11bde05977b3631167028862be2a173976ca11","0x3a":"0xca11bde05977b3631167028862be2a173976ca11","0x59":"0xca11bde05977b3631167028862be2a173976ca11","0x1e0":"0xcA11bde05977b3631167028862bE2a173976CA11","0x2eb":"0xcA11bde05977b3631167028862bE2a173976CA11","0x221":"0xcA11bde05977b3631167028862bE2a173976CA11"},o=[{name:"tryAggregate",type:"function",stateMutability:"payable",inputs:[{name:"requireSuccess",type:"bool"},{name:"calls",type:"tuple[]",components:[{name:"target",type:"address"},{name:"callData",type:"bytes"}]}],outputs:[{name:"returnData",type:"tuple[]",components:[{name:"success",type:"bool"},{name:"returnData",type:"bytes"}]}]}];s.multicallOrFallback=async(e,t,s,i=300,c=20)=>{if(0===e.length)return[];const l=r[t];if(l)try{return await(async(e,t,s,r)=>{const i=new a.Contract(t,o,s);return await(0,n.reduceInBatchesSerially)({values:e,batchSize:r,initialResult:[],eachBatch:async(e,t)=>{const s=t.map((e=>({target:e.contract.address,callData:e.contract.interface.encodeFunctionData(e.contract.interface.functions[e.functionSignature],e.arguments)})));return[...e,...(await i.callStatic.tryAggregate(!1,s)).map(((e,s)=>({success:e.success,value:e.success?t[s].contract.interface.decodeFunctionResult(t[s].functionSignature,e.returnData)[0]:undefined})))]}})})(e,l,s,i)}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"CALL_EXCEPTION"!==e.code)throw e}return await(async(e,t)=>await(0,n.reduceInBatchesSerially)({values:e,batchSize:t,initialResult:[],eachBatch:async(e,t)=>[...e,...(await Promise.allSettled(t.map((e=>e.contract[e.functionSignature](...e.arguments))))).map((e=>({success:"fulfilled"===e.status,value:"fulfilled"===e.status?e.value:undefined})))]}))(e,c)}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/multicall.cjs"}],[1359,{"@metamask/controller-utils":1468,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.CodefiTokenPricesServiceV2=s.SUPPORTED_CHAIN_IDS=s.getNativeTokenAddress=s.ZERO_ADDRESS=s.SUPPORTED_CURRENCIES=void 0;const o=e("@metamask/controller-utils"),i=e("@metamask/utils");s.SUPPORTED_CURRENCIES=["btc","eth","ltc","bch","bnb","eos","xrp","xlm","link","dot","yfi","usd","aed","ars","aud","bdt","bhd","bmd","brl","cad","chf","clp","cny","czk","dkk","eur","gbp","hkd","huf","idr","ils","inr","jpy","krw","kwd","lkr","mmk","mxn","myr","ngn","nok","nzd","php","pkr","pln","rub","sar","sek","sgd","thb","try","twd","uah","vef","vnd","zar","xdr","xag","xau","bits","sats"],s.ZERO_ADDRESS="0x0000000000000000000000000000000000000000";const c={"0x89":"0x0000000000000000000000000000000000001010"};s.getNativeTokenAddress=e=>c[e]??s.ZERO_ADDRESS,s.SUPPORTED_CHAIN_IDS=["0x1","0xa","0x19","0x38","0x39","0x42","0x46","0x52","0x58","0x64","0x6a","0x7a","0x80","0x89","0xfa","0x120","0x141","0x144","0x169","0x440","0x504","0x505","0x1388","0x2105","0x150","0x2710","0xa4b1","0xa4ec","0xa516","0xa86a","0x518af","0x4e454152","0x63564c40","0xe708"];s.CodefiTokenPricesServiceV2=class{constructor({degradedThreshold:e=o.DEFAULT_DEGRADED_THRESHOLD,retries:t=o.DEFAULT_MAX_RETRIES,maximumConsecutiveFailures:s=o.DEFAULT_MAX_CONSECUTIVE_FAILURES,onBreak:i,onDegraded:c,circuitBreakDuration:l=o.DEFAULT_CIRCUIT_BREAK_DURATION}={}){a.set(this,void 0),n(this,a,(0,o.createServicePolicy)({maxRetries:t,maxConsecutiveFailures:s,circuitBreakDuration:l,degradedThreshold:e}),"f"),i&&r(this,a,"f").onBreak(i),c&&r(this,a,"f").onDegraded(c)}onBreak(...e){return r(this,a,"f").onBreak(...e)}onDegraded(...e){return r(this,a,"f").onDegraded(...e)}async fetchTokenPrices({chainId:e,tokenAddresses:t,currency:n}){const c=(0,i.hexToNumber)(e),l=new URL(`https://price.api.cx.metamask.io/v2/chains/${c}/spot-prices`);l.searchParams.append("tokenAddresses",[(0,s.getNativeTokenAddress)(e),...t].join(",")),l.searchParams.append("vsCurrency",n),l.searchParams.append("includeMarketData","true");const d=await r(this,a,"f").execute((()=>(0,o.handleFetch)(l,{headers:{"Cache-Control":"no-cache"}})));return[(0,s.getNativeTokenAddress)(e),...t].reduce(((e,t)=>{const s=t.toLowerCase(),a=d[s];if(!a)return e;const r={tokenAddress:t,currency:n,...a};return{...e,[t]:r}}),{})}validateChainIdSupported(e){const t=s.SUPPORTED_CHAIN_IDS;return"string"==typeof e&&t.includes(e)}validateCurrencySupported(e){const t=s.SUPPORTED_CURRENCIES;return"string"==typeof e&&t.includes(e.toLowerCase())}},a=new WeakMap}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-prices-service/codefi-v2.cjs"}],[136,{"../../_locales/index.json":2,"webextension-polyfill":5559},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.default=async function(){let e;try{e=await a.default.i18n.getAcceptLanguages()}catch(t){e=[]}e||(e=[]);let t=e.map((e=>e.toLowerCase().replace("_","-"))).find((e=>o[e]!==undefined||o[e.split("-")[0]]!==undefined));t!==undefined&&o[t]===undefined&&(t=t.split("-")[0]);return o[t]||"en"};var a=r(e("webextension-polyfill")),n=r(e("../../_locales/index.json"));function r(e){return e&&e.__esModule?e:{default:e}}const o={zh:"zh_CN"};n.default.forEach((e=>{e&&e.code&&(o[e.code.toLowerCase().replace("_","-")]=e.code)}))}}},{package:"$root$",file:"app/scripts/lib/get-first-preferred-lang-code.js"}],[1360,{"./codefi-v2.cjs":1359},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getNativeTokenAddress=s.SUPPORTED_CHAIN_IDS=s.CodefiTokenPricesServiceV2=void 0;var a=e("./codefi-v2.cjs");Object.defineProperty(s,"CodefiTokenPricesServiceV2",{enumerable:!0,get:function(){return a.CodefiTokenPricesServiceV2}}),Object.defineProperty(s,"SUPPORTED_CHAIN_IDS",{enumerable:!0,get:function(){return a.SUPPORTED_CHAIN_IDS}}),Object.defineProperty(s,"getNativeTokenAddress",{enumerable:!0,get:function(){return a.getNativeTokenAddress}})}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-prices-service/index.cjs"}],[1361,{"./assetsUtil.cjs":1351,"@metamask/controller-utils":1468},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchTokenMetadata=s.fetchTokenListByChainId=s.TOKEN_METADATA_NO_SUPPORT_ERROR=s.TOKEN_END_POINT_API=void 0;const a=e("@metamask/controller-utils"),n=e("./assetsUtil.cjs");s.TOKEN_END_POINT_API="https://token.api.cx.metamask.io",s.TOKEN_METADATA_NO_SUPPORT_ERROR="TokenService Error: Network does not support fetchTokenMetadata";async function r(e,t,s){const n={referrer:e,referrerPolicy:"no-referrer-when-downgrade",method:"GET",mode:"cors",signal:t,cache:"default"};n.headers=new window.Headers,n.headers.set("Content-Type","application/json");try{return await(0,a.timeoutFetch)(e,n,s)}catch(e){e instanceof Error&&"AbortError"===e.name&&console.log("Request is aborted")}return undefined}async function o(e){const t=await e.json();if(t?.error)throw new Error(`TokenService Error: ${t.error}`);return t}s.fetchTokenListByChainId=async function(e,t,{timeout:n=1e4}={}){const i=function(e){const t=e===a.ChainId["linea-mainnet"]?1:3;return`${s.TOKEN_END_POINT_API}/tokens/${(0,a.convertHexToDecimal)(e)}?occurrenceFloor=${t}&includeNativeAssets=false&includeTokenFees=false&includeAssetType=false&includeERC20Permit=false&includeStorage=false`}(e),c=await r(i,t,n);if(c){const t=await o(c);return Array.isArray(t)&&e===a.ChainId["linea-mainnet"]?t.filter((e=>e.aggregators.includes("lineaTeam")||e.aggregators.length>=3)):t}return undefined},s.fetchTokenMetadata=async function(e,t,i,{timeout:c=1e4}={}){if(!(0,n.isTokenListSupportedForNetwork)(e))throw new Error(s.TOKEN_METADATA_NO_SUPPORT_ERROR);const l=function(e,t){return`${s.TOKEN_END_POINT_API}/token/${(0,a.convertHexToDecimal)(e)}?address=${t}`}(e,t),d=await r(l,i,c);return d?o(d):undefined}}}},{package:"@metamask/assets-controllers",file:"node_modules/@metamask/assets-controllers/dist/token-service.cjs"}],[1362,{immer:4512},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.getPersistentState=s.getAnonymizedState=s.BaseController=s.isBaseController=void 0;const o=e("immer");(0,o.enablePatches)(),s.isBaseController=function(e){return"object"==typeof e&&null!==e&&"name"in e&&"string"==typeof e.name&&"state"in e&&"object"==typeof e.state&&"metadata"in e&&"object"==typeof e.metadata};function i(e,t,s){return Object.keys(e).reduce(((a,n)=>{try{const r=t[n];if(!r)throw new Error(`No metadata found for '${String(n)}'`);const o=r[s],i=e[n];return"function"==typeof o?a[n]=o(i):o&&(a[n]=i),a}catch(e){return setTimeout((()=>{throw e})),a}}),{})}s.BaseController=class{constructor({messenger:e,metadata:t,name:s,state:r}){a.set(this,void 0),this.messagingSystem=e,this.name=s,n(this,a,(0,o.freeze)(r,!0),"f"),this.metadata=t,this.messagingSystem.registerActionHandler(`${s}:getState`,(()=>this.state)),this.messagingSystem.registerInitialEventPayload({eventType:`${s}:stateChange`,getPayload:()=>[this.state,[]]})}get state(){return r(this,a,"f")}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,s,i]=o.produceWithPatches(r(this,a,"f"),e);return n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,s),{nextState:t,patches:s,inversePatches:i}}applyPatches(e){const t=(0,o.applyPatches)(r(this,a,"f"),e);n(this,a,t,"f"),this.messagingSystem.publish(`${this.name}:stateChange`,t,e)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},a=new WeakMap,s.getAnonymizedState=function(e,t){return i(e,t,"anonymous")},s.getPersistentState=function(e,t){return i(e,t,"persist")}}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/BaseControllerV2.cjs"}],[1363,{"./RestrictedMessenger.cjs":1364},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.Messenger=void 0;const c=e("./RestrictedMessenger.cjs");s.Messenger=class{constructor(){a.set(this,new Map),n.set(this,new Map),r.set(this,new Map),o.set(this,new Map)}registerActionHandler(e,t){if(i(this,a,"f").has(e))throw new Error(`A handler for ${e} has already been registered`);i(this,a,"f").set(e,t)}unregisterActionHandler(e){i(this,a,"f").delete(e)}clearActions(){i(this,a,"f").clear()}call(e,...t){const s=i(this,a,"f").get(e);if(!s)throw new Error(`A handler for ${e} has not been registered`);return s(...t)}registerInitialEventPayload({eventType:e,getPayload:t}){i(this,r,"f").set(e,t)}publish(e,...t){const s=i(this,n,"f").get(e);if(s)for(const[e,a]of s.entries())try{if(a){const s=i(this,o,"f").get(e),n=a(...t);n!==s&&(i(this,o,"f").set(e,n),e(n,s))}else e(...t)}catch(e){setTimeout((()=>{throw e}))}}subscribe(e,t,s){let a=i(this,n,"f").get(e);if(a||(a=new Map,i(this,n,"f").set(e,a)),a.set(t,s),s){const a=i(this,r,"f").get(e);if(a){const e=s(...a());i(this,o,"f").set(t,e)}}}unsubscribe(e,t){const s=i(this,n,"f").get(e);if(!s||!s.has(t))throw new Error(`Subscription not found for event: ${e}`);s.get(t)&&i(this,o,"f").delete(t),s.delete(t)}clearEventSubscriptions(e){i(this,n,"f").delete(e)}clearSubscriptions(){i(this,n,"f").clear()}getRestricted({name:e,allowedActions:t,allowedEvents:s}){return new c.RestrictedMessenger({messenger:this,name:e,allowedActions:t,allowedEvents:s})}},a=new WeakMap,n=new WeakMap,r=new WeakMap,o=new WeakMap}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/Messenger.cjs"}],[1364,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},u=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=void 0;s.RestrictedMessenger=class{constructor({messenger:e,name:t,allowedActions:s,allowedEvents:c}){if(a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),!e)throw new Error("Messenger not provided");m(this,n,e,"f"),m(this,r,t,"f"),m(this,o,s,"f"),m(this,i,c,"f")}registerActionHandler(e,t){if(!u(this,a,"m",d).call(this,e))throw new Error(`Only allowed registering action handlers prefixed by '${u(this,r,"f")}:'`);u(this,n,"f").registerActionHandler(e,t)}unregisterActionHandler(e){if(!u(this,a,"m",d).call(this,e))throw new Error(`Only allowed unregistering action handlers prefixed by '${u(this,r,"f")}:'`);u(this,n,"f").unregisterActionHandler(e)}call(e,...t){if(!u(this,a,"m",l).call(this,e))throw new Error(`Action missing from allow list: ${e}`);return u(this,n,"f").call(e,...t)}registerInitialEventPayload({eventType:e,getPayload:t}){if(!u(this,a,"m",d).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${u(this,r,"f")}:'`);u(this,n,"f").registerInitialEventPayload({eventType:e,getPayload:t})}publish(e,...t){if(!u(this,a,"m",d).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${u(this,r,"f")}:'`);u(this,n,"f").publish(e,...t)}subscribe(e,t,s){if(!u(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);return s?u(this,n,"f").subscribe(e,t,s):u(this,n,"f").subscribe(e,t)}unsubscribe(e,t){if(!u(this,a,"m",c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);u(this,n,"f").unsubscribe(e,t)}clearEventSubscriptions(e){if(!u(this,a,"m",d).call(this,e))throw new Error(`Only allowed clearing events prefixed by '${u(this,r,"f")}:'`);u(this,n,"f").clearEventSubscriptions(e)}},n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function(e){const t=u(this,i,"f");return u(this,a,"m",d).call(this,e)||null!==t&&t.includes(e)},l=function(e){const t=u(this,o,"f");return u(this,a,"m",d).call(this,e)||null!==t&&t.includes(e)},d=function(e){return e.startsWith(`${u(this,r,"f")}:`)}}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/RestrictedMessenger.cjs"}],[1365,{"./BaseControllerV2.cjs":1362,"./Messenger.cjs":1363,"./RestrictedMessenger.cjs":1364},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.RestrictedMessenger=s.Messenger=s.isBaseController=s.getPersistentState=s.getAnonymizedState=s.BaseController=void 0;var a=e("./BaseControllerV2.cjs");Object.defineProperty(s,"BaseController",{enumerable:!0,get:function(){return a.BaseController}}),Object.defineProperty(s,"getAnonymizedState",{enumerable:!0,get:function(){return a.getAnonymizedState}}),Object.defineProperty(s,"getPersistentState",{enumerable:!0,get:function(){return a.getPersistentState}}),Object.defineProperty(s,"isBaseController",{enumerable:!0,get:function(){return a.isBaseController}});var n=e("./Messenger.cjs");Object.defineProperty(s,"Messenger",{enumerable:!0,get:function(){return n.Messenger}});var r=e("./RestrictedMessenger.cjs");Object.defineProperty(s,"RestrictedMessenger",{enumerable:!0,get:function(){return r.RestrictedMessenger}})}}},{package:"@metamask/base-controller",file:"node_modules/@metamask/base-controller/dist/index.cjs"}],[1366,{"./constants/bridge.cjs":1367,"./constants/chains.cjs":1368,"./types.cjs":1372,"./utils/balance.cjs":1373,"./utils/bridge.cjs":1374,"./utils/caip-formatters.cjs":1375,"./utils/fetch.cjs":1376,"./utils/quote.cjs":1377,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/metamask-eth-abis":2055,"@metamask/polling-controller":2289,"@metamask/snaps-utils":1402,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u,p,h,g,f,b,y=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},w=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeController=void 0;const k=e("@ethersproject/contracts"),A=e("@ethersproject/providers"),E=e("@metamask/metamask-eth-abis"),S=e("@metamask/polling-controller"),C=e("@metamask/snaps-utils"),v=e("@metamask/utils"),T=e("./constants/bridge.cjs"),_=e("./constants/chains.cjs"),x=e("./types.cjs"),I=e("./utils/balance.cjs"),P=e("./utils/bridge.cjs"),D=e("./utils/caip-formatters.cjs"),R=e("./utils/fetch.cjs"),N=e("./utils/quote.cjs"),B={bridgeFeatureFlags:{persist:!1,anonymous:!1},quoteRequest:{persist:!1,anonymous:!1},quotes:{persist:!1,anonymous:!1},quotesInitialLoadTime:{persist:!1,anonymous:!1},quotesLastFetched:{persist:!1,anonymous:!1},quotesLoadingStatus:{persist:!1,anonymous:!1},quoteFetchError:{persist:!1,anonymous:!1},quotesRefreshCount:{persist:!1,anonymous:!1}},M="Reset controller state";class F extends((0,S.StaticIntervalPollingController)()){constructor({messenger:e,state:t,clientId:s,getLayer1GasFee:S,fetchFn:F,config:O}){super({name:T.BRIDGE_CONTROLLER_NAME,metadata:B,messenger:e,state:{...(0,P.getDefaultBridgeControllerState)(),...t}}),a.add(this),n.set(this,void 0),r.set(this,void 0),o.set(this,void 0),i.set(this,void 0),c.set(this,void 0),l.set(this,void 0),this._executePoll=async e=>{await w(this,u,"f").call(this,e)},this.updateBridgeQuoteRequestParams=async e=>{this.stopAllPolling(),w(this,n,"f")?.abort("Quote request updated");const t={...T.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest,...e};if(this.update((e=>{e.quoteRequest=t,e.quotes=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes,e.quotesLastFetched=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLastFetched,e.quotesLoadingStatus=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLoadingStatus,e.quoteFetchError=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError,e.quotesRefreshCount=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesRefreshCount,e.quotesInitialLoadTime=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesInitialLoadTime})),(0,N.isValidQuoteRequest)(t)){y(this,r,Date.now(),"f");const s=w(this,a,"m",b).call(this)?.configuration;let n;n=(0,P.isSolanaChainId)(t.srcChainId)?e.insufficientBal:!!s?.rpcUrl?.includes("tenderly")||(e.insufficientBal??!await w(this,d,"f").call(this,t));const o=w(this,a,"m",f).call(this);w(this,m,"f").call(this),this.startPolling({networkClientId:o,updatedQuoteRequest:{...t,insufficientBal:n}})}},d.set(this,(async e=>{const t=w(this,a,"m",g).call(this)?.address,s=(0,D.formatChainIdToHex)(e.srcChainId),n=w(this,a,"m",b).call(this)?.provider,r=(0,D.formatAddressToCaipReference)(e.srcTokenAddress);return n&&t&&r&&e.srcTokenAmount&&s&&await(0,I.hasSufficientBalance)(n,t,r,e.srcTokenAmount,s)})),this.resetState=()=>{this.stopAllPolling(),w(this,n,"f")?.abort(M),this.update((e=>{e.quoteRequest=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest,e.quotesInitialLoadTime=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesInitialLoadTime,e.quotes=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes,e.quotesLastFetched=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLastFetched,e.quotesLoadingStatus=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLoadingStatus,e.quoteFetchError=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError,e.quotesRefreshCount=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesRefreshCount;const t=e.bridgeFeatureFlags;e.bridgeFeatureFlags=t}))},this.setBridgeFeatureFlags=async()=>{const e=await(0,R.fetchBridgeFeatureFlags)(w(this,o,"f"),w(this,c,"f"),w(this,l,"f").customBridgeApiBaseUrl??T.BRIDGE_PROD_API_BASE_URL);this.update((t=>{t.bridgeFeatureFlags=e})),w(this,m,"f").call(this)},m.set(this,(()=>{const{state:e}=this,{srcChainId:t}=e.quoteRequest,s=t?e.bridgeFeatureFlags[x.BridgeFeatureFlagsKey.EXTENSION_CONFIG].chains[(0,D.formatChainIdToCaip)(t)]?.refreshRate:undefined,a=e.bridgeFeatureFlags[x.BridgeFeatureFlagsKey.EXTENSION_CONFIG].refreshRate;this.setIntervalLength(s??a)})),u.set(this,(async({networkClientId:e,updatedQuoteRequest:t})=>{const{bridgeFeatureFlags:s,quotesInitialLoadTime:a,quotesRefreshCount:i}=this.state;w(this,n,"f")?.abort("New quote request"),y(this,n,new AbortController,"f"),this.update((e=>{e.quotesLoadingStatus=x.RequestStatus.LOADING,e.quoteRequest=t,e.quoteFetchError=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteFetchError}));try{const e=await(0,R.fetchBridgeQuotes)(t,w(this,n,"f").signal,w(this,o,"f"),w(this,c,"f"),w(this,l,"f").customBridgeApiBaseUrl??T.BRIDGE_PROD_API_BASE_URL),s=await w(this,p,"f").call(this,e),a=await w(this,h,"f").call(this,e);this.update((t=>{t.quotes=s??a??e,t.quotesLoadingStatus=x.RequestStatus.FETCHED}))}catch(e){const t="AbortError"===e.name;if(e===M||t)return;this.update((t=>{t.quoteFetchError=e instanceof Error?e.message:"Unknown error",t.quotesLoadingStatus=x.RequestStatus.ERROR,t.quotes=T.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes})),console.log("Failed to fetch bridge quotes",e)}finally{const{maxRefreshCount:e}=s[x.BridgeFeatureFlagsKey.EXTENSION_CONFIG],n=i+1;(t.insufficientBal||!t.insufficientBal&&n>=e)&&this.stopAllPolling();const o=Date.now();this.update((e=>{e.quotesInitialLoadTime=1===n&&w(this,r,"f")?o-w(this,r,"f"):a,e.quotesLastFetched=o,e.quotesRefreshCount=n}))}})),p.set(this,(async e=>e.some((({quote:e})=>{const t=(0,D.formatChainIdToCaip)(e.srcChainId);return![_.CHAIN_IDS.OPTIMISM,_.CHAIN_IDS.BASE].map(D.formatChainIdToCaip).includes(t)}))?undefined:await Promise.all(e.map((async e=>{const{quote:t,trade:s,approval:a}=e,n=(0,v.numberToHex)(t.srcChainId),r=e=>({from:e.from,to:e.to,value:e.value,data:e.data,gasLimit:e.gasLimit?.toString()}),o=a?await w(this,i,"f").call(this,{transactionParams:r(a),chainId:n}):"0",c=await w(this,i,"f").call(this,{transactionParams:r(s),chainId:n});return{...e,l1GasFeesInHexWei:(0,P.sumHexes)(o,c)}}))))),h.set(this,(async e=>e.some((({quote:{srcChainId:e}})=>!(0,P.isSolanaChainId)(e)))?undefined:await Promise.all(e.map((async e=>{const{trade:t}=e,s=w(this,a,"m",g).call(this);if(s?.metadata?.snap?.id&&"string"==typeof t){const{value:a}=await this.messagingSystem.call("SnapController:handleRequest",{snapId:s.metadata.snap.id,origin:"metamask",handler:C.HandlerType.OnRpcRequest,request:{method:"getFeeForTransaction",params:{transaction:t,scope:s.options.scope}}});return{...e,solanaFeesInLamports:a}}return e}))))),this.getBridgeERC20Allowance=async(e,t)=>{const s=w(this,a,"m",b).call(this)?.provider;if(!s)throw new Error("No provider found");const n=new A.Web3Provider(s),r=new k.Contract(e,E.abiERC20,n),{address:o}=w(this,a,"m",g).call(this)??{};return(await r.allowance(o,T.METABRIDGE_CHAIN_TO_ADDRESS_MAP[t])).toString()},this.setIntervalLength(T.REFRESH_INTERVAL_MS),y(this,n,new AbortController,"f"),y(this,i,S,"f"),y(this,o,s,"f"),y(this,c,F,"f"),y(this,l,O??{},"f"),this.messagingSystem.registerActionHandler(`${T.BRIDGE_CONTROLLER_NAME}:setBridgeFeatureFlags`,this.setBridgeFeatureFlags.bind(this)),this.messagingSystem.registerActionHandler(`${T.BRIDGE_CONTROLLER_NAME}:updateBridgeQuoteRequestParams`,this.updateBridgeQuoteRequestParams.bind(this)),this.messagingSystem.registerActionHandler(`${T.BRIDGE_CONTROLLER_NAME}:resetState`,this.resetState.bind(this)),this.messagingSystem.registerActionHandler(`${T.BRIDGE_CONTROLLER_NAME}:getBridgeERC20Allowance`,this.getBridgeERC20Allowance.bind(this))}}s.BridgeController=F,n=new WeakMap,r=new WeakMap,o=new WeakMap,i=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,m=new WeakMap,u=new WeakMap,p=new WeakMap,h=new WeakMap,a=new WeakSet,g=function(){return this.messagingSystem.call("AccountsController:getSelectedMultichainAccount")},f=function(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState");return e},b=function(){const e=w(this,a,"m",f).call(this);return this.messagingSystem.call("NetworkController:getNetworkClientById",e)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/bridge-controller.cjs"}],[1367,{"../types.cjs":1372,"./chains.cjs":1368,"@ethersproject/constants":524,"@metamask/keyring-api":1958},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.METABRIDGE_CHAIN_TO_ADDRESS_MAP=s.DEFAULT_BRIDGE_CONTROLLER_STATE=s.DEFAULT_FEATURE_FLAG_CONFIG=s.BRIDGE_CONTROLLER_NAME=s.DEFAULT_MAX_REFRESH_COUNT=s.REFRESH_INTERVAL_MS=s.BRIDGE_MM_FEE_RATE=s.BRIDGE_DEFAULT_SLIPPAGE=s.BRIDGE_PREFERRED_GAS_ESTIMATE=s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=s.BRIDGE_QUOTE_MAX_ETA_SECONDS=s.METABRIDGE_ETHEREUM_ADDRESS=s.ETH_USDT_ADDRESS=s.BridgeClientId=s.BRIDGE_PROD_API_BASE_URL=s.BRIDGE_DEV_API_BASE_URL=s.ALLOWED_BRIDGE_CHAIN_IDS=void 0;const a=e("@ethersproject/constants"),n=e("@metamask/keyring-api"),r=e("./chains.cjs"),o=e("../types.cjs");var i;s.ALLOWED_BRIDGE_CHAIN_IDS=[r.CHAIN_IDS.MAINNET,r.CHAIN_IDS.BSC,r.CHAIN_IDS.POLYGON,r.CHAIN_IDS.ZKSYNC_ERA,r.CHAIN_IDS.AVALANCHE,r.CHAIN_IDS.OPTIMISM,r.CHAIN_IDS.ARBITRUM,r.CHAIN_IDS.LINEA_MAINNET,r.CHAIN_IDS.BASE,n.SolScope.Mainnet],s.BRIDGE_DEV_API_BASE_URL="https://bridge.dev-api.cx.metamask.io",s.BRIDGE_PROD_API_BASE_URL="https://bridge.api.cx.metamask.io",function(e){e.EXTENSION="extension",e.MOBILE="mobile"}(i||(s.BridgeClientId=i={})),s.ETH_USDT_ADDRESS="0xdac17f958d2ee523a2206206994597c13d831ec7",s.METABRIDGE_ETHEREUM_ADDRESS="0x0439e60F02a8900a951603950d8D4527f400C3f1",s.BRIDGE_QUOTE_MAX_ETA_SECONDS=3600,s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=.5,s.BRIDGE_PREFERRED_GAS_ESTIMATE="high",s.BRIDGE_DEFAULT_SLIPPAGE=.5,s.BRIDGE_MM_FEE_RATE=.875,s.REFRESH_INTERVAL_MS=3e4,s.DEFAULT_MAX_REFRESH_COUNT=5,s.BRIDGE_CONTROLLER_NAME="BridgeController",s.DEFAULT_FEATURE_FLAG_CONFIG={refreshRate:s.REFRESH_INTERVAL_MS,maxRefreshCount:s.DEFAULT_MAX_REFRESH_COUNT,support:!1,chains:{}},s.DEFAULT_BRIDGE_CONTROLLER_STATE={bridgeFeatureFlags:{[o.BridgeFeatureFlagsKey.EXTENSION_CONFIG]:s.DEFAULT_FEATURE_FLAG_CONFIG,[o.BridgeFeatureFlagsKey.MOBILE_CONFIG]:s.DEFAULT_FEATURE_FLAG_CONFIG},quoteRequest:{srcTokenAddress:a.AddressZero},quotesInitialLoadTime:null,quotes:[],quotesLastFetched:null,quotesLoadingStatus:null,quoteFetchError:null,quotesRefreshCount:0},s.METABRIDGE_CHAIN_TO_ADDRESS_MAP={[r.CHAIN_IDS.MAINNET]:s.METABRIDGE_ETHEREUM_ADDRESS}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/bridge.cjs"}],[1368,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.NETWORK_TO_NAME_MAP=s.MODE_DISPLAY_NAME=s.MODE_SEPOLIA_DISPLAY_NAME=s.SONEIUM_DISPLAY_NAME=s.INK_DISPLAY_NAME=s.INK_SEPOLIA_DISPLAY_NAME=s.LISK_SEPOLIA_DISPLAY_NAME=s.LISK_DISPLAY_NAME=s.METACHAIN_ONE_DISPLAY_NAME=s.BERACHAIN_DISPLAY_NAME=s.OP_BNB_DISPLAY_NAME=s.SCROLL_SEPOLIA_DISPLAY_NAME=s.SCROLL_DISPLAY_NAME=s.MOONRIVER_DISPLAY_NAME=s.MOONBEAM_DISPLAY_NAME=s.POLYGON_ZKEVM_DISPLAY_NAME=s.CRONOS_DISPLAY_NAME=s.AURORA_DISPLAY_NAME=s.BASE_DISPLAY_NAME=s.ZK_SYNC_ERA_DISPLAY_NAME=s.GNOSIS_DISPLAY_NAME=s.CELO_DISPLAY_NAME=s.PALM_DISPLAY_NAME=s.HARMONY_DISPLAY_NAME=s.FANTOM_DISPLAY_NAME=s.OPTIMISM_DISPLAY_NAME=s.BNB_DISPLAY_NAME=s.ARBITRUM_DISPLAY_NAME=s.AVALANCHE_DISPLAY_NAME=s.POLYGON_DISPLAY_NAME=s.BSC_DISPLAY_NAME=s.LOCALHOST_DISPLAY_NAME=s.LINEA_MAINNET_DISPLAY_NAME=s.LINEA_SEPOLIA_DISPLAY_NAME=s.LINEA_GOERLI_DISPLAY_NAME=s.SEPOLIA_DISPLAY_NAME=s.GOERLI_DISPLAY_NAME=s.MAINNET_DISPLAY_NAME=s.NETWORK_TYPES=s.CHAIN_IDS=void 0,s.CHAIN_IDS={MAINNET:"0x1",GOERLI:"0x5",LOCALHOST:"0x539",BSC:"0x38",BSC_TESTNET:"0x61",OPTIMISM:"0xa",OPTIMISM_TESTNET:"0xaa37dc",OPTIMISM_GOERLI:"0x1a4",BASE:"0x2105",BASE_TESTNET:"0x14a33",OPBNB:"0xcc",OPBNB_TESTNET:"0x15eb",POLYGON:"0x89",POLYGON_TESTNET:"0x13881",AVALANCHE:"0xa86a",AVALANCHE_TESTNET:"0xa869",FANTOM:"0xfa",FANTOM_TESTNET:"0xfa2",CELO:"0xa4ec",ARBITRUM:"0xa4b1",HARMONY:"0x63564c40",PALM:"0x2a15c308d",SEPOLIA:"0xaa36a7",HOLESKY:"0x4268",LINEA_GOERLI:"0xe704",LINEA_SEPOLIA:"0xe705",AMOY:"0x13882",BASE_SEPOLIA:"0x14a34",BLAST_SEPOLIA:"0xa0c71fd",OPTIMISM_SEPOLIA:"0xaa37dc",PALM_TESTNET:"0x2a15c3083",CELO_TESTNET:"0xaef3",ZK_SYNC_ERA_TESTNET:"0x12c",MANTA_SEPOLIA:"0x138b",UNICHAIN_SEPOLIA:"0x515",LINEA_MAINNET:"0xe708",AURORA:"0x4e454152",MOONBEAM:"0x504",MOONBEAM_TESTNET:"0x507",MOONRIVER:"0x505",CRONOS:"0x19",GNOSIS:"0x64",ZKSYNC_ERA:"0x144",TEST_ETH:"0x539",ARBITRUM_GOERLI:"0x66eed",BLAST:"0x13e31",FILECOIN:"0x13a",POLYGON_ZKEVM:"0x44d",SCROLL:"0x82750",SCROLL_SEPOLIA:"0x8274f",WETHIO:"0x4e",CHZ:"0x15b38",NUMBERS:"0x290b",SEI:"0x531",APE_TESTNET:"0x8157",APE_MAINNET:"0x8173",BERACHAIN:"0x138d5",METACHAIN_ONE:"0x1b6e6",ARBITRUM_SEPOLIA:"0x66eee",NEAR:"0x18d",NEAR_TESTNET:"0x18e",B3:"0x208d",B3_TESTNET:"0x7c9",GRAVITY_ALPHA_MAINNET:"0x659",GRAVITY_ALPHA_TESTNET_SEPOLIA:"0x34c1",LISK:"0x46f",LISK_SEPOLIA:"0x106a",INK_SEPOLIA:"0xba5eD",INK:"0xdef1",MODE_SEPOLIA:"0x397",MODE:"0x868b"},s.NETWORK_TYPES={GOERLI:"goerli",LOCALHOST:"localhost",MAINNET:"mainnet",SEPOLIA:"sepolia",LINEA_GOERLI:"linea-goerli",LINEA_SEPOLIA:"linea-sepolia",LINEA_MAINNET:"linea-mainnet"},s.MAINNET_DISPLAY_NAME="Ethereum Mainnet",s.GOERLI_DISPLAY_NAME="Goerli",s.SEPOLIA_DISPLAY_NAME="Sepolia",s.LINEA_GOERLI_DISPLAY_NAME="Linea Goerli",s.LINEA_SEPOLIA_DISPLAY_NAME="Linea Sepolia",s.LINEA_MAINNET_DISPLAY_NAME="Linea Mainnet",s.LOCALHOST_DISPLAY_NAME="Localhost 8545",s.BSC_DISPLAY_NAME="Binance Smart Chain",s.POLYGON_DISPLAY_NAME="Polygon",s.AVALANCHE_DISPLAY_NAME="Avalanche Network C-Chain",s.ARBITRUM_DISPLAY_NAME="Arbitrum One",s.BNB_DISPLAY_NAME="BNB Chain",s.OPTIMISM_DISPLAY_NAME="OP Mainnet",s.FANTOM_DISPLAY_NAME="Fantom Opera",s.HARMONY_DISPLAY_NAME="Harmony Mainnet Shard 0",s.PALM_DISPLAY_NAME="Palm",s.CELO_DISPLAY_NAME="Celo Mainnet",s.GNOSIS_DISPLAY_NAME="Gnosis",s.ZK_SYNC_ERA_DISPLAY_NAME="zkSync Era Mainnet",s.BASE_DISPLAY_NAME="Base Mainnet",s.AURORA_DISPLAY_NAME="Aurora Mainnet",s.CRONOS_DISPLAY_NAME="Cronos",s.POLYGON_ZKEVM_DISPLAY_NAME="Polygon zkEVM",s.MOONBEAM_DISPLAY_NAME="Moonbeam",s.MOONRIVER_DISPLAY_NAME="Moonriver",s.SCROLL_DISPLAY_NAME="Scroll",s.SCROLL_SEPOLIA_DISPLAY_NAME="Scroll Sepolia",s.OP_BNB_DISPLAY_NAME="opBNB",s.BERACHAIN_DISPLAY_NAME="Berachain Artio",s.METACHAIN_ONE_DISPLAY_NAME="Metachain One Mainnet",s.LISK_DISPLAY_NAME="Lisk",s.LISK_SEPOLIA_DISPLAY_NAME="Lisk Sepolia",s.INK_SEPOLIA_DISPLAY_NAME="Ink Sepolia",s.INK_DISPLAY_NAME="Ink Mainnet",s.SONEIUM_DISPLAY_NAME="Soneium Mainnet",s.MODE_SEPOLIA_DISPLAY_NAME="Mode Sepolia",s.MODE_DISPLAY_NAME="Mode Mainnet",s.NETWORK_TO_NAME_MAP={[s.NETWORK_TYPES.GOERLI]:s.GOERLI_DISPLAY_NAME,[s.NETWORK_TYPES.MAINNET]:s.MAINNET_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_GOERLI]:s.LINEA_GOERLI_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_SEPOLIA]:s.LINEA_SEPOLIA_DISPLAY_NAME,[s.NETWORK_TYPES.LINEA_MAINNET]:s.LINEA_MAINNET_DISPLAY_NAME,[s.NETWORK_TYPES.LOCALHOST]:s.LOCALHOST_DISPLAY_NAME,[s.NETWORK_TYPES.SEPOLIA]:s.SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.ARBITRUM]:s.ARBITRUM_DISPLAY_NAME,[s.CHAIN_IDS.AVALANCHE]:s.AVALANCHE_DISPLAY_NAME,[s.CHAIN_IDS.BSC]:s.BSC_DISPLAY_NAME,[s.CHAIN_IDS.BASE]:s.BASE_DISPLAY_NAME,[s.CHAIN_IDS.GOERLI]:s.GOERLI_DISPLAY_NAME,[s.CHAIN_IDS.MAINNET]:s.MAINNET_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_GOERLI]:s.LINEA_GOERLI_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_MAINNET]:s.LINEA_MAINNET_DISPLAY_NAME,[s.CHAIN_IDS.LINEA_SEPOLIA]:s.LINEA_SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.LOCALHOST]:s.LOCALHOST_DISPLAY_NAME,[s.CHAIN_IDS.OPTIMISM]:s.OPTIMISM_DISPLAY_NAME,[s.CHAIN_IDS.POLYGON]:s.POLYGON_DISPLAY_NAME,[s.CHAIN_IDS.SCROLL]:s.SCROLL_DISPLAY_NAME,[s.CHAIN_IDS.SCROLL_SEPOLIA]:s.SCROLL_SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.SEPOLIA]:s.SEPOLIA_DISPLAY_NAME,[s.CHAIN_IDS.OPBNB]:s.OP_BNB_DISPLAY_NAME,[s.CHAIN_IDS.ZKSYNC_ERA]:s.ZK_SYNC_ERA_DISPLAY_NAME,[s.CHAIN_IDS.BERACHAIN]:s.BERACHAIN_DISPLAY_NAME,[s.CHAIN_IDS.METACHAIN_ONE]:s.METACHAIN_ONE_DISPLAY_NAME,[s.CHAIN_IDS.LISK]:s.LISK_DISPLAY_NAME,[s.CHAIN_IDS.LISK_SEPOLIA]:s.LISK_SEPOLIA_DISPLAY_NAME}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/chains.cjs"}],[1369,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SWAPS_API_V2_BASE_URL=void 0,s.SWAPS_API_V2_BASE_URL="https://swap.api.cx.metamask.io"}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/swaps.cjs"}],[1370,{"./chains.cjs":1368,"@metamask/keyring-api":1958},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.SYMBOL_TO_SLIP44_MAP=s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP=void 0;const a=e("@metamask/keyring-api"),n=e("./chains.cjs"),r="0x0000000000000000000000000000000000000000",o=`${a.SolScope.Mainnet}/slip44:501`,i="ETH",c="SOL",l={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},d={symbol:"BNB",name:"Binance Coin",address:r,decimals:18,iconUrl:""},m={symbol:"POL",name:"Polygon",address:r,decimals:18,iconUrl:""},u={symbol:"AVAX",name:"Avalanche",address:r,decimals:18,iconUrl:""},p={symbol:"TESTETH",name:"Test Ether",address:r,decimals:18,iconUrl:""},h={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},g={symbol:i,name:"Ether",address:r,decimals:18,iconUrl:""},f={...l},b={...l},y={...l},w={...l},k={...l},A={symbol:c,name:"Solana",address:o,decimals:9,iconUrl:""};s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP={[n.CHAIN_IDS.MAINNET]:l,"0x539":p,[n.CHAIN_IDS.BSC]:d,[n.CHAIN_IDS.POLYGON]:m,[n.CHAIN_IDS.GOERLI]:h,[n.CHAIN_IDS.SEPOLIA]:g,[n.CHAIN_IDS.AVALANCHE]:u,[n.CHAIN_IDS.OPTIMISM]:b,[n.CHAIN_IDS.ARBITRUM]:f,[n.CHAIN_IDS.ZKSYNC_ERA]:y,[n.CHAIN_IDS.LINEA_MAINNET]:w,[n.CHAIN_IDS.BASE]:k,[a.SolScope.Mainnet]:A},s.SYMBOL_TO_SLIP44_MAP={SOL:"slip44:501",ETH:"slip44:60",POL:"slip44:966",BNB:"slip44:714",AVAX:"slip44:9000",TESTETH:"slip44:60"}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/constants/tokens.cjs"}],[1371,{"./bridge-controller.cjs":1366,"./constants/bridge.cjs":1367,"./constants/swaps.cjs":1369,"./constants/tokens.cjs":1370,"./types.cjs":1372,"./utils/balance.cjs":1373,"./utils/bridge.cjs":1374,"./utils/caip-formatters.cjs":1375,"./utils/fetch.cjs":1376,"./utils/quote.cjs":1377},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.formatAddressToCaipReference=s.formatChainIdToHex=s.formatChainIdToCaip=s.fetchBridgeTokens=s.calcLatestSrcBalance=s.isValidQuoteRequest=s.getDefaultBridgeControllerState=s.getNativeAssetForChainId=s.isSolanaChainId=s.isNativeAddress=s.isEthUsdt=s.getEthUsdtResetData=s.SWAPS_API_V2_BASE_URL=s.SWAPS_CHAINID_DEFAULT_TOKEN_MAP=s.BRIDGE_PROD_API_BASE_URL=s.BRIDGE_DEV_API_BASE_URL=s.METABRIDGE_CHAIN_TO_ADDRESS_MAP=s.DEFAULT_BRIDGE_CONTROLLER_STATE=s.DEFAULT_MAX_REFRESH_COUNT=s.REFRESH_INTERVAL_MS=s.BRIDGE_MM_FEE_RATE=s.BRIDGE_DEFAULT_SLIPPAGE=s.BRIDGE_PREFERRED_GAS_ESTIMATE=s.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE=s.BRIDGE_QUOTE_MAX_ETA_SECONDS=s.BRIDGE_CONTROLLER_NAME=s.BridgeClientId=s.ALLOWED_BRIDGE_CHAIN_IDS=s.FeeType=s.BridgeBackgroundAction=s.BridgeUserAction=s.RequestStatus=s.BridgeFeatureFlagsKey=s.ChainId=s.ActionTypes=s.BridgeFlag=s.SortOrder=s.AssetType=s.BridgeController=void 0;var a=e("./bridge-controller.cjs");Object.defineProperty(s,"BridgeController",{enumerable:!0,get:function(){return a.BridgeController}});var n=e("./types.cjs");Object.defineProperty(s,"AssetType",{enumerable:!0,get:function(){return n.AssetType}}),Object.defineProperty(s,"SortOrder",{enumerable:!0,get:function(){return n.SortOrder}}),Object.defineProperty(s,"BridgeFlag",{enumerable:!0,get:function(){return n.BridgeFlag}}),Object.defineProperty(s,"ActionTypes",{enumerable:!0,get:function(){return n.ActionTypes}}),Object.defineProperty(s,"ChainId",{enumerable:!0,get:function(){return n.ChainId}}),Object.defineProperty(s,"BridgeFeatureFlagsKey",{enumerable:!0,get:function(){return n.BridgeFeatureFlagsKey}}),Object.defineProperty(s,"RequestStatus",{enumerable:!0,get:function(){return n.RequestStatus}}),Object.defineProperty(s,"BridgeUserAction",{enumerable:!0,get:function(){return n.BridgeUserAction}}),Object.defineProperty(s,"BridgeBackgroundAction",{enumerable:!0,get:function(){return n.BridgeBackgroundAction}}),Object.defineProperty(s,"FeeType",{enumerable:!0,get:function(){return n.FeeType}});var r=e("./constants/bridge.cjs");Object.defineProperty(s,"ALLOWED_BRIDGE_CHAIN_IDS",{enumerable:!0,get:function(){return r.ALLOWED_BRIDGE_CHAIN_IDS}}),Object.defineProperty(s,"BridgeClientId",{enumerable:!0,get:function(){return r.BridgeClientId}}),Object.defineProperty(s,"BRIDGE_CONTROLLER_NAME",{enumerable:!0,get:function(){return r.BRIDGE_CONTROLLER_NAME}}),Object.defineProperty(s,"BRIDGE_QUOTE_MAX_ETA_SECONDS",{enumerable:!0,get:function(){return r.BRIDGE_QUOTE_MAX_ETA_SECONDS}}),Object.defineProperty(s,"BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE",{enumerable:!0,get:function(){return r.BRIDGE_QUOTE_MAX_RETURN_DIFFERENCE_PERCENTAGE}}),Object.defineProperty(s,"BRIDGE_PREFERRED_GAS_ESTIMATE",{enumerable:!0,get:function(){return r.BRIDGE_PREFERRED_GAS_ESTIMATE}}),Object.defineProperty(s,"BRIDGE_DEFAULT_SLIPPAGE",{enumerable:!0,get:function(){return r.BRIDGE_DEFAULT_SLIPPAGE}}),Object.defineProperty(s,"BRIDGE_MM_FEE_RATE",{enumerable:!0,get:function(){return r.BRIDGE_MM_FEE_RATE}}),Object.defineProperty(s,"REFRESH_INTERVAL_MS",{enumerable:!0,get:function(){return r.REFRESH_INTERVAL_MS}}),Object.defineProperty(s,"DEFAULT_MAX_REFRESH_COUNT",{enumerable:!0,get:function(){return r.DEFAULT_MAX_REFRESH_COUNT}}),Object.defineProperty(s,"DEFAULT_BRIDGE_CONTROLLER_STATE",{enumerable:!0,get:function(){return r.DEFAULT_BRIDGE_CONTROLLER_STATE}}),Object.defineProperty(s,"METABRIDGE_CHAIN_TO_ADDRESS_MAP",{enumerable:!0,get:function(){return r.METABRIDGE_CHAIN_TO_ADDRESS_MAP}}),Object.defineProperty(s,"BRIDGE_DEV_API_BASE_URL",{enumerable:!0,get:function(){return r.BRIDGE_DEV_API_BASE_URL}}),Object.defineProperty(s,"BRIDGE_PROD_API_BASE_URL",{enumerable:!0,get:function(){return r.BRIDGE_PROD_API_BASE_URL}});var o=e("./constants/tokens.cjs");Object.defineProperty(s,"SWAPS_CHAINID_DEFAULT_TOKEN_MAP",{enumerable:!0,get:function(){return o.SWAPS_CHAINID_DEFAULT_TOKEN_MAP}});var i=e("./constants/swaps.cjs");Object.defineProperty(s,"SWAPS_API_V2_BASE_URL",{enumerable:!0,get:function(){return i.SWAPS_API_V2_BASE_URL}});var c=e("./utils/bridge.cjs");Object.defineProperty(s,"getEthUsdtResetData",{enumerable:!0,get:function(){return c.getEthUsdtResetData}}),Object.defineProperty(s,"isEthUsdt",{enumerable:!0,get:function(){return c.isEthUsdt}}),Object.defineProperty(s,"isNativeAddress",{enumerable:!0,get:function(){return c.isNativeAddress}}),Object.defineProperty(s,"isSolanaChainId",{enumerable:!0,get:function(){return c.isSolanaChainId}}),Object.defineProperty(s,"getNativeAssetForChainId",{enumerable:!0,get:function(){return c.getNativeAssetForChainId}}),Object.defineProperty(s,"getDefaultBridgeControllerState",{enumerable:!0,get:function(){return c.getDefaultBridgeControllerState}});var l=e("./utils/quote.cjs");Object.defineProperty(s,"isValidQuoteRequest",{enumerable:!0,get:function(){return l.isValidQuoteRequest}});var d=e("./utils/balance.cjs");Object.defineProperty(s,"calcLatestSrcBalance",{enumerable:!0,get:function(){return d.calcLatestSrcBalance}});var m=e("./utils/fetch.cjs");Object.defineProperty(s,"fetchBridgeTokens",{enumerable:!0,get:function(){return m.fetchBridgeTokens}});var u=e("./utils/caip-formatters.cjs");Object.defineProperty(s,"formatChainIdToCaip",{enumerable:!0,get:function(){return u.formatChainIdToCaip}}),Object.defineProperty(s,"formatChainIdToHex",{enumerable:!0,get:function(){return u.formatChainIdToHex}}),Object.defineProperty(s,"formatAddressToCaipReference",{enumerable:!0,get:function(){return u.formatAddressToCaipReference}})}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/index.cjs"}],[1372,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l,d,m,u;Object.defineProperty(s,"__esModule",{value:!0}),s.BridgeBackgroundAction=s.BridgeUserAction=s.RequestStatus=s.BridgeFeatureFlagsKey=s.FeeType=s.ChainId=s.ActionTypes=s.BridgeFlag=s.SortOrder=s.AssetType=void 0,function(e){e.native="NATIVE",e.token="TOKEN",e.NFT="NFT",e.unknown="UNKNOWN"}(a||(s.AssetType=a={})),function(e){e.COST_ASC="cost_ascending",e.ETA_ASC="time_descending"}(n||(s.SortOrder=n={})),function(e){e.EXTENSION_CONFIG="extension-config",e.MOBILE_CONFIG="mobile-config"}(r||(s.BridgeFlag=r={})),function(e){e.BRIDGE="bridge",e.SWAP="swap",e.REFUEL="refuel"}(o||(s.ActionTypes=o={})),function(e){e[e.ETH=1]="ETH",e[e.OPTIMISM=10]="OPTIMISM",e[e.BSC=56]="BSC",e[e.POLYGON=137]="POLYGON",e[e.ZKSYNC=324]="ZKSYNC",e[e.BASE=8453]="BASE",e[e.ARBITRUM=42161]="ARBITRUM",e[e.AVALANCHE=43114]="AVALANCHE",e[e.LINEA=59144]="LINEA",e[e.SOLANA=0x416edef1601be]="SOLANA"}(i||(s.ChainId=i={})),function(e){e.METABRIDGE="metabridge",e.REFUEL="refuel"}(c||(s.FeeType=c={})),function(e){e.EXTENSION_CONFIG="extensionConfig",e.MOBILE_CONFIG="mobileConfig"}(l||(s.BridgeFeatureFlagsKey=l={})),function(e){e[e.LOADING=0]="LOADING",e[e.FETCHED=1]="FETCHED",e[e.ERROR=2]="ERROR"}(d||(s.RequestStatus=d={})),function(e){e.SELECT_DEST_NETWORK="selectDestNetwork",e.UPDATE_QUOTE_PARAMS="updateBridgeQuoteRequestParams"}(m||(s.BridgeUserAction=m={})),function(e){e.SET_FEATURE_FLAGS="setBridgeFeatureFlags",e.RESET_STATE="resetState",e.GET_BRIDGE_ERC20_ALLOWANCE="getBridgeERC20Allowance"}(u||(s.BridgeBackgroundAction=u={}))}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/types.cjs"}],[1373,{"./bridge.cjs":1374,"@ethersproject/address":511,"@ethersproject/contracts":527,"@ethersproject/providers":565,"@metamask/metamask-eth-abis":2055},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hasSufficientBalance=s.calcLatestSrcBalance=s.fetchTokenBalance=void 0;const a=e("@ethersproject/address"),n=e("@ethersproject/contracts"),r=e("@ethersproject/providers"),o=e("@metamask/metamask-eth-abis"),i=e("./bridge.cjs");s.fetchTokenBalance=async(e,t,s)=>{const a=new r.Web3Provider(s),i=new n.Contract(e,o.abiERC20,a),c="function"==typeof i?.balanceOf?i.balanceOf(t):Promise.resolve(undefined);return await c};s.calcLatestSrcBalance=async(e,t,n,o)=>{if(n&&o){if((0,i.isNativeAddress)(n)){const s=new r.Web3Provider(e);return await s.getBalance((0,a.getAddress)(t))}return await(0,s.fetchTokenBalance)(n,t,e)}return undefined};s.hasSufficientBalance=async(e,t,a,n,r)=>{const o=await(0,s.calcLatestSrcBalance)(e,t,a,r);return!!o&&o.gte(n)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/balance.cjs"}],[1374,{"../constants/bridge.cjs":1367,"../constants/chains.cjs":1368,"../constants/tokens.cjs":1370,"../types.cjs":1372,"./caip-formatters.cjs":1375,"@ethersproject/constants":524,"@ethersproject/contracts":527,"@metamask/keyring-api":1958,"@metamask/metamask-eth-abis":2055,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isSolanaChainId=s.isNativeAddress=s.isSwapsDefaultTokenSymbol=s.isSwapsDefaultTokenAddress=s.sumHexes=s.isEthUsdt=s.getEthUsdtResetData=s.getNativeAssetForChainId=s.getDefaultBridgeControllerState=void 0;const a=e("@ethersproject/constants"),n=e("@ethersproject/contracts"),r=e("@metamask/keyring-api"),o=e("@metamask/metamask-eth-abis"),i=e("@metamask/utils"),c=e("./caip-formatters.cjs"),l=e("../constants/bridge.cjs"),d=e("../constants/chains.cjs"),m=e("../constants/tokens.cjs"),u=e("../types.cjs");s.getDefaultBridgeControllerState=()=>l.DEFAULT_BRIDGE_CONTROLLER_STATE;const p=(e,t)=>`${(0,c.formatChainIdToCaip)(e)}/${m.SYMBOL_TO_SLIP44_MAP[t]}`;s.getNativeAssetForChainId=e=>{const t=(0,c.formatChainIdToCaip)(e),s=m.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[(0,c.formatChainIdToCaip)(e)]??m.SWAPS_CHAINID_DEFAULT_TOKEN_MAP[(0,c.formatChainIdToHex)(e)];if(!s)throw new Error(`No XChain Swaps native asset found for chainId: ${e}`);return{...s,chainId:(0,c.formatChainIdToDec)(e),assetId:p(t,s.symbol)}};s.getEthUsdtResetData=()=>new n.Contract(l.ETH_USDT_ADDRESS,o.abiERC20).interface.encodeFunctionData("approve",[l.METABRIDGE_ETHEREUM_ADDRESS,"0"]);s.isEthUsdt=(e,t)=>e===d.CHAIN_IDS.MAINNET&&t.toLowerCase()===l.ETH_USDT_ADDRESS.toLowerCase();s.sumHexes=(...e)=>{if(0===e.length)return"0x0";return`0x${e.reduce(((e,t)=>e+BigInt(t)),BigInt(0)).toString(16)}`};s.isSwapsDefaultTokenAddress=(e,t)=>!(!e||!t)&&e===(0,s.getNativeAssetForChainId)(t)?.address;s.isSwapsDefaultTokenSymbol=(e,t)=>!(!e||!t)&&e===(0,s.getNativeAssetForChainId)(t)?.symbol;s.isNativeAddress=e=>e===a.AddressZero||""===e||!e||e.endsWith("11111111111111111111111111111111")||[(0,s.getNativeAssetForChainId)(u.ChainId.SOLANA).assetId].some((t=>t.includes(e)&&!(0,i.isStrictHexString)(e)));s.isSolanaChainId=e=>(0,i.isCaipChainId)(e)?e===r.SolScope.Mainnet.toString():e.toString()===u.ChainId.SOLANA.toString()}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/bridge.cjs"}],[1375,{"../types.cjs":1372,"./bridge.cjs":1374,"@ethersproject/address":511,"@ethersproject/constants":524,"@metamask/controller-utils":1468,"@metamask/keyring-api":1958,"@metamask/multichain-network-controller":1381,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.formatAddressToCaipReference=s.formatChainIdToHex=s.formatChainIdToDec=s.formatChainIdToCaip=void 0;const a=e("@ethersproject/address"),n=e("@ethersproject/constants"),r=e("@metamask/controller-utils"),o=e("@metamask/keyring-api"),i=e("@metamask/multichain-network-controller"),c=e("@metamask/utils"),l=e("./bridge.cjs"),d=e("../types.cjs");s.formatChainIdToCaip=e=>(0,c.isCaipChainId)(e)?e:(0,c.isStrictHexString)(e)?(0,i.toEvmCaipChainId)(e):(0,l.isSolanaChainId)(e)?o.SolScope.Mainnet:(0,i.toEvmCaipChainId)((0,c.numberToHex)(Number(e)));s.formatChainIdToDec=e=>(0,c.isStrictHexString)(e)?(0,r.convertHexToDecimal)(e):e===o.SolScope.Mainnet?d.ChainId.SOLANA:(0,c.isCaipChainId)(e)?Number(e.split(":").at(-1)):"string"==typeof e?parseInt(e,10):e;s.formatChainIdToHex=e=>{if((0,c.isStrictHexString)(e))return e;if("number"==typeof e||parseInt(e,10))return(0,c.numberToHex)(Number(e));if((0,c.isCaipChainId)(e)){const{reference:t}=(0,c.parseCaipChainId)(e);if((0,c.isCaipReference)(t)&&!isNaN(Number(t)))return(0,c.numberToHex)(Number(t))}throw new Error(`Invalid cross-chain swaps chainId: ${e}`)};s.formatAddressToCaipReference=e=>{if((0,c.isStrictHexString)(e))return(0,a.getAddress)(e);if((0,l.isNativeAddress)(e))return n.AddressZero;const t=e.split(":").at(-1);if(!t)throw new Error("Invalid address");return t}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/caip-formatters.cjs"}],[1376,{"../constants/bridge.cjs":1367,"../types.cjs":1372,"./caip-formatters.cjs":1375,"./validators.cjs":1378,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fetchBridgeQuotes=s.fetchBridgeTokens=s.fetchBridgeFeatureFlags=s.getClientIdHeader=void 0;const a=e("@metamask/utils"),n=e("./caip-formatters.cjs"),r=e("./validators.cjs"),o=e("../constants/bridge.cjs"),i=e("../types.cjs"),c=10*a.Duration.Minute;s.getClientIdHeader=e=>({"X-Client-Id":e}),s.fetchBridgeFeatureFlags=async function(e,t,a){const l=`${a}/getAllFeatureFlags`,d=await t(l,{headers:(0,s.getClientIdHeader)(e),cacheOptions:{cacheRefreshTime:c},functionName:"fetchBridgeFeatureFlags"});if((0,r.validateFeatureFlagsResponse)(d)){const e=e=>Object.entries(e).reduce(((e,[t,s])=>({...e,[(0,n.formatChainIdToCaip)(t)]:s})),{});return{[i.BridgeFeatureFlagsKey.EXTENSION_CONFIG]:{...d[i.BridgeFlag.EXTENSION_CONFIG],chains:e(d[i.BridgeFlag.EXTENSION_CONFIG].chains)},[i.BridgeFeatureFlagsKey.MOBILE_CONFIG]:{...d[i.BridgeFlag.MOBILE_CONFIG],chains:e(d[i.BridgeFlag.MOBILE_CONFIG].chains)}}}return{[i.BridgeFeatureFlagsKey.EXTENSION_CONFIG]:o.DEFAULT_FEATURE_FLAG_CONFIG,[i.BridgeFeatureFlagsKey.MOBILE_CONFIG]:o.DEFAULT_FEATURE_FLAG_CONFIG}},s.fetchBridgeTokens=async function(e,t,a,o){const i=`${o}/getTokens?chainId=${(0,n.formatChainIdToDec)(e)}`,l=await a(i,{headers:(0,s.getClientIdHeader)(t),cacheOptions:{cacheRefreshTime:c},functionName:"fetchBridgeTokens"}),d={};return l.forEach((e=>{(0,r.validateSwapsTokenObject)(e)&&(d[e.address]=e)})),d},s.fetchBridgeQuotes=async function(e,t,a,o,i){const c=e.destWalletAddress??e.walletAddress,l={walletAddress:(0,n.formatAddressToCaipReference)(e.walletAddress),destWalletAddress:(0,n.formatAddressToCaipReference)(c),srcChainId:(0,n.formatChainIdToDec)(e.srcChainId),destChainId:(0,n.formatChainIdToDec)(e.destChainId),srcTokenAddress:(0,n.formatAddressToCaipReference)(e.srcTokenAddress),destTokenAddress:(0,n.formatAddressToCaipReference)(e.destTokenAddress),srcTokenAmount:e.srcTokenAmount,insufficientBal:Boolean(e.insufficientBal),resetApproval:Boolean(e.resetApproval)};e.slippage!==undefined&&(l.slippage=e.slippage);const d=new URLSearchParams;Object.entries(l).forEach((([e,t])=>{d.append(e,t.toString())}));const m=`${i}/getQuote?${d}`;return(await o(m,{headers:(0,s.getClientIdHeader)(a),signal:t,cacheOptions:{cacheRefreshTime:0},functionName:"fetchBridgeQuotes"})).filter((e=>(0,r.validateQuoteResponse)(e)))}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/fetch.cjs"}],[1377,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isValidQuoteRequest=void 0;s.isValidQuoteRequest=(e,t=!0)=>{const s=["srcTokenAddress","destTokenAddress","srcChainId","destChainId","walletAddress"];t&&s.push("srcTokenAmount");const a=[];return e.slippage!==undefined&&a.push("slippage"),s.every((t=>t in e&&"string"==typeof e[t]&&e[t]!==undefined&&""!==e[t]&&null!==e[t]))&&a.every((t=>t in e&&"number"==typeof e[t]&&e[t]!==undefined&&!isNaN(Number(e[t]))&&null!==e[t]))&&(!t||Boolean((e.srcTokenAmount??"").match(/^[1-9]\d*$/u)))}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/quote.cjs"}],[1378,{"../types.cjs":1372,"@metamask/controller-utils":1468,"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateQuoteResponse=s.validateSwapsTokenObject=s.validateFeatureFlagsResponse=s.truthyString=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/superstruct"),r=e("@metamask/utils"),o=e("../types.cjs"),i=(0,n.define)("HexAddress",(e=>(0,a.isValidHexAddress)(e,{allowNonPrefixed:!1}))),c=(0,n.define)("HexString",(e=>(0,r.isStrictHexString)(e)));s.truthyString=e=>Boolean(e?.length);const l=(0,n.define)("TruthyDigitString",(e=>(0,s.truthyString)(e)&&Boolean(e.match(/^\d+$/u)))),d=(0,n.number)(),m=(0,n.type)({chainId:d,address:(0,n.string)(),assetId:(0,n.string)(),symbol:(0,n.string)(),name:(0,n.string)(),decimals:(0,n.number)(),icon:(0,n.optional)((0,n.string)()),iconUrl:(0,n.optional)((0,n.string)())});s.validateFeatureFlagsResponse=e=>{const t=(0,n.type)({isActiveSrc:(0,n.boolean)(),isActiveDest:(0,n.boolean)(),refreshRate:(0,n.optional)((0,n.number)()),topAssets:(0,n.optional)((0,n.array)((0,n.string)()))}),s=(0,n.type)({refreshRate:(0,n.number)(),maxRefreshCount:(0,n.number)(),support:(0,n.boolean)(),chains:(0,n.record)((0,n.string)(),t)}),a=(0,n.type)({[o.BridgeFlag.EXTENSION_CONFIG]:s,[o.BridgeFlag.MOBILE_CONFIG]:s});return(0,n.is)(e,a)};s.validateSwapsTokenObject=e=>(0,n.is)(e,m);s.validateQuoteResponse=e=>{const t=(0,n.type)({amount:l,asset:m}),s=(0,n.type)({name:(0,n.string)(),displayName:(0,n.optional)((0,n.string)()),icon:(0,n.optional)((0,n.string)())}),a=(0,n.type)({action:(0,n.enums)(Object.values(o.ActionTypes)),srcChainId:d,destChainId:(0,n.optional)(d),srcAsset:m,destAsset:m,srcAmount:(0,n.string)(),destAmount:(0,n.string)(),protocol:s}),r=a,u=(0,n.type)({requestId:(0,n.string)(),srcChainId:d,srcAsset:m,srcTokenAmount:(0,n.string)(),destChainId:d,destAsset:m,destTokenAmount:(0,n.string)(),feeData:(0,n.record)((0,n.enums)(Object.values(o.FeeType)),t),bridgeId:(0,n.string)(),bridges:(0,n.array)((0,n.string)()),steps:(0,n.array)(a),refuel:(0,n.optional)(r)}),p=(0,n.type)({chainId:(0,n.number)(),to:i,from:i,value:c,data:c,gasLimit:(0,n.nullable)((0,n.number)())}),h=(0,n.type)({quote:u,approval:(0,n.optional)(p),trade:(0,n.union)([p,(0,n.string)()]),estimatedProcessingTimeInSeconds:(0,n.number)()});return(0,n.is)(e,h)}}}},{package:"@metamask/bridge-controller",file:"node_modules/@metamask/bridge-controller/dist/utils/validators.cjs"}],[1379,{"./constants.cjs":1380,"./types.cjs":1382,"./utils.cjs":1383,"@metamask/base-controller":1365,"@metamask/keyring-api":1958,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.MultichainNetworkController=void 0;const d=e("@metamask/base-controller"),m=e("@metamask/keyring-api"),u=e("@metamask/utils"),p=e("./constants.cjs"),h=e("./types.cjs"),g=e("./utils.cjs");class f extends d.BaseController{constructor({messenger:e,state:t}){super({messenger:e,name:h.MULTICHAIN_NETWORK_CONTROLLER_NAME,metadata:p.MULTICHAIN_NETWORK_CONTROLLER_METADATA,state:{...(0,p.getDefaultMultichainNetworkControllerState)(),...t}}),a.add(this),l(this,a,"m",i).call(this),l(this,a,"m",c).call(this)}async setActiveNetwork(e){if((0,u.isCaipChainId)(e)){if(!(0,g.checkIfSupportedCaipChainId)(e))throw new Error(`Unsupported Caip chain ID: ${String(e)}`);return l(this,a,"m",r).call(this,e)}return await l(this,a,"m",n).call(this,e)}}s.MultichainNetworkController=f,a=new WeakSet,n=async function(e){const{selectedNetworkClientId:t}=this.messagingSystem.call("NetworkController:getState"),s=!this.state.isEvmSelected,a=e!==t;(s||a)&&(s&&this.update((e=>{e.isEvmSelected=!0})),a&&await this.messagingSystem.call("NetworkController:setActiveNetwork",e),(s||a)&&this.messagingSystem.publish("MultichainNetworkController:networkDidChange",e))},r=function(e){(e!==this.state.selectedMultichainNetworkChainId||this.state.isEvmSelected)&&(this.update((t=>{t.selectedMultichainNetworkChainId=e,t.isEvmSelected=!1})),this.messagingSystem.publish("MultichainNetworkController:networkDidChange",e))},o=function(e){const{type:t,address:s}=e;if((0,m.isEvmAccountType)(t)){if(this.state.isEvmSelected)return;return void this.update((e=>{e.isEvmSelected=!0}))}const a=(0,g.getChainIdForNonEvmAddress)(s);a===this.state.selectedMultichainNetworkChainId?this.update((e=>{e.isEvmSelected=!1})):this.update((e=>{e.selectedMultichainNetworkChainId=a,e.isEvmSelected=!1}))},i=function(){this.messagingSystem.subscribe("AccountsController:selectedAccountChange",(e=>l(this,a,"m",o).call(this,e)))},c=function(){this.messagingSystem.registerActionHandler("MultichainNetworkController:setActiveNetwork",this.setActiveNetwork.bind(this))}}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/multichain-network-controller/dist/MultichainNetworkController.cjs"}],[1380,{"@metamask/keyring-api":1958,"@metamask/network-controller":2144},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MULTICHAIN_NETWORK_CONTROLLER_METADATA=s.getDefaultMultichainNetworkControllerState=s.NETWORKS_METADATA=s.AVAILABLE_MULTICHAIN_NETWORK_CONFIGURATIONS=s.SOL_NATIVE_ASSET=s.BTC_NATIVE_ASSET=void 0;const a=e("@metamask/keyring-api"),n=e("@metamask/network-controller");s.BTC_NATIVE_ASSET=`${a.BtcScope.Mainnet}/slip44:0`,s.SOL_NATIVE_ASSET=`${a.SolScope.Mainnet}/token:EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v`,s.AVAILABLE_MULTICHAIN_NETWORK_CONFIGURATIONS={[a.BtcScope.Mainnet]:{chainId:a.BtcScope.Mainnet,name:"Bitcoin Mainnet",nativeCurrency:s.BTC_NATIVE_ASSET,isEvm:!1},[a.SolScope.Mainnet]:{chainId:a.SolScope.Mainnet,name:"Solana Mainnet",nativeCurrency:s.SOL_NATIVE_ASSET,isEvm:!1}},s.NETWORKS_METADATA={[a.BtcScope.Mainnet]:{features:[],status:n.NetworkStatus.Available},[a.SolScope.Mainnet]:{features:[],status:n.NetworkStatus.Available}};s.getDefaultMultichainNetworkControllerState=()=>({multichainNetworkConfigurationsByChainId:s.AVAILABLE_MULTICHAIN_NETWORK_CONFIGURATIONS,selectedMultichainNetworkChainId:a.SolScope.Mainnet,isEvmSelected:!0}),s.MULTICHAIN_NETWORK_CONTROLLER_METADATA={multichainNetworkConfigurationsByChainId:{persist:!0,anonymous:!0},selectedMultichainNetworkChainId:{persist:!0,anonymous:!0},isEvmSelected:{persist:!0,anonymous:!0}}}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/multichain-network-controller/dist/constants.cjs"}],[1381,{"./MultichainNetworkController.cjs":1379,"./constants.cjs":1380,"./utils.cjs":1383},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toEvmCaipChainId=s.toMultichainNetworkConfigurationsByChainId=s.toMultichainNetworkConfiguration=s.checkIfSupportedCaipChainId=s.getDefaultMultichainNetworkControllerState=s.MultichainNetworkController=void 0;var a=e("./MultichainNetworkController.cjs");Object.defineProperty(s,"MultichainNetworkController",{enumerable:!0,get:function(){return a.MultichainNetworkController}});var n=e("./constants.cjs");Object.defineProperty(s,"getDefaultMultichainNetworkControllerState",{enumerable:!0,get:function(){return n.getDefaultMultichainNetworkControllerState}});var r=e("./utils.cjs");Object.defineProperty(s,"checkIfSupportedCaipChainId",{enumerable:!0,get:function(){return r.checkIfSupportedCaipChainId}}),Object.defineProperty(s,"toMultichainNetworkConfiguration",{enumerable:!0,get:function(){return r.toMultichainNetworkConfiguration}}),Object.defineProperty(s,"toMultichainNetworkConfigurationsByChainId",{enumerable:!0,get:function(){return r.toMultichainNetworkConfigurationsByChainId}}),Object.defineProperty(s,"toEvmCaipChainId",{enumerable:!0,get:function(){return r.toEvmCaipChainId}})}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/multichain-network-controller/dist/index.cjs"}],[1382,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MULTICHAIN_NETWORK_CONTROLLER_NAME=void 0,s.MULTICHAIN_NETWORK_CONTROLLER_NAME="MultichainNetworkController"}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/multichain-network-controller/dist/types.cjs"}],[1383,{"./constants.cjs":1380,"@metamask/keyring-api":1958,"@metamask/utils":2815,"@solana/addresses":1424},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toMultichainNetworkConfigurationsByChainId=s.toMultichainNetworkConfiguration=s.toEvmCaipChainId=s.checkIfSupportedCaipChainId=s.getChainIdForNonEvmAddress=void 0;const a=e("@metamask/keyring-api"),n=e("@metamask/utils"),r=e("@solana/addresses"),o=e("./constants.cjs");s.getChainIdForNonEvmAddress=function(e){return(0,r.isAddress)(e)?a.SolScope.Mainnet:a.BtcScope.Mainnet},s.checkIfSupportedCaipChainId=function(e){return Object.keys(o.AVAILABLE_MULTICHAIN_NETWORK_CONFIGURATIONS).includes(e)};s.toEvmCaipChainId=e=>(0,n.toCaipChainId)(n.KnownCaipNamespace.Eip155,(0,n.hexToNumber)(e).toString());s.toMultichainNetworkConfiguration=e=>({chainId:(0,s.toEvmCaipChainId)(e.chainId),isEvm:!0,name:e.name,nativeCurrency:e.nativeCurrency,blockExplorerUrls:e.blockExplorerUrls,defaultBlockExplorerUrlIndex:e.defaultBlockExplorerUrlIndex||0});s.toMultichainNetworkConfigurationsByChainId=e=>Object.entries(e).reduce(((e,[,t])=>({...e,[(0,s.toEvmCaipChainId)(t.chainId)]:(0,s.toMultichainNetworkConfiguration)(t)})),{})}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/multichain-network-controller/dist/utils.cjs"}],[1384,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isEqual=void 0,s.isEqual=function(e,t){return e.length===t.length&&e.every(((e,s)=>e===t[s]))}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/array.cjs"}],[1385,{"./base64.cjs":1386,"./constants.cjs":1390,"@metamask/snaps-sdk":2604,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateAuxiliaryFiles=s.encodeAuxiliaryFile=void 0;const a=e("@metamask/snaps-sdk"),n=e("@metamask/utils"),r=e("./base64.cjs"),o=e("./constants.cjs");s.encodeAuxiliaryFile=async function(e,t){if(t===a.AuxiliaryFileEncoding.Base64)return e;const s=await(0,r.decodeBase64)(e);return t===a.AuxiliaryFileEncoding.Utf8?(0,n.bytesToString)(s):(0,n.bytesToHex)(s)},s.validateAuxiliaryFiles=function(e){for(const t of e)(0,n.assert)(t.size<o.MAX_FILE_SIZE,"Static files required by the Snap must be smaller than 64 MB.")}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/auxiliary-files.cjs"}],[1386,{"./bytes.cjs":1387,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeBase64=s.encodeBase64=void 0;const a=e("@metamask/utils"),n=e("./bytes.cjs");s.encodeBase64=async function(e){const t=(0,n.getBytes)(e);return"FileReader"in globalThis?await new Promise(((e,s)=>{const a=Object.assign(new FileReader,{onload:()=>e(a.result.replace("data:application/octet-stream;base64,","")),onerror:()=>s(a.error)});a.readAsDataURL(new File([t],"",{type:"application/octet-stream"}))})):(0,a.bytesToBase64)(t)},s.decodeBase64=async function(e){const t=await fetch(`data:application/octet-stream;base64,${e}`);return new Uint8Array(await t.arrayBuffer())}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/base64.cjs"}],[1387,{"./virtual-file/VirtualFile.cjs":1422,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getBytes=void 0;const a=e("@metamask/utils"),n=e("./virtual-file/VirtualFile.cjs");s.getBytes=function(e){const t=e instanceof n.VirtualFile?e.value:e;return"string"==typeof t?(0,a.stringToBytes)(t):t}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/bytes.cjs"}],[1388,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.SnapCaveatType=void 0,function(e){e.PermittedDerivationPaths="permittedDerivationPaths",e.PermittedCoinTypes="permittedCoinTypes",e.SnapCronjob="snapCronjob",e.TransactionOrigin="transactionOrigin",e.SignatureOrigin="signatureOrigin",e.RpcOrigin="rpcOrigin",e.KeyringOrigin="keyringOrigin",e.SnapIds="snapIds",e.ChainIds="chainIds",e.LookupMatchers="lookupMatchers",e.MaxRequestTime="maxRequestTime",e.ProtocolSnapScopes="protocolSnapScopes"}(a||(s.SnapCaveatType=a={}))}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/caveats.cjs"}],[1389,{"./bytes.cjs":1387,"@metamask/utils":2815,"@noble/hashes/sha256":2865},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.checksumFiles=s.checksum=void 0;const a=e("@metamask/utils"),n=e("@noble/hashes/sha256"),r=e("./bytes.cjs");async function o(e){const t=(0,r.getBytes)(e);return"crypto"in globalThis&&"object"==typeof globalThis.crypto&&crypto.subtle?.digest?new Uint8Array(await crypto.subtle.digest("SHA-256",t)):(0,n.sha256)(t)}s.checksum=o,s.checksumFiles=async function(e){const t=await Promise.all([...e].sort(((e,t)=>((0,a.assert)(e.path!==t.path,"Tried to sort files with non-unique paths."),e.path<t.path?-1:1))).map((async e=>o(e))));return o((0,a.concatBytes)(t))}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/checksum.cjs"}],[1390,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.MAX_FILE_SIZE=void 0,s.MAX_FILE_SIZE=64e6}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/constants.cjs"}],[1391,{"@metamask/superstruct":2737,"@metamask/utils":2815,"cron-parser":4041},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isCronjobSpecificationArray=s.CronjobSpecificationArrayStruct=s.isCronjobSpecification=s.CronjobSpecificationStruct=s.parseCronExpression=s.CronExpressionStruct=s.CronjobRpcRequestStruct=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("cron-parser");s.CronjobRpcRequestStruct=(0,a.object)({jsonrpc:(0,a.optional)(n.JsonRpcVersionStruct),id:(0,a.optional)(n.JsonRpcIdStruct),method:(0,a.string)(),params:(0,a.optional)(n.JsonRpcParamsStruct)}),s.CronExpressionStruct=(0,a.refine)((0,a.string)(),"CronExpression",(e=>{try{return(0,r.parseExpression)(e),!0}catch{return!1}})),s.parseCronExpression=function(e){const t=(0,a.create)(e,s.CronExpressionStruct);return(0,r.parseExpression)(t)},s.CronjobSpecificationStruct=(0,a.object)({expression:s.CronExpressionStruct,request:s.CronjobRpcRequestStruct}),s.isCronjobSpecification=function(e){try{return(0,a.create)(e,s.CronjobSpecificationStruct),!0}catch{return!1}},s.CronjobSpecificationArrayStruct=(0,a.array)(s.CronjobSpecificationStruct),s.isCronjobSpecificationArray=function(e){try{return(0,a.create)(e,s.CronjobSpecificationArrayStruct),!0}catch{return!1}}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/cronjob.cjs"}],[1392,{"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.currency=void 0;const a=e("@metamask/superstruct");s.currency=function(e){const t=e.toLowerCase();return(0,a.coerce)((0,a.literal)(t),(0,a.literal)(e.toUpperCase()),(e=>(0,a.create)(e.toLowerCase(),(0,a.literal)(t))))}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/currency.cjs"}],[1393,{rfdc:5151},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.deepClone=void 0;const n=a(e("rfdc"));s.deepClone=(0,n.default)({proto:!1,circles:!1})}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/deep-clone.cjs"}],[1394,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.DEFAULT_ENDOWMENTS=void 0,s.DEFAULT_ENDOWMENTS=Object.freeze(["atob","btoa","BigInt","console","crypto","Date","Math","setTimeout","clearTimeout","SubtleCrypto","TextDecoder","TextEncoder","URL","URLSearchParams","setInterval","clearInterval","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","isSecureContext","Intl","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","ArrayBuffer","AbortController","AbortSignal"])}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/default-endowments.cjs"}],[1395,{"./array.cjs":1384,"@metamask/slip44":2474},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.getSlip44ProtocolName=s.getSnapDerivationPathName=s.SNAPS_DERIVATION_PATHS=void 0;const n=a(e("@metamask/slip44")),r=e("./array.cjs");function o(e){return"1"===String(e)?"Test Networks":n.default[e]?.name??null}s.SNAPS_DERIVATION_PATHS=[{path:["m","44'","0'"],curve:"ed25519",name:"Test BIP-32 Path (ed25519)"},{path:["m","44'","1'"],curve:"secp256k1",name:"Testnet"},{path:["m","44'","0'"],curve:"secp256k1",name:"Bitcoin Legacy"},{path:["m","49'","0'"],curve:"secp256k1",name:"Bitcoin Nested SegWit"},{path:["m","49'","1'"],curve:"secp256k1",name:"Bitcoin Testnet Nested SegWit"},{path:["m","84'","0'"],curve:"secp256k1",name:"Bitcoin Native SegWit"},{path:["m","84'","1'"],curve:"secp256k1",name:"Bitcoin Testnet Native SegWit"},{path:["m","86'","0'"],curve:"secp256k1",name:"Bitcoin Taproot"},{path:["m","86'","1'"],curve:"secp256k1",name:"Bitcoin Testnet Taproot"},{path:["m","44'","501'"],curve:"ed25519",name:"Solana"},{path:["m","44'","501'","0'","0'"],curve:"ed25519",name:"Solana"},{path:["m","44'","2'"],curve:"secp256k1",name:"Litecoin"},{path:["m","44'","3'"],curve:"secp256k1",name:"Dogecoin"},{path:["m","44'","60'"],curve:"secp256k1",name:"Ethereum"},{path:["m","44'","118'"],curve:"secp256k1",name:"Atom"},{path:["m","44'","145'"],curve:"secp256k1",name:"Bitcoin Cash"},{path:["m","44'","637'"],curve:"ed25519",name:"Aptos"},{path:["m","44'","714'"],curve:"secp256k1",name:"Binance (BNB)"},{path:["m","44'","784'"],curve:"ed25519",name:"Sui"},{path:["m","44'","931'"],curve:"secp256k1",name:"THORChain (RUNE)"},{path:["m","44'","330'"],curve:"secp256k1",name:"Terra (LUNA)"},{path:["m","44'","459'"],curve:"secp256k1",name:"Kava"},{path:["m","44'","529'"],curve:"secp256k1",name:"Secret Network"},{path:["m","44'","397'","0'"],curve:"ed25519",name:"NEAR Protocol"},{path:["m","44'","1'","0'"],curve:"ed25519",name:"Testnet"},{path:["m","44'","472'"],curve:"ed25519",name:"Arweave"},{path:["m","44'","12586'"],curve:"secp256k1",name:"Mina"},{path:["m","44'","242'"],curve:"ed25519",name:"Nimiq"},{path:["m","44'","1729'","0'","0'"],curve:"ed25519",name:"Tezos"},{path:["m","1789'","0'"],curve:"ed25519",name:"Vega"},{path:["m","1852'","1815'"],curve:"ed25519Bip32",name:"Cardano"},{path:["m","44'","508'","0'","0'","0'"],curve:"ed25519",name:"MultiversX"},{path:["m","44'","709'"],curve:"secp256k1",name:"Avail"},{path:["m","44'","626'"],curve:"ed25519",name:"Kadena"},{path:["m","44'","632'"],curve:"ed25519",name:"Massa"}],s.getSnapDerivationPathName=function(e,t){const a=s.SNAPS_DERIVATION_PATHS.find((s=>s.curve===t&&(0,r.isEqual)(s.path,e)));if(a)return a.name;if("secp256k1"===t&&"m"===e[0]&&"44'"===e[1]&&e[2].endsWith("'")){return o(e[2].slice(0,-1))??null}return null},s.getSlip44ProtocolName=o}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/derivation-paths.cjs"}],[1396,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.STATE_ENCRYPTION_MAGIC_VALUE=s.SIP_6_MAGIC_VALUE=void 0,s.SIP_6_MAGIC_VALUE="1399742832'",s.STATE_ENCRYPTION_MAGIC_VALUE="572232532'"}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/entropy.cjs"}],[1397,{"@metamask/rpc-errors":2404,"@metamask/snaps-sdk":2604,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},i=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.unwrapError=s.isWrappedSnapError=s.isSerializedSnapError=s.isSnapError=s.WrappedSnapError=s.SNAP_ERROR_WRAPPER_MESSAGE=s.SNAP_ERROR_WRAPPER_CODE=void 0;const c=e("@metamask/rpc-errors"),l=e("@metamask/snaps-sdk"),d=e("@metamask/utils");s.SNAP_ERROR_WRAPPER_CODE=-31001,s.SNAP_ERROR_WRAPPER_MESSAGE="Wrapped Snap Error";class m extends Error{constructor(e){const t=(0,l.getErrorMessage)(e);super(t),a.set(this,void 0),n.set(this,void 0),r.set(this,void 0),o(this,a,e,"f"),o(this,n,t,"f"),o(this,r,(0,l.getErrorStack)(e),"f")}get name(){return"WrappedSnapError"}get message(){return i(this,n,"f")}get stack(){return i(this,r,"f")}toJSON(){const e=u(i(this,a,"f"))?i(this,a,"f").serialize():(0,c.serializeCause)(i(this,a,"f"));return{code:s.SNAP_ERROR_WRAPPER_CODE,message:s.SNAP_ERROR_WRAPPER_MESSAGE,data:{cause:e}}}serialize(){return this.toJSON()}}function u(e){if((0,d.isObject)(e)&&"serialize"in e&&"function"==typeof e.serialize){const t=e.serialize();return(0,d.isJsonRpcError)(t)&&p(t)}return!1}function p(e){return e.code===l.SNAP_ERROR_CODE&&e.message===l.SNAP_ERROR_MESSAGE}function h(e){return(0,d.isJsonRpcError)(e)&&e.code===s.SNAP_ERROR_WRAPPER_CODE&&e.message===s.SNAP_ERROR_WRAPPER_MESSAGE}function g(e,t,s,a){const n=new c.JsonRpcError(e,t,a);return n.stack=s,n}s.WrappedSnapError=m,a=new WeakMap,n=new WeakMap,r=new WeakMap,s.isSnapError=u,s.isSerializedSnapError=p,s.isWrappedSnapError=h,s.unwrapError=function(e){if(h(e)){if((0,d.isJsonRpcError)(e.data.cause)){if(p(e.data.cause)){const{code:t,message:s,stack:a,data:n}=e.data.cause.data.cause;return[g(t,s,a,n),!0]}const{code:t,message:s,stack:a,data:n}=e.data.cause;return[g(t,s,a,n),!1]}return[g(c.errorCodes.rpc.internal,(0,l.getErrorMessage)(e.data.cause),(0,l.getErrorStack)(e.data.cause)),!1]}if((0,d.isJsonRpcError)(e)){const{code:t,message:s,stack:a,data:n}=e;return[g(t,s,a,n),!1]}return[g(c.errorCodes.rpc.internal,(0,l.getErrorMessage)(e),(0,l.getErrorStack)(e)),!1]}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/errors.cjs"}],[1398,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a;Object.defineProperty(s,"__esModule",{value:!0}),s.SNAP_EXPORT_NAMES=s.HandlerType=void 0,function(e){e.OnRpcRequest="onRpcRequest",e.OnSignature="onSignature",e.OnTransaction="onTransaction",e.OnCronjob="onCronjob",e.OnInstall="onInstall",e.OnUpdate="onUpdate",e.OnNameLookup="onNameLookup",e.OnKeyringRequest="onKeyringRequest",e.OnHomePage="onHomePage",e.OnSettingsPage="onSettingsPage",e.OnUserInput="onUserInput",e.OnAssetsLookup="onAssetsLookup",e.OnAssetsConversion="onAssetsConversion",e.OnProtocolRequest="onProtocolRequest"}(a||(s.HandlerType=a={})),s.SNAP_EXPORT_NAMES=Object.values(a)}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/handler-types.cjs"}],[1399,{"./handler-types.cjs":1398,"@metamask/snaps-sdk":2604,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.OnNameLookupResponseStruct=s.DomainResolutionResponseStruct=s.AddressResolutionResponseStruct=s.DomainResolutionStruct=s.AddressResolutionStruct=s.OnSettingsPageResponseStruct=s.OnHomePageResponseStruct=s.OnHomePageResponseWithIdStruct=s.OnHomePageResponseWithContentStruct=s.OnSignatureResponseStruct=s.OnTransactionResponseStruct=s.OnTransactionResponseWithContentStruct=s.OnTransactionResponseWithIdStruct=s.OnTransactionSeverityResponseStruct=s.SNAP_EXPORTS=void 0;const a=e("@metamask/snaps-sdk"),n=e("@metamask/superstruct"),r=e("./handler-types.cjs");s.SNAP_EXPORTS={[r.HandlerType.OnRpcRequest]:{type:r.HandlerType.OnRpcRequest,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnTransaction]:{type:r.HandlerType.OnTransaction,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnCronjob]:{type:r.HandlerType.OnCronjob,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnNameLookup]:{type:r.HandlerType.OnNameLookup,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnInstall]:{type:r.HandlerType.OnInstall,required:!1,validator:e=>"function"==typeof e},[r.HandlerType.OnUpdate]:{type:r.HandlerType.OnUpdate,required:!1,validator:e=>"function"==typeof e},[r.HandlerType.OnKeyringRequest]:{type:r.HandlerType.OnKeyringRequest,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnHomePage]:{type:r.HandlerType.OnHomePage,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnSettingsPage]:{type:r.HandlerType.OnSettingsPage,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnSignature]:{type:r.HandlerType.OnSignature,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnUserInput]:{type:r.HandlerType.OnUserInput,required:!1,validator:e=>"function"==typeof e},[r.HandlerType.OnAssetsLookup]:{type:r.HandlerType.OnAssetsLookup,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnAssetsConversion]:{type:r.HandlerType.OnAssetsConversion,required:!0,validator:e=>"function"==typeof e},[r.HandlerType.OnProtocolRequest]:{type:r.HandlerType.OnProtocolRequest,required:!0,validator:e=>"function"==typeof e}},s.OnTransactionSeverityResponseStruct=(0,n.object)({severity:(0,n.optional)((0,n.literal)(a.SeverityLevel.Critical))}),s.OnTransactionResponseWithIdStruct=(0,n.assign)(s.OnTransactionSeverityResponseStruct,(0,n.object)({id:(0,n.string)()})),s.OnTransactionResponseWithContentStruct=(0,n.assign)(s.OnTransactionSeverityResponseStruct,(0,n.object)({content:a.ComponentOrElementStruct})),s.OnTransactionResponseStruct=(0,n.nullable)((0,n.union)([s.OnTransactionResponseWithContentStruct,s.OnTransactionResponseWithIdStruct])),s.OnSignatureResponseStruct=s.OnTransactionResponseStruct,s.OnHomePageResponseWithContentStruct=(0,n.object)({content:a.ComponentOrElementStruct}),s.OnHomePageResponseWithIdStruct=(0,n.object)({id:(0,n.string)()}),s.OnHomePageResponseStruct=(0,n.union)([s.OnHomePageResponseWithContentStruct,s.OnHomePageResponseWithIdStruct]),s.OnSettingsPageResponseStruct=s.OnHomePageResponseStruct,s.AddressResolutionStruct=(0,n.object)({protocol:(0,n.string)(),resolvedDomain:(0,n.string)()}),s.DomainResolutionStruct=(0,n.object)({protocol:(0,n.string)(),resolvedAddress:(0,n.string)(),domainName:(0,n.string)()}),s.AddressResolutionResponseStruct=(0,n.object)({resolvedDomains:(0,n.size)((0,n.array)(s.AddressResolutionStruct),1,Infinity)}),s.DomainResolutionResponseStruct=(0,n.object)({resolvedAddresses:(0,n.size)((0,n.array)(s.DomainResolutionStruct),1,Infinity)}),s.OnNameLookupResponseStruct=(0,n.nullable)((0,n.union)([s.AddressResolutionResponseStruct,s.DomainResolutionResponseStruct]))}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/handlers.cjs"}],[1400,{"./svg.cjs":1416,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getSvgDimensions=s.assertIsSnapIcon=s.SVG_MAX_BYTE_SIZE_TEXT=s.SVG_MAX_BYTE_SIZE=void 0;const a=e("@metamask/utils"),n=e("./svg.cjs");s.SVG_MAX_BYTE_SIZE=1e5,s.SVG_MAX_BYTE_SIZE_TEXT=`${Math.floor(s.SVG_MAX_BYTE_SIZE/1e3)}kb`,s.assertIsSnapIcon=function(e){(0,a.assert)(e.path.endsWith(".svg"),'Expected snap icon to end in ".svg".');const t="string"==typeof e.value?(0,a.stringToBytes)(e.value).byteLength:e.value.byteLength;(0,a.assert)(t<=s.SVG_MAX_BYTE_SIZE,`The specified SVG icon exceeds the maximum size of ${s.SVG_MAX_BYTE_SIZE_TEXT}.`),(0,a.assert)((0,n.isSvg)(e.toString()),"Snap icon must be a valid SVG.")},s.getSvgDimensions=function(e){try{const t=(0,n.parseSvg)(e),s=t["@_height"],r=t["@_width"];if(s&&r)return{height:s,width:r};const o=t["@_viewBox"];if(o){const[e,t,s,n]=o.split(" ");if(s&&n){const e=parseInt(s,10),t=parseInt(n,10);return(0,a.assert)(Number.isInteger(e)&&e>0),(0,a.assert)(Number.isInteger(t)&&t>0),{width:e,height:t}}}}catch{throw new Error("Snap icon must be a valid SVG.")}return null}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/icon.cjs"}],[1401,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createWindow=void 0,s.createWindow=async function({uri:e,id:t,sandbox:s=!0,testId:a="snaps-iframe"}){return await new Promise(((n,r)=>{const o=document.createElement("iframe");o.setAttribute("id",t),o.setAttribute("data-testid",a),s&&o.setAttribute("sandbox","allow-scripts"),o.setAttribute("src",e),document.body.appendChild(o),o.addEventListener("load",(()=>{o.contentWindow?n(o.contentWindow):r(new Error(`iframe.contentWindow not present on load for job "${t}".`))}))}))}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/iframe.cjs"}],[1402,{"./array.cjs":1384,"./auxiliary-files.cjs":1385,"./base64.cjs":1386,"./bytes.cjs":1387,"./caveats.cjs":1388,"./checksum.cjs":1389,"./constants.cjs":1390,"./cronjob.cjs":1391,"./currency.cjs":1392,"./deep-clone.cjs":1393,"./default-endowments.cjs":1394,"./derivation-paths.cjs":1395,"./entropy.cjs":1396,"./errors.cjs":1397,"./handler-types.cjs":1398,"./handlers.cjs":1399,"./iframe.cjs":1401,"./json-rpc.cjs":1403,"./json.cjs":1404,"./localization.cjs":1405,"./logging.cjs":1406,"./manifest/index.cjs":1407,"./namespace.cjs":1409,"./path.cjs":1410,"./platform-version.cjs":1411,"./promise.cjs":1412,"./snaps.cjs":1413,"./strings.cjs":1414,"./structs.cjs":1415,"./types.cjs":1417,"./ui.cjs":1418,"./url.cjs":1419,"./validation.cjs":1420,"./versions.cjs":1421,"./virtual-file/index.cjs":1423},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./array.cjs"),s),n(e("./auxiliary-files.cjs"),s),n(e("./base64.cjs"),s),n(e("./bytes.cjs"),s),n(e("./caveats.cjs"),s),n(e("./checksum.cjs"),s),n(e("./constants.cjs"),s),n(e("./cronjob.cjs"),s),n(e("./currency.cjs"),s),n(e("./deep-clone.cjs"),s),n(e("./default-endowments.cjs"),s),n(e("./derivation-paths.cjs"),s),n(e("./entropy.cjs"),s),n(e("./errors.cjs"),s),n(e("./handlers.cjs"),s),n(e("./handler-types.cjs"),s),n(e("./iframe.cjs"),s),n(e("./json.cjs"),s),n(e("./json-rpc.cjs"),s),n(e("./localization.cjs"),s),n(e("./logging.cjs"),s),n(e("./manifest/index.cjs"),s),n(e("./namespace.cjs"),s),n(e("./path.cjs"),s),n(e("./platform-version.cjs"),s),n(e("./snaps.cjs"),s),n(e("./strings.cjs"),s),n(e("./structs.cjs"),s),n(e("./types.cjs"),s),n(e("./ui.cjs"),s),n(e("./url.cjs"),s),n(e("./validation.cjs"),s),n(e("./versions.cjs"),s),n(e("./virtual-file/index.cjs"),s),n(e("./promise.cjs"),s)}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/index.cjs"}],[1403,{"@metamask/permission-controller":2271,"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertIsJsonRpcSuccess=s.isOriginAllowed=s.assertIsKeyringOrigins=s.KeyringOriginsStruct=s.assertIsRpcOrigins=s.RpcOriginsStruct=void 0;const a=e("@metamask/permission-controller"),n=e("@metamask/superstruct"),r=e("@metamask/utils"),o=(0,n.array)((0,n.refine)((0,n.string)(),"Allowed origin",(e=>!(e.split("*").length-1>2)||'No more than two wildcards ("*") are allowed in an origin specifier.')));function i(e,t){if("*"===e||e===t)return!0;const s=function(e){const t=e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&").replace(/\\\*/gu,".*");return RegExp(`^${t}$`,"u")}(e);return s.test(t)}s.RpcOriginsStruct=(0,n.refine)((0,n.object)({dapps:(0,n.optional)((0,n.boolean)()),snaps:(0,n.optional)((0,n.boolean)()),allowedOrigins:(0,n.optional)(o)}),"RPC origins",(e=>!!Boolean(!0===e.snaps||!0===e.dapps||e.allowedOrigins&&e.allowedOrigins.length>0)||"Must specify at least one JSON-RPC origin.")),s.assertIsRpcOrigins=function(e,t){(0,r.assertStruct)(e,s.RpcOriginsStruct,"Invalid JSON-RPC origins",t)},s.KeyringOriginsStruct=(0,n.object)({allowedOrigins:(0,n.optional)(o)}),s.assertIsKeyringOrigins=function(e,t){(0,r.assertStruct)(e,s.KeyringOriginsStruct,"Invalid keyring origins",t)},s.isOriginAllowed=function(e,t,s){return"metamask"===s||(!!e.allowedOrigins?.some((e=>i(e,s)))||(!(t!==a.SubjectType.Website||!e.dapps)||Boolean(t===a.SubjectType.Snap&&e.snaps)))},s.assertIsJsonRpcSuccess=function(e){if(!(0,r.isJsonRpcSuccess)(e)){if((0,r.isJsonRpcFailure)(e))throw new Error(`JSON-RPC request failed: ${e.error.message}`);throw new Error("Invalid JSON-RPC response.")}}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/json-rpc.cjs"}],[1404,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getJsonSizeUnsafe=s.parseJson=void 0;const a=e("@metamask/utils");s.parseJson=function(e){return(0,a.getSafeJson)(JSON.parse(e))},s.getJsonSizeUnsafe=function(e){const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/json.cjs"}],[1405,{"./json.cjs":1404,"@metamask/snaps-sdk":2604,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateSnapManifestLocalizations=s.getLocalizedSnapManifest=s.translate=s.TRANSLATION_REGEX=s.getLocalizationFile=s.getValidatedLocalizationFiles=s.LocalizationFileStruct=s.LOCALIZABLE_FIELDS=void 0;const a=e("@metamask/snaps-sdk"),n=e("@metamask/superstruct"),r=e("./json.cjs");function o(e,t){const s=t.find((t=>t.locale===e));return s||t.find((e=>"en"===e.locale))}function i(e,t){const a=e.matchAll(s.TRANSLATION_REGEX);return Array.from(a).reduce(((s,[a,n])=>{if(!t)throw new Error(`Failed to translate "${e}": No localization file found.`);const r=t.messages[n.trim()];if(!r)throw new Error(`Failed to translate "${e}": No translation found for "${n.trim()}" in "${t.locale}" file.`);return s.replace(a,r.message)}),e)}function c(e,t,a){const n=o(t,a);return s.LOCALIZABLE_FIELDS.reduce(((e,t)=>{const s=i(e[t],n);return{...e,[t]:s}}),e)}s.LOCALIZABLE_FIELDS=["description","proposedName"],s.LocalizationFileStruct=(0,n.object)({locale:(0,n.string)(),messages:(0,n.record)((0,n.string)(),(0,n.object)({message:(0,n.string)(),description:(0,n.optional)((0,n.string)())}))}),s.getValidatedLocalizationFiles=function(e){for(const t of e)try{t.result=(0,n.create)((0,r.parseJson)(t.toString()),s.LocalizationFileStruct)}catch(e){if(e instanceof n.StructError)throw new Error(`Failed to validate localization file "${t.path}": ${e.message}.`);if(e instanceof SyntaxError)throw new Error(`Failed to parse localization file "${t.path}" as JSON.`);throw e}return e},s.getLocalizationFile=o,s.TRANSLATION_REGEX=/\{\{\s?([a-zA-Z0-9-_\s]+)\s?\}\}/gu,s.translate=i,s.getLocalizedSnapManifest=c,s.validateSnapManifestLocalizations=function(e,t){try{t.filter((e=>"en"!==e.locale)).forEach((s=>{c(e,s.locale,t)})),c(e,"en",t)}catch(e){throw new Error(`Failed to localize Snap manifest: ${(0,a.getErrorMessage)(e)}`)}}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/localization.cjs"}],[1406,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.logWarning=s.logError=s.logInfo=s.snapsLogger=void 0;const a=e("@metamask/utils");s.snapsLogger=(0,a.createProjectLogger)("snaps"),s.logInfo=function(e,...t){console.log(e,...t)},s.logError=function(e,...t){console.error(e,...t)},s.logWarning=function(e,...t){console.warn(e,...t)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/logging.cjs"}],[1407,{"./validation.cjs":1408},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./validation.cjs"),s)}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/manifest/index.cjs"}],[1408,{"../array.cjs":1384,"../cronjob.cjs":1391,"../entropy.cjs":1396,"../json-rpc.cjs":1403,"../namespace.cjs":1409,"../snaps.cjs":1413,"../structs.cjs":1415,"../types.cjs":1417,"@metamask/key-tree":1932,"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createSnapManifest=s.assertIsSnapManifest=s.isSnapManifest=s.SnapManifestStruct=s.InitialConnectionsStruct=s.SnapAuxilaryFilesStruct=s.PermissionsStruct=s.EmptyObjectStruct=s.HandlerCaveatsStruct=s.ProtocolScopesStruct=s.MaxRequestTimeStruct=s.MAXIMUM_REQUEST_TIMEOUT=s.MINIMUM_REQUEST_TIMEOUT=s.LookupMatchersStruct=s.ChainIdsStruct=s.SnapIdsStruct=s.SemVerRangeStruct=s.SnapGetBip32EntropyPermissionsStruct=s.Bip32EntropyStruct=s.CurveStruct=s.bip32entropy=s.Bip32PathStruct=s.FORBIDDEN_COIN_TYPES=void 0;const a=e("@metamask/key-tree"),n=e("@metamask/superstruct"),r=e("@metamask/utils"),o=e("../array.cjs"),i=e("../cronjob.cjs"),c=e("../entropy.cjs"),l=e("../json-rpc.cjs"),d=e("../namespace.cjs"),m=e("../snaps.cjs"),u=e("../structs.cjs"),p=e("../types.cjs"),h=[c.SIP_6_MAGIC_VALUE,c.STATE_ENCRYPTION_MAGIC_VALUE];s.FORBIDDEN_COIN_TYPES=[60];const g=s.FORBIDDEN_COIN_TYPES.map((e=>["m","44'",`${e}'`]));s.Bip32PathStruct=(0,n.refine)((0,n.array)((0,n.string)()),"BIP-32 path",(e=>0===e.length?"Path must be a non-empty BIP-32 derivation path array":"m"!==e[0]?'Path must start with "m".':e.length<3?"Paths must have a length of at least three.":e.slice(1).some((e=>!(0,a.isValidBIP32PathSegment)(e)))?"Path must be a valid BIP-32 derivation path array.":h.includes(e[1])?`The purpose "${e[1]}" is not allowed for entropy derivation.`:!g.some((t=>(0,o.isEqual)(e.slice(0,t.length),t)))||`The path "${e.join("/")}" is not allowed for entropy derivation.`));s.bip32entropy=e=>(0,n.refine)(e,"BIP-32 entropy",(e=>"ed25519"!==e.curve||!e.path.slice(1).some((e=>!e.endsWith("'")))||"Ed25519 does not support unhardened paths.")),s.CurveStruct=(0,n.enums)(["ed25519","secp256k1","ed25519Bip32"]),s.Bip32EntropyStruct=(0,s.bip32entropy)((0,n.type)({path:s.Bip32PathStruct,curve:s.CurveStruct})),s.SnapGetBip32EntropyPermissionsStruct=(0,n.size)((0,n.array)(s.Bip32EntropyStruct),1,Infinity),s.SemVerRangeStruct=(0,n.refine)((0,n.string)(),"SemVer range",(e=>!!(0,r.isValidSemVerRange)(e)||"Expected a valid SemVer range.")),s.SnapIdsStruct=(0,n.refine)((0,n.record)(m.SnapIdStruct,(0,n.object)({version:(0,n.optional)(s.SemVerRangeStruct)})),"SnapIds",(e=>0!==Object.keys(e).length)),s.ChainIdsStruct=(0,n.size)((0,n.array)(d.ChainIdStruct),1,Infinity),s.LookupMatchersStruct=(0,n.union)([(0,n.object)({tlds:(0,n.size)((0,n.array)((0,n.string)()),1,Infinity)}),(0,n.object)({schemes:(0,n.size)((0,n.array)((0,n.string)()),1,Infinity)}),(0,n.object)({tlds:(0,n.size)((0,n.array)((0,n.string)()),1,Infinity),schemes:(0,n.size)((0,n.array)((0,n.string)()),1,Infinity)})]),s.MINIMUM_REQUEST_TIMEOUT=(0,r.inMilliseconds)(5,r.Duration.Second),s.MAXIMUM_REQUEST_TIMEOUT=(0,r.inMilliseconds)(3,r.Duration.Minute),s.MaxRequestTimeStruct=(0,n.size)((0,n.integer)(),s.MINIMUM_REQUEST_TIMEOUT,s.MAXIMUM_REQUEST_TIMEOUT),s.ProtocolScopesStruct=(0,n.record)(r.CaipChainIdStruct,(0,n.object)({methods:(0,n.array)((0,n.string)())})),s.HandlerCaveatsStruct=(0,n.object)({maxRequestTime:(0,n.optional)(s.MaxRequestTimeStruct)}),s.EmptyObjectStruct=(0,n.object)({}),s.PermissionsStruct=(0,n.type)({"endowment:assets":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({scopes:s.ChainIdsStruct}))),"endowment:cronjob":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({jobs:(0,n.optional)(i.CronjobSpecificationArrayStruct)}))),"endowment:ethereum-provider":(0,n.optional)(s.EmptyObjectStruct),"endowment:keyring":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,l.KeyringOriginsStruct)),"endowment:protocol":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({scopes:s.ProtocolScopesStruct}))),"endowment:lifecycle-hooks":(0,n.optional)(s.HandlerCaveatsStruct),"endowment:name-lookup":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({chains:(0,n.optional)(s.ChainIdsStruct),matchers:(0,n.optional)(s.LookupMatchersStruct)}))),"endowment:network-access":(0,n.optional)(s.EmptyObjectStruct),"endowment:page-home":(0,n.optional)(s.HandlerCaveatsStruct),"endowment:rpc":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,l.RpcOriginsStruct)),"endowment:signature-insight":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({allowSignatureOrigin:(0,n.optional)((0,n.boolean)())}))),"endowment:transaction-insight":(0,n.optional)((0,u.mergeStructs)(s.HandlerCaveatsStruct,(0,n.object)({allowTransactionOrigin:(0,n.optional)((0,n.boolean)())}))),"endowment:webassembly":(0,n.optional)(s.EmptyObjectStruct),snap_dialog:(0,n.optional)(s.EmptyObjectStruct),snap_manageState:(0,n.optional)(s.EmptyObjectStruct),snap_manageAccounts:(0,n.optional)(s.EmptyObjectStruct),snap_notify:(0,n.optional)(s.EmptyObjectStruct),snap_getBip32Entropy:(0,n.optional)(s.SnapGetBip32EntropyPermissionsStruct),snap_getBip32PublicKey:(0,n.optional)(s.SnapGetBip32EntropyPermissionsStruct),snap_getBip44Entropy:(0,n.optional)((0,n.size)((0,n.array)((0,n.object)({coinType:(0,n.size)((0,n.integer)(),0,2**32-1)})),1,Infinity)),snap_getEntropy:(0,n.optional)(s.EmptyObjectStruct),snap_getLocale:(0,n.optional)(s.EmptyObjectStruct),wallet_snap:(0,n.optional)(s.SnapIdsStruct)}),s.SnapAuxilaryFilesStruct=(0,n.array)((0,n.string)()),s.InitialConnectionsStruct=(0,n.record)((0,n.intersection)([(0,n.string)(),(0,p.uri)()]),(0,n.object)({})),s.SnapManifestStruct=(0,n.object)({version:r.VersionStruct,description:(0,n.size)((0,n.string)(),1,280),proposedName:(0,n.size)((0,n.string)(),1,214),repository:(0,n.optional)((0,n.type)({type:(0,n.size)((0,n.string)(),1,Infinity),url:(0,n.size)((0,n.string)(),1,Infinity)})),source:(0,n.object)({shasum:r.ChecksumStruct,location:(0,n.object)({npm:(0,n.object)({filePath:(0,n.size)((0,n.string)(),1,Infinity),iconPath:(0,n.optional)((0,n.size)((0,n.string)(),1,Infinity)),packageName:p.NameStruct,registry:(0,n.union)([(0,n.literal)("https://registry.npmjs.org"),(0,n.literal)("https://registry.npmjs.org/")])})}),files:(0,n.optional)(s.SnapAuxilaryFilesStruct),locales:(0,n.optional)(s.SnapAuxilaryFilesStruct)}),initialConnections:(0,n.optional)(s.InitialConnectionsStruct),initialPermissions:s.PermissionsStruct,manifestVersion:(0,n.literal)("0.1"),platformVersion:(0,n.optional)(r.VersionStruct),$schema:(0,n.optional)((0,n.string)())}),s.isSnapManifest=function(e){return(0,n.is)(e,s.SnapManifestStruct)},s.assertIsSnapManifest=function(e){(0,r.assertStruct)(e,s.SnapManifestStruct,`"${p.NpmSnapFileNames.Manifest}" is invalid`)},s.createSnapManifest=function(e){return(0,n.create)(e,s.SnapManifestStruct)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/manifest/validation.cjs"}],[1409,{"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isNamespace=s.isAccountIdArray=s.isAccountId=s.isChainId=s.isNamespaceId=s.NamespaceIdStruct=s.NamespaceStruct=s.ChainStruct=s.AccountAddressStruct=s.AccountIdArrayStruct=s.AccountIdStruct=s.ChainIdStruct=s.ChainIdStringStruct=s.LimitedString=s.parseAccountId=s.parseChainId=s.ACCOUNT_ADDRESS_REGEX=s.ACCOUNT_ID_REGEX=s.CHAIN_ID_REGEX=void 0;const a=e("@metamask/superstruct");s.CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})$/u,s.ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})):(?<accountAddress>[a-zA-Z0-9]{1,64})$/u,s.ACCOUNT_ADDRESS_REGEX=/^(?<accountAddress>[a-zA-Z0-9]{1,64})$/u,s.parseChainId=function(e){const t=s.CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},s.parseAccountId=function(e){const t=s.ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},s.LimitedString=(0,a.size)((0,a.string)(),1,40),s.ChainIdStringStruct=(0,a.define)("Chain ID",(0,a.string)().validator),s.ChainIdStruct=(0,a.pattern)(s.ChainIdStringStruct,s.CHAIN_ID_REGEX),s.AccountIdStruct=(0,a.pattern)((0,a.string)(),s.ACCOUNT_ID_REGEX),s.AccountIdArrayStruct=(0,a.array)(s.AccountIdStruct),s.AccountAddressStruct=(0,a.pattern)((0,a.string)(),s.ACCOUNT_ADDRESS_REGEX),s.ChainStruct=(0,a.object)({id:s.ChainIdStruct,name:s.LimitedString}),s.NamespaceStruct=(0,a.object)({chains:(0,a.array)(s.ChainStruct),methods:(0,a.optional)((0,a.array)(s.LimitedString)),events:(0,a.optional)((0,a.array)(s.LimitedString))}),s.NamespaceIdStruct=(0,a.pattern)((0,a.string)(),/^[-a-z0-9]{3,8}$/u),s.isNamespaceId=function(e){return(0,a.is)(e,s.NamespaceIdStruct)},s.isChainId=function(e){return(0,a.is)(e,s.ChainIdStruct)},s.isAccountId=function(e){return(0,a.is)(e,s.AccountIdStruct)},s.isAccountIdArray=function(e){return(0,a.is)(e,s.AccountIdArrayStruct)},s.isNamespace=function(e){return(0,a.is)(e,s.NamespaceStruct)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/namespace.cjs"}],[1410,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.normalizeRelative=void 0;const a=e("@metamask/utils");s.normalizeRelative=function(e){return(0,a.assert)(!e.startsWith("/")),(0,a.assert)(-1===e.search(/:|\/\//u),`Path "${e}" potentially an URI instead of local relative`),e.startsWith("./")?e.slice(2):e}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/path.cjs"}],[1411,{"@metamask/snaps-sdk/package.json":2688},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.getPlatformVersion=void 0;const n=a(e("@metamask/snaps-sdk/package.json"));s.getPlatformVersion=function(){return n.default.version}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/platform-version.cjs"}],[1412,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/promise.cjs"}],[1413,{"./caveats.cjs":1388,"./checksum.cjs":1389,"./types.cjs":1417,"@metamask/superstruct":2737,"@metamask/utils":2815,"@scure/base":2889,"fast-json-stable-stringify":4297,"validate-npm-package-name":5542},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.verifyRequestedSnapPermissions=s.isSnapPermitted=s.isCaipChainId=s.assertIsValidSnapId=s.isSnapId=s.stripSnapPrefix=s.getSnapPrefix=s.SnapIdStruct=s.HttpSnapIdStruct=s.NpmSnapIdStruct=s.LocalSnapIdStruct=s.BaseSnapIdStruct=s.LOCALHOST_HOSTNAMES=s.validateSnapShasum=s.getSnapChecksum=s.SnapStatusEvents=s.SnapStatus=s.PROPOSED_NAME_REGEX=void 0;const n=e("@metamask/superstruct"),r=e("@metamask/utils"),o=e("@scure/base"),i=a(e("fast-json-stable-stringify")),c=a(e("validate-npm-package-name")),l=e("./caveats.cjs"),d=e("./checksum.cjs"),m=e("./types.cjs");var u,p;function h(e){const t=e.clone();return delete t.result.source.shasum,t.value=(0,i.default)(t.result),t}async function g(e){const{manifest:t,sourceCode:s,svgIcon:a,auxiliaryFiles:n,localizationFiles:r}=e,i=[h(t),s,a,...n,...r].filter((e=>e!==undefined));return o.base64.encode(await(0,d.checksumFiles)(i))}s.PROPOSED_NAME_REGEX=/^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*\/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$/u,function(e){e.Installing="installing",e.Updating="updating",e.Running="running",e.Stopped="stopped",e.Crashed="crashed"}(u||(s.SnapStatus=u={})),function(e){e.Start="START",e.Stop="STOP",e.Crash="CRASH",e.Update="UPDATE"}(p||(s.SnapStatusEvents=p={})),s.getSnapChecksum=g,s.validateSnapShasum=async function(e,t="Invalid Snap manifest: manifest shasum does not match computed shasum."){if(e.manifest.result.source.shasum!==await g(e))throw new Error(t)},s.LOCALHOST_HOSTNAMES=["localhost","127.0.0.1","[::1]"],s.BaseSnapIdStruct=(0,n.pattern)((0,n.string)(),/^[\x21-\x7E]*$/u);const f=(0,m.uri)({protocol:(0,n.enums)(["http:","https:"]),hostname:(0,n.enums)(s.LOCALHOST_HOSTNAMES),hash:(0,n.empty)((0,n.string)()),search:(0,n.empty)((0,n.string)())});function b(e){const t=Object.values(m.SnapIdPrefixes).find((t=>e.startsWith(t)));if(t!==undefined)return t;throw new Error(`Invalid or no prefix found for "${e}"`)}s.LocalSnapIdStruct=(0,n.refine)(s.BaseSnapIdStruct,"local Snap Id",(e=>{if(!e.startsWith(m.SnapIdPrefixes.local))return`Expected local snap ID, got "${e}".`;const[t]=(0,n.validate)(e.slice(m.SnapIdPrefixes.local.length),f);return t??!0})),s.NpmSnapIdStruct=(0,n.intersection)([s.BaseSnapIdStruct,(0,m.uri)({protocol:(0,n.literal)(m.SnapIdPrefixes.npm),pathname:(0,n.refine)((0,n.string)(),"package name",(function*(e){const t=e.startsWith("/")?e.slice(1):e,{errors:s,validForNewPackages:a,warnings:n}=(0,c.default)(t);return a||(s===undefined?((0,r.assert)(n!==undefined),yield*n):yield*s),!0})),search:(0,n.empty)((0,n.string)()),hash:(0,n.empty)((0,n.string)())})]),s.HttpSnapIdStruct=(0,n.intersection)([s.BaseSnapIdStruct,(0,m.uri)({protocol:(0,n.enums)(["http:","https:"]),search:(0,n.empty)((0,n.string)()),hash:(0,n.empty)((0,n.string)())})]),s.SnapIdStruct=(0,n.union)([s.NpmSnapIdStruct,s.LocalSnapIdStruct]),s.getSnapPrefix=b,s.stripSnapPrefix=function(e){return e.replace(b(e),"")},s.isSnapId=function(e){return(0,n.is)(e,s.SnapIdStruct)},s.assertIsValidSnapId=function(e){(0,r.assertStruct)(e,s.SnapIdStruct,"Invalid snap ID")},s.isCaipChainId=function(e){return"string"==typeof e&&/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-a-zA-Z0-9]{1,32})$/u.test(e)},s.isSnapPermitted=function(e,t){return Boolean((e?.wallet_snap?.caveats?.find((e=>e.type===l.SnapCaveatType.SnapIds))??{}).value?.[t])},s.verifyRequestedSnapPermissions=function(e){(0,r.assert)((0,r.isObject)(e),"Requested permissions must be an object.");const{wallet_snap:t}=e;(0,r.assert)((0,r.isObject)(t),"wallet_snap is missing from the requested permissions.");const{caveats:s}=t;(0,r.assert)(Array.isArray(s)&&1===s.length,"wallet_snap must have a caveat property with a single-item array value.");const[a]=s;(0,r.assert)((0,r.isObject)(a)&&a.type===l.SnapCaveatType.SnapIds&&(0,r.isObject)(a.value),`The requested permissions do not have a valid ${l.SnapCaveatType.SnapIds} caveat.`)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/snaps.cjs"}],[1414,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.indent=void 0,s.indent=function(e,t=2){return e.replace(/^/gmu," ".repeat(t))}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/strings.cjs"}],[1415,{"./strings.cjs":1414,"@metamask/snaps-sdk":2604,"@metamask/superstruct":2737,"@metamask/utils":2815,chalk:3956},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.mergeStructs=s.createUnion=s.validateUnion=s.getStructErrorMessage=s.getStructFailureMessage=s.getStructErrorPrefix=s.getUnionStructNames=s.getStructFromPath=s.createFromStruct=s.getError=s.arrayToGenerator=s.SnapsStructError=s.named=void 0;const a=e("@metamask/snaps-sdk"),n=e("@metamask/superstruct"),r=e("@metamask/utils"),o=e("chalk"),i=e("./strings.cjs");function c(e,t,s){return s?t(e):e}s.named=function(e,t){return new n.Struct({...t,type:e})};class l extends n.StructError{constructor(e,t,s,a,n,r=!0){super(a,n),this.name="SnapsStructError",this.message=`${t}.\n\n${f(e,[...n()],r)}${s?`\n\n${s}`:""}`}}function*d(e){for(const t of e)yield t}function m({struct:e,prefix:t,suffix:s="",error:a,colorize:n}){return new l(e,t,s,a,(()=>d(a.failures())),n)}function u(e,t){return t.reduce(((t,s)=>(0,r.isObject)(e.schema)&&e.schema[s]?e.schema[s]:t),e)}function p(e,t=!0){return Array.isArray(e.schema)?e.schema.map((({type:e})=>c(e,o.green,t))):null}function h(e,t=!0){return"never"===e.type||0===e.path.length?"":`At path: ${c(e.path.join("."),o.bold,t)} — `}function g(e,t,s=!0){const a=c(JSON.stringify(t.value),o.red,s),n=h(t,s);if("union"===t.type){const r=p(u(e,t.path),s);return r?`${n}Expected the value to be one of: ${r.join(", ")}, but received: ${a}.`:`${n}${t.message}.`}if("literal"===t.type){return`${n}${t.message.replace(/the literal `(.+)`,/u,`the value to be \`${c("$1",o.green,s)}\`,`).replace(/, but received: (.+)/u,`, but received: ${c("$1",o.red,s)}`)}.`}if("never"===t.type)return`Unknown key: ${c(t.path.join("."),o.bold,s)}, received: ${a}.`;if("size"===t.refinement){return`${n}${t.message.replace(/length between `(\d+)` and `(\d+)`/u,`length between ${c("$1",o.green,s)} and ${c("$2",o.green,s)},`).replace(/length of `(\d+)`/u,`length of ${c("$1",o.red,s)}`).replace(/a array/u,"an array")}.`}return t.refinement!==undefined?`${n}${t.message}.`:`${n}Expected a value of type ${c(t.type,o.green,s)}, but received: ${a}.`}function f(e,t,s=!0){return t.map((t=>(0,i.indent)(`• ${g(e,t,s)}`))).join("\n")}function b(e,t,s,o=!1){(0,r.assert)(t.schema,"Expected a struct with a schema. Make sure to use `union` from `@metamask/snaps-sdk`."),(0,r.assert)(t.schema.length>0,"Expected a non-empty array of structs.");const i=t.schema.map((e=>e.schema[s])),c=(0,n.type)({[s]:(0,a.union)(i)}),[l]=(0,n.validate)(e,c,{coerce:o});if(l)throw new Error(g(c,l.failures()[0],!1));const d=e,m=t.schema.filter((e=>(0,n.is)(d[s],e.schema[s])));(0,r.assert)(m.length>0,"Expected a struct to match the value.");const u=m.map((e=>(0,n.validate)(d,e,{coerce:o}))),p=u.find((([e])=>!e));if(p)return p[1];(0,r.assert)(u[0][0],"Expected at least one error.");const h=u.reduce(((e,[t])=>((0,r.assert)(t,"Expected an error."),t.failures().length<e.failures().length?t:e)),u[0][0]);throw new Error(g(t,h.failures()[0],!1))}s.SnapsStructError=l,s.arrayToGenerator=d,s.getError=m,s.createFromStruct=function(e,t,s,a=""){try{return(0,n.create)(e,t)}catch(e){if(e instanceof n.StructError)throw m({struct:t,prefix:s,suffix:a,error:e});throw e}},s.getStructFromPath=u,s.getUnionStructNames=p,s.getStructErrorPrefix=h,s.getStructFailureMessage=g,s.getStructErrorMessage=f,s.validateUnion=b,s.createUnion=function(e,t,s){return b(e,t,s,!0)},s.mergeStructs=function(...e){const t=n.assign(...e);return new n.Struct({...t,*refiner(t,s){for(const a of e)yield*a.refiner(t,s)}})}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/structs.cjs"}],[1416,{"@metamask/utils":2815,"fast-xml-parser":4299},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isSvg=s.parseSvg=void 0;const a=e("@metamask/utils"),n=e("fast-xml-parser");function r(e){try{const t=e.trim();(0,a.assert)(t.length>0);const s=new n.XMLParser({ignoreAttributes:!1,parseAttributeValue:!0}).parse(t,!0);return(0,a.assert)((0,a.hasProperty)(s,"svg")),(0,a.isObject)(s.svg)?s.svg:{}}catch{throw new Error("Snap icon must be a valid SVG.")}}s.parseSvg=r,s.isSvg=function(e){try{return r(e),!0}catch{return!1}}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/svg.cjs"}],[1417,{"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.WALLET_SNAP_PERMISSION_KEY=s.isValidUrl=s.uri=s.SNAP_STREAM_NAMES=s.SnapIdPrefixes=s.NpmSnapPackageJsonStruct=s.NameStruct=s.NpmSnapFileNames=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils");var r,o,i;!function(e){e.PackageJson="package.json",e.Manifest="snap.manifest.json"}(r||(s.NpmSnapFileNames=r={})),s.NameStruct=(0,a.size)((0,a.pattern)((0,a.string)(),/^(?:@[a-z0-9-*~][a-z0-9-*._~]*\/)?[a-z0-9-~][a-z0-9-._~]*$/u),1,214),s.NpmSnapPackageJsonStruct=(0,a.type)({version:n.VersionStruct,name:s.NameStruct,main:(0,a.optional)((0,a.size)((0,a.string)(),1,Infinity)),repository:(0,a.optional)((0,a.type)({type:(0,a.size)((0,a.string)(),1,Infinity),url:(0,a.size)((0,a.string)(),1,Infinity)}))}),function(e){e.npm="npm:",e.local="local:"}(o||(s.SnapIdPrefixes=o={})),function(e){e.JSON_RPC="jsonRpc",e.COMMAND="command"}(i||(s.SNAP_STREAM_NAMES=i={}));s.uri=(e={})=>(0,a.refine)((0,a.union)([(0,a.string)(),(0,a.instance)(URL)]),"uri",(t=>{try{const s=new URL(t),n=(0,a.type)(e);return(0,a.assert)(s,n),!0}catch{return`Expected URL, got "${t.toString()}".`}})),s.isValidUrl=function(e,t={}){return(0,a.is)(e,(0,s.uri)(t))},s.WALLET_SNAP_PERMISSION_KEY="wallet_snap"}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/types.cjs"}],[1418,{"./url.cjs":1419,"@metamask/snaps-sdk":2604,"@metamask/snaps-sdk/jsx":2687,"@metamask/snaps-sdk/jsx-runtime":2686,"@metamask/utils":2815,marked:4729},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.serialiseJsx=s.walkJsx=s.getJsxChildren=s.hasChildren=s.getTotalTextLength=s.validateJsxLinks=s.validateTextLinks=s.validateLink=s.getJsxElementFromComponent=s.getTextChildren=void 0;const a=e("@metamask/snaps-sdk/jsx-runtime"),n=e("@metamask/snaps-sdk"),r=e("@metamask/snaps-sdk/jsx"),o=e("@metamask/utils"),i=e("marked"),c=e("./url.cjs"),l=5e4,d=["https:","mailto:","metamask:"];function m(e){switch(e){case"primary":return"primary";case"secondary":return"destructive";default:return undefined}}function u(e){return 1===e.length?e[0]:e}function p(e){return e.tokens&&e.tokens.length>0?u(e.tokens.flatMap(g)):e.href}function h(e){return u(e.flatMap(g))}function g(e){switch(e.type){case"link":return(0,a.jsx)(r.Link,{href:e.href,children:p(e)});case"text":return e.text;case"strong":return(0,a.jsx)(r.Bold,{children:h(e.tokens)});case"em":return(0,a.jsx)(r.Italic,{children:h(e.tokens)});default:return null}}function f(e){const t=(0,i.lexer)(e,{gfm:!1}),s=[];return(0,i.walkTokens)(t,(e=>{if("paragraph"===e.type){s.length>0&&s.push("\n\n");const{tokens:t}=e;s.push(...t.flatMap(g))}})),s.filter((e=>null!==e))}function b(e,t,s){try{const a=new URL(e);if((0,o.assert)(d.includes(a.protocol),`Protocol must be one of: ${d.join(", ")}.`),"metamask:"===a.protocol){const t=(0,c.parseMetaMaskUrl)(e);t.snapId&&(0,o.assert)(s(t.snapId),"The Snap being navigated to is not installed.")}else if("mailto:"===a.protocol){const e=a.pathname.split(",");for(const s of e){const e=s.split("@")[1];(0,o.assert)(!e.includes(":"));const a=`https://${e}`;(0,o.assert)(!t(a),"The specified URL is not allowed.")}return}(0,o.assert)(!t(a.href),"The specified URL is not allowed.")}catch(e){throw new Error(`Invalid URL: ${"ERR_ASSERTION"===e?.code?e.message:"Unable to parse URL."}`)}}function y(e){const{type:t}=e;switch(t){case n.NodeType.Panel:return e.children.reduce(((e,t)=>e+y(t)),0);case n.NodeType.Row:return y(e.value);case n.NodeType.Text:return e.value.length;default:return 0}}function w(e){return(0,o.hasProperty)(e.props,"children")}function k(e){return Boolean(e)&&!0!==e}function A(e){if(w(e)){if(Array.isArray(e.props.children))return e.props.children.filter(k).flat(Infinity);if(e.props.children)return[e.props.children]}return[]}function E(e,t,s=0){if(Array.isArray(e)){for(const a of e){const e=E(a,t,s);if(e!==undefined)return e}return undefined}const a=t(e,s);if(a!==undefined)return a;if((0,o.hasProperty)(e,"props")&&(0,o.isPlainObject)(e.props)&&(0,o.hasProperty)(e.props,"children")){const a=A(e);for(const e of a)if((0,o.isPlainObject)(e)){const a=E(e,t,s+1);if(a!==undefined)return a}}return undefined}function S(e){return Object.entries(e).filter((([e])=>"children"!==e)).sort((([e],[t])=>e.localeCompare(t))).map((([e,t])=>{return` ${e}=${s=t,"string"==typeof s?`"${s}"`:`{${JSON.stringify(s)}}`}`;var s})).join("")}s.getTextChildren=f,s.getJsxElementFromComponent=function(e){return function(e){const t=y(e);(0,o.assert)(t<=l,`The text in a Snap UI may not be larger than ${l/1e3} kB.`)}(e),function e(t){switch(t.type){case n.NodeType.Address:return(0,a.jsx)(r.Address,{address:t.value});case n.NodeType.Button:return(0,a.jsx)(r.Button,{name:t.name,variant:m(t.variant),type:t.buttonType,children:t.value});case n.NodeType.Copyable:return(0,a.jsx)(r.Copyable,{value:t.value,sensitive:t.sensitive});case n.NodeType.Divider:return(0,a.jsx)(r.Divider,{});case n.NodeType.Form:return(0,a.jsx)(r.Form,{name:t.name,children:u(t.children.map(e))});case n.NodeType.Heading:return(0,a.jsx)(r.Heading,{children:t.value});case n.NodeType.Image:return(0,a.jsx)(r.Image,{src:t.value});case n.NodeType.Input:return(0,a.jsx)(r.Field,{label:t.label,error:t.error,children:(0,a.jsx)(r.Input,{name:t.name,type:t.inputType,value:t.value,placeholder:t.placeholder})});case n.NodeType.Panel:return(0,a.jsx)(r.Box,{children:u(t.children.map(e))});case n.NodeType.Row:return(0,a.jsx)(r.Row,{label:t.label,variant:t.variant,children:e(t.value)});case n.NodeType.Spinner:return(0,a.jsx)(r.Spinner,{});case n.NodeType.Text:return(0,a.jsx)(r.Text,{children:u(f(t.value))});default:return(0,o.assertExhaustive)(t)}}(e)},s.validateLink=b,s.validateTextLinks=function(e,t,s){const a=function(e){const t=(0,i.lexer)(e,{gfm:!1}),s=[];return(0,i.walkTokens)(t,(e=>{"link"===e.type&&s.push(e)})),s}(e);for(const e of a)b(e.href,t,s)},s.validateJsxLinks=function(e,t,s){E(e,(e=>{"Link"===e.type&&b(e.props.href,t,s)}))},s.getTotalTextLength=y,s.hasChildren=w,s.getJsxChildren=A,s.walkJsx=E,s.serialiseJsx=function e(t,s=0){if(Array.isArray(t))return t.map((t=>e(t,s))).join("");const a="  ".repeat(s);if("string"==typeof t)return`${a}${t}\n`;if(!t)return"";const{type:n,props:r}=t,i=s>0?"\n":"";if((0,o.hasProperty)(r,"children")){const t=e(r.children,s+1);return`${a}<${n}${S(r)}>\n${t}${a}</${n}>${i}`}return`${a}<${n}${S(r)} />${i}`}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/ui.cjs"}],[1419,{"./snaps.cjs":1413,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.parseMetaMaskUrl=s.SNAP_PATHS=s.CLIENT_PATHS=void 0;const a=e("@metamask/utils"),n=e("./snaps.cjs");s.CLIENT_PATHS=["/"],s.SNAP_PATHS=["/home"],s.parseMetaMaskUrl=function(e){const t=new URL(e),{protocol:r}=t;if("metamask:"!==r)throw new Error(`Unable to parse URL. Expected the protocol to be "metamask:", but received "${r}".`);const[o,...i]=t.href.replace("metamask://","").split("/"),c=`/${i.join("/")}`;switch(o){case"client":return(0,a.assert)(s.CLIENT_PATHS.includes(c),`Unable to navigate to "${c}". The provided path is not allowed.`),{authority:o,path:c};case"snap":return function(e){const t="Invalid MetaMask url:",r=(0,n.stripSnapPrefix)(e.slice(1)),o=e.slice(1).startsWith("npm:")?"npm:":"local:",i=r.startsWith("@"),c=r.split("/"),l=`/${c[c.length-1]}`;let d;if("local:"===o){const[e,,...n]=c.slice(0,-1);d=`${e}//${n.join("/")}`,(0,a.assert)(s.SNAP_PATHS.includes(l),`${t} invalid snap path.`)}else d=i?`${c[0]}/${c[1]}`:c[0],(0,a.assert)(i?3===c.length&&s.SNAP_PATHS.includes(l):2===c.length&&s.SNAP_PATHS.includes(l),`${t} invalid snap path.`);const m=`${o}${d}`;return(0,n.assertIsValidSnapId)(m),{authority:"snap",snapId:m,path:l}}(c);default:throw new Error(`Expected "metamask:" URL to start with "client" or "snap", but received "${o}".`)}}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/url.cjs"}],[142,{"../../../../shared/modules/hexstring-utils":5655,"@metamask/eth-sig-util":1676,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isEthAddress=o,s.normalizeAddress=function(e){return o(e)?(0,n.normalize)(e):e},s.normalizeSafeAddress=function(e){return o(e)?(0,r.toChecksumHexAddress)(e):e};var a=e("@metamask/utils"),n=e("@metamask/eth-sig-util"),r=e("../../../../shared/modules/hexstring-utils");function o(e){return(0,a.isValidHexAddress)(e)}}}},{package:"$root$",file:"app/scripts/lib/multichain/address.ts"}],[1420,{"./icon.cjs":1400,"./localization.cjs":1405,"./manifest/validation.cjs":1408,"./snaps.cjs":1413},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.validateFetchedSnap=void 0;const a=e("./icon.cjs"),n=e("./localization.cjs"),r=e("./manifest/validation.cjs"),o=e("./snaps.cjs");s.validateFetchedSnap=async function(e){(0,r.assertIsSnapManifest)(e.manifest.result),await(0,o.validateSnapShasum)(e),(0,n.validateSnapManifestLocalizations)(e.manifest.result,e.localizationFiles.map((e=>e.result))),e.svgIcon&&(0,a.assertIsSnapIcon)(e.svgIcon)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/validation.cjs"}],[1421,{"@metamask/superstruct":2737,"@metamask/utils":2815,semver:5410},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.resolveVersionRange=s.getTargetVersion=s.DEFAULT_REQUESTED_SNAP_VERSION=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("semver");s.DEFAULT_REQUESTED_SNAP_VERSION="*",s.getTargetVersion=function(e,t){const s=(0,r.maxSatisfying)(e,t);return s||(0,r.maxSatisfying)(e,t,{includePrerelease:!0})},s.resolveVersionRange=function(e){return e===undefined||"latest"===e?[undefined,s.DEFAULT_REQUESTED_SNAP_VERSION]:(0,a.validate)(e,n.VersionRangeStruct)}}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/versions.cjs"}],[1422,{"../deep-clone.cjs":1393,"@metamask/utils":2815,"@scure/base":2889},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.VirtualFile=void 0;const a=e("@metamask/utils"),n=e("@scure/base"),r=e("../deep-clone.cjs");class o{constructor(e){let t;t="string"==typeof e||e instanceof Uint8Array?{value:e}:e,this.value=t?.value??"",this.result=t?.result??undefined,this.data=t?.data??{},this.path=t?.path??"/"}get size(){return"string"==typeof this.value?this.value.length:this.value.byteLength}toString(e){if("string"==typeof this.value)return(0,a.assert)(e===undefined,"Tried to encode string."),this.value;if(this.value instanceof Uint8Array&&"hex"===e)return(0,a.bytesToHex)(this.value);if(this.value instanceof Uint8Array&&"base64"===e)return n.base64.encode(this.value);return new TextDecoder(e).decode(this.value)}clone(){const e=new o;return"string"==typeof this.value?e.value=this.value:e.value=this.value.slice(0),e.result=(0,r.deepClone)(this.result),e.data=(0,r.deepClone)(this.data),e.path=this.path,e}}s.VirtualFile=o}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/virtual-file/VirtualFile.cjs"}],[1423,{"./VirtualFile.cjs":1422},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./VirtualFile.cjs"),s)}}},{package:"@metamask/bridge-controller>@metamask/snaps-utils",file:"node_modules/@metamask/bridge-controller/node_modules/@metamask/snaps-utils/dist/virtual-file/index.cjs"}],[1424,{"@solana/assertions":3105,"@solana/codecs-core":3106,"@solana/codecs-strings":3107,"@solana/errors":3108},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=e("@solana/codecs-core"),o=e("@solana/codecs-strings"),i=e("@solana/errors"),c=e("@solana/assertions");function l(){return a||(a=o.getBase58Encoder()),a}function d(e){if(e.length<32||e.length>44)return!1;const t=l();try{return 32===t.encode(e).byteLength}catch{return!1}}function m(e){if(e.length<32||e.length>44)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE,{actualLength:e.length});const t=l().encode(e).byteLength;if(32!==t)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH,{actualLength:t})}function u(e){return m(e),e}function p(){return r.transformEncoder(r.fixEncoderSize(l(),32),(e=>u(e)))}function h(){return r.fixDecoderSize((n||(n=o.getBase58Decoder()),n),32)}function g(){return r.combineCodec(p(),h())}var f=37095705934669439343138083508754565189542113879843219016388785533085940283555n,b=57896044618658097711785492504343953926634992332820282019728792003956564819949n,y=19681161376707505956807079304988542015446066515923890162744021073123829784752n;function w(e){const t=e%b;return t>=0n?t:b+t}function k(e,t){let s=e;for(;t-- >0n;)s*=s,s%=b;return s}function A(e,t){const s=w(t*t*t),a=function(e){const t=e*e%b*e%b,s=k(t,2n)*t%b,a=k(s,1n)*e%b,n=k(a,5n)*a%b,r=k(n,10n)*n%b,o=k(r,20n)*r%b,i=k(o,40n)*o%b,c=k(i,80n)*i%b,l=k(c,80n)*i%b,d=k(l,10n)*n%b;return k(d,2n)*e%b}(e*w(s*s*t));let n=w(e*s*a);const r=w(t*n*n),o=n,i=w(n*y),c=r===e,l=r===w(-e),d=r===w(-e*y);return c&&(n=o),(l||d)&&(n=i),1n===(1n&w(n))&&(n=w(-n)),c||l?n:null}function E(e){if(32!==e.byteLength)return!1;const t=function(e){const t=e.reduce(((e,t,s)=>`${function(e){const t=e.toString(16);return 1===t.length?`0${t}`:t}(31===s?-129&t:t)}${e}`),"");return BigInt(`0x${t}`)}(e);return function(e,t){const s=w(e*e),a=A(w(s-1n),w(f*s+1n));return null!==a&&(0n!==a||!(128&t))}(t,e[31])}var S=32,C=16,v=[80,114,111,103,114,97,109,68,101,114,105,118,101,100,65,100,100,114,101,115,115];async function T({programAddress:e,seeds:t}){if(c.assertDigestCapabilityIsAvailable(),t.length>C)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED,{actual:t.length,maxSeeds:C});let s;const a=t.reduce(((e,t,a)=>{const n="string"==typeof t?(s||(s=new TextEncoder)).encode(t):t;if(n.byteLength>S)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,{actual:n.byteLength,index:a,maxSeedLength:S});return e.push(...n),e}),[]),n=g(),r=n.encode(e),o=await crypto.subtle.digest("SHA-256",new Uint8Array([...a,...r,...v])),l=new Uint8Array(o);if(E(l))throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE);return n.decode(l)}s.address=u,s.assertIsAddress=m,s.assertIsProgramDerivedAddress=function(e){if(!(Array.isArray(e)&&2===e.length&&"string"==typeof e[0]&&"number"==typeof e[1]))throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA);if(e[1]<0||e[1]>255)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE,{bump:e[1]});m(e[0])},s.createAddressWithSeed=async function({baseAddress:e,programAddress:t,seed:s}){const{encode:a,decode:n}=g(),r="string"==typeof s?(new TextEncoder).encode(s):s;if(r.byteLength>S)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED,{actual:r.byteLength,index:0,maxSeedLength:S});const o=a(t);if(o.length>=v.length&&o.slice(-v.length).every(((e,t)=>e===v[t])))throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER);const c=await crypto.subtle.digest("SHA-256",new Uint8Array([...a(e),...r,...o]));return n(new Uint8Array(c))},s.getAddressCodec=g,s.getAddressComparator=function(){return new Intl.Collator("en",{caseFirst:"lower",ignorePunctuation:!1,localeMatcher:"best fit",numeric:!1,sensitivity:"variant",usage:"sort"}).compare},s.getAddressDecoder=h,s.getAddressEncoder=p,s.getAddressFromPublicKey=async function(e){if(c.assertKeyExporterIsAvailable(),"public"!==e.type||"Ed25519"!==e.algorithm.name)throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY);const t=await crypto.subtle.exportKey("raw",e);return h().decode(new Uint8Array(t))},s.getProgramDerivedAddress=async function({programAddress:e,seeds:t}){let s=255;for(;s>0;)try{return[await T({programAddress:e,seeds:[...t,new Uint8Array([s])]}),s]}catch(e){if(!i.isSolanaError(e,i.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE))throw e;s--}throw new i.SolanaError(i.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED)},s.isAddress=d,s.isProgramDerivedAddress=function(e){return Array.isArray(e)&&2===e.length&&"string"==typeof e[0]&&"number"==typeof e[1]&&e[1]>=0&&e[1]<=255&&d(e[0])}}}},{package:"@metamask/bridge-controller>@metamask/multichain-network-controller>@solana/addresses",file:"node_modules/@metamask/bridge-controller/node_modules/@solana/addresses/dist/index.browser.cjs"}],[1425,{"@metamask/utils":1436,buffer:3936},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.isVaultUpdated=s.updateVaultWithDetail=s.updateVault=s.generateSalt=s.serializeBufferForStorage=s.serializeBufferFromStorage=s.keyFromPassword=s.exportKey=s.importKey=s.decryptWithKey=s.decryptWithDetail=s.decrypt=s.encryptWithKey=s.encryptWithDetail=s.encrypt=void 0;const a=e("@metamask/utils"),n="jwk",r="AES-GCM",o="utf-8",i={algorithm:"PBKDF2",params:{iterations:1e4}},c={algorithm:"PBKDF2",params:{iterations:9e5}};async function l(e,t,s,a=f(),n=c){const r=s||await g(e,a,!1,n),o=await m(r,t);return o.salt=a,JSON.stringify(o)}async function d(e,t,s=f(),a=c){const n=await g(e,s,!0,a),r=await h(n);return{vault:await l(e,t,n,s),exportedKeyString:r}}async function m(e,s){const a=JSON.stringify(s),n=t.from(a,o),i=global.crypto.getRandomValues(new Uint8Array(16)),c=w(e),l=await global.crypto.subtle.encrypt({name:r,iv:i},c,n),d=new Uint8Array(l),m=t.from(i).toString("base64"),u={data:t.from(d).toString("base64"),iv:m};return b(e)&&(u.keyMetadata=e.derivationOptions),u}async function u(e,t,s){const a=JSON.parse(t),{salt:n,keyMetadata:r}=a,o=w(s||await g(e,n,!1,r));return await p(o,a)}async function p(e,s){const a=t.from(s.data,"base64"),n=t.from(s.iv,"base64"),i=w(e);let c;try{const e=await crypto.subtle.decrypt({name:r,iv:n},i,a),s=new Uint8Array(e),l=t.from(s).toString(o);c=JSON.parse(l)}catch(e){throw new Error("Incorrect password")}return c}async function h(e){return b(e)?JSON.stringify({key:await window.crypto.subtle.exportKey(n,e.key),derivationOptions:e.derivationOptions}):JSON.stringify(await window.crypto.subtle.exportKey(n,e))}async function g(e,s,a=!1,n=i){const c=t.from(e,o),l=t.from(s,"base64"),d=await global.crypto.subtle.importKey("raw",c,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),m=await global.crypto.subtle.deriveKey({name:"PBKDF2",salt:l,iterations:n.params.iterations,hash:"SHA-256"},d,{name:r,length:256},a,["encrypt","decrypt"]);return n?{key:m,derivationOptions:n}:m}function f(e=32){const t=new Uint8Array(e);global.crypto.getRandomValues(t);return btoa(String.fromCharCode.apply(null,t))}function b(e){return(0,a.isPlainObject)(e)&&(0,a.hasProperty)(e,"key")&&(0,a.hasProperty)(e,"derivationOptions")&&e.key instanceof CryptoKey&&y(e.derivationOptions)}function y(e){return(0,a.isPlainObject)(e)&&(0,a.hasProperty)(e,"algorithm")&&(0,a.hasProperty)(e,"params")}function w(e){return b(e)?e.key:e}function k(e,t=c){const{keyMetadata:s}=JSON.parse(e);return y(s)&&s.algorithm===t.algorithm&&s.params.iterations===t.params.iterations}s.encrypt=l,s.encryptWithDetail=d,s.encryptWithKey=m,s.decrypt=u,s.decryptWithDetail=async function(e,t){const s=JSON.parse(t),{salt:a,keyMetadata:n}=s,r=await g(e,a,!0,n);return{exportedKeyString:await h(r),vault:await u(e,t,r),salt:a}},s.decryptWithKey=p,s.importKey=async function(e){const t=JSON.parse(e);return s=t,(0,a.isPlainObject)(s)&&(0,a.hasProperty)(s,"key")&&(0,a.hasProperty)(s,"derivationOptions")&&y(s.derivationOptions)?{key:await window.crypto.subtle.importKey(n,t.key,r,!0,["encrypt","decrypt"]),derivationOptions:t.derivationOptions}:await window.crypto.subtle.importKey(n,t,r,!0,["encrypt","decrypt"]);var s},s.exportKey=h,s.keyFromPassword=g,s.serializeBufferFromStorage=function(e){const t="0x"===e.slice(0,2)?e.slice(2):e,s=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2){const a=t.substr(e,2);s[e/2]=parseInt(a,16)}return s},s.serializeBufferForStorage=function(e){let t="0x";return e.forEach((e=>{t+=function(e){let t=e.toString(16);for(;t.length<2;)t=`0${t}`;return t}(e)})),t},s.generateSalt=f,s.updateVault=async function(e,t,s=c){return k(e,s)?e:l(t,await u(t,e),undefined,undefined,s)},s.updateVaultWithDetail=async function(e,t,s=c){return k(e.vault,s)?e:d(t,await u(t,e.vault),undefined,s)},s.isVaultUpdated=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/browser-passworder",file:"node_modules/@metamask/browser-passworder/dist/index.js"}],[1426,{"./errors.cjs":1434,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertExhaustive=s.assertStruct=s.assert=s.AssertionError=void 0;const a=e("@metamask/superstruct"),n=e("./errors.cjs");function r(e,t){return s=e,Boolean("string"==typeof s?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var s}class o extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}s.AssertionError=o,s.assert=function(e,t="Assertion failed.",s=o){if(!e){if(t instanceof Error)throw t;throw r(s,t)}},s.assertStruct=function(e,t,s="Assertion failed",i=o){try{(0,a.assert)(e,t)}catch(e){throw r(i,`${s}: ${function(e){return(0,n.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},s.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/assert.cjs"}],[1427,{"./assert.cjs":1426,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.base64=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs");s.base64=(e,t={})=>{const s=t.paddingRequired??!1,r=t.characterSet??"base64";let o,i;return"base64"===r?o=String.raw`[A-Za-z0-9+\/]`:((0,n.assert)("base64url"===r),o=String.raw`[-_A-Za-z0-9]`),i=s?new RegExp(`^(?:${o}{4})*(?:${o}{3}=|${o}{2}==)?$`,"u"):new RegExp(`^(?:${o}{4})*(?:${o}{2,3}|${o}{3}=|${o}{2}==)?$`,"u"),(0,a.pattern)(e,i)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/base64.cjs"}],[1428,{"./assert.cjs":1426,"./hex.cjs":1435,"@scure/base":2889,buffer:3936},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.createDataView=s.concatBytes=s.valueToBytes=s.base64ToBytes=s.stringToBytes=s.numberToBytes=s.signedBigIntToBytes=s.bigIntToBytes=s.hexToBytes=s.bytesToBase64=s.bytesToString=s.bytesToNumber=s.bytesToSignedBigInt=s.bytesToBigInt=s.bytesToHex=s.assertIsBytes=s.isBytes=void 0;const a=e("@scure/base"),n=e("./assert.cjs"),r=e("./hex.cjs"),o=48,i=58,c=87;const l=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function d(e){return e instanceof Uint8Array}function m(e){(0,n.assert)(d(e),"Value must be a Uint8Array.")}function u(e){if(m(e),0===e.length)return"0x";const t=l(),s=new Array(e.length);for(let a=0;a<e.length;a++)s[a]=t[e[a]];return(0,r.add0x)(s.join(""))}function p(e){m(e);const t=u(e);return BigInt(t)}function h(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,r.assertIsHexString)(e);const t=(0,r.remove0x)(e).toLowerCase(),s=t.length%2==0?t:`0${t}`,a=new Uint8Array(s.length/2);for(let e=0;e<a.length;e++){const t=s.charCodeAt(2*e),n=s.charCodeAt(2*e+1),r=t-(t<i?o:c),l=n-(n<i?o:c);a[e]=16*r+l}return a}function g(e){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return h(e.toString(16))}function f(e){(0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return h(e.toString(16))}function b(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function y(e){if("bigint"==typeof e)return g(e);if("number"==typeof e)return f(e);if("string"==typeof e)return e.startsWith("0x")?h(e):b(e);if(d(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}s.isBytes=d,s.assertIsBytes=m,s.bytesToHex=u,s.bytesToBigInt=p,s.bytesToSignedBigInt=function(e){m(e);let t=BigInt(0);for(const s of e)t=(t<<BigInt(8))+BigInt(s);return BigInt.asIntN(8*e.length,t)},s.bytesToNumber=function(e){m(e);const t=p(e);return(0,n.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},s.bytesToString=function(e){return m(e),(new TextDecoder).decode(e)},s.bytesToBase64=function(e){return m(e),a.base64.encode(e)},s.hexToBytes=h,s.bigIntToBytes=g,s.signedBigIntToBytes=function(e,t){(0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)("number"==typeof t,"Byte length must be a number."),(0,n.assert)(t>0,"Byte length must be greater than 0."),(0,n.assert)(function(e,t){(0,n.assert)(t>0);const s=e>>BigInt(31);return!((~e&s)+(e&~s)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let s=e;const a=new Uint8Array(t);for(let e=0;e<a.length;e++)a[e]=Number(BigInt.asUintN(8,s)),s>>=BigInt(8);return a.reverse()},s.numberToBytes=f,s.stringToBytes=b,s.base64ToBytes=function(e){return(0,n.assert)("string"==typeof e,"Value must be a string."),a.base64.decode(e)},s.valueToBytes=y,s.concatBytes=function(e){const t=new Array(e.length);let s=0;for(let a=0;a<e.length;a++){const n=y(e[a]);t[a]=n,s+=n.length}const a=new Uint8Array(s);for(let e=0,s=0;e<t.length;e++)a.set(t[e],s),s+=t[e].length;return a},s.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/bytes.cjs"}],[1429,{"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.toCaipChainId=s.parseCaipAccountId=s.parseCaipChainId=s.isCaipAccountAddress=s.isCaipAccountId=s.isCaipReference=s.isCaipNamespace=s.isCaipChainId=s.KnownCaipNamespace=s.CaipAccountAddressStruct=s.CaipAccountIdStruct=s.CaipReferenceStruct=s.CaipNamespaceStruct=s.CaipChainIdStruct=s.CAIP_ACCOUNT_ADDRESS_REGEX=s.CAIP_ACCOUNT_ID_REGEX=s.CAIP_REFERENCE_REGEX=s.CAIP_NAMESPACE_REGEX=s.CAIP_CHAIN_ID_REGEX=void 0;const a=e("@metamask/superstruct");function n(e){return(0,a.is)(e,s.CaipNamespaceStruct)}function r(e){return(0,a.is)(e,s.CaipReferenceStruct)}s.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,s.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,s.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,s.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,s.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,s.CaipChainIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_CHAIN_ID_REGEX),s.CaipNamespaceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_NAMESPACE_REGEX),s.CaipReferenceStruct=(0,a.pattern)((0,a.string)(),s.CAIP_REFERENCE_REGEX),s.CaipAccountIdStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ID_REGEX),s.CaipAccountAddressStruct=(0,a.pattern)((0,a.string)(),s.CAIP_ACCOUNT_ADDRESS_REGEX),function(e){e.Eip155="eip155"}(s.KnownCaipNamespace||(s.KnownCaipNamespace={})),s.isCaipChainId=function(e){return(0,a.is)(e,s.CaipChainIdStruct)},s.isCaipNamespace=n,s.isCaipReference=r,s.isCaipAccountId=function(e){return(0,a.is)(e,s.CaipAccountIdStruct)},s.isCaipAccountAddress=function(e){return(0,a.is)(e,s.CaipAccountAddressStruct)},s.parseCaipChainId=function(e){const t=s.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},s.parseCaipAccountId=function(e){const t=s.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},s.toCaipChainId=function(e,t){if(!n(e))throw new Error(`Invalid "namespace", must match: ${s.CAIP_NAMESPACE_REGEX.toString()}`);if(!r(t))throw new Error(`Invalid "reference", must match: ${s.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1430,{"./base64.cjs":1427,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ChecksumStruct=void 0;const a=e("@metamask/superstruct"),n=e("./base64.cjs");s.ChecksumStruct=(0,a.size)((0,n.base64)((0,a.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/checksum.cjs"}],[1431,{"./assert.cjs":1426,"./bytes.cjs":1428,"./hex.cjs":1435,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createHex=s.createBytes=s.createBigInt=s.createNumber=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./bytes.cjs"),o=e("./hex.cjs"),i=(0,a.union)([(0,a.number)(),(0,a.bigint)(),(0,a.string)(),o.StrictHexStruct]),c=(0,a.coerce)((0,a.number)(),i,Number),l=(0,a.coerce)((0,a.bigint)(),i,BigInt),d=((0,a.union)([o.StrictHexStruct,(0,a.instance)(Uint8Array)]),(0,a.coerce)((0,a.instance)(Uint8Array),(0,a.union)([o.StrictHexStruct]),r.hexToBytes)),m=(0,a.coerce)(o.StrictHexStruct,(0,a.instance)(Uint8Array),r.bytesToHex);s.createNumber=function(e){try{const t=(0,a.create)(e,c);return(0,n.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof a.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},s.createBigInt=function(e){try{return(0,a.create)(e,l)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},s.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,a.create)(e,d)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},s.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,a.create)(e,m)}catch(e){if(e instanceof a.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/coercers.cjs"}],[1432,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},o=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s};Object.defineProperty(s,"__esModule",{value:!0}),s.FrozenSet=s.FrozenMap=void 0;class i{get size(){return r(this,a,"f").size}[(a=new WeakMap,Symbol.iterator)](){return r(this,a,"f")[Symbol.iterator]()}constructor(e){a.set(this,void 0),o(this,a,new Map(e),"f"),Object.freeze(this)}entries(){return r(this,a,"f").entries()}forEach(e,t){return r(this,a,"f").forEach(((s,a,n)=>e.call(t,s,a,this)))}get(e){return r(this,a,"f").get(e)}has(e){return r(this,a,"f").has(e)}keys(){return r(this,a,"f").keys()}values(){return r(this,a,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}}s.FrozenMap=i;class c{get size(){return r(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return r(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),o(this,n,new Set(e),"f"),Object.freeze(this)}entries(){return r(this,n,"f").entries()}forEach(e,t){return r(this,n,"f").forEach(((s,a,n)=>e.call(t,s,a,this)))}has(e){return r(this,n,"f").has(e)}keys(){return r(this,n,"f").keys()}values(){return r(this,n,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}}s.FrozenSet=c,Object.freeze(i),Object.freeze(i.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/collections.cjs"}],[1433,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1434,{"./misc.cjs":1440,"pony-cause":4866},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.wrapError=s.getErrorMessage=s.isErrorWithStack=s.isErrorWithMessage=s.isErrorWithCode=void 0;const a=e("pony-cause"),n=e("./misc.cjs");function r(e){return"object"==typeof e&&null!==e&&"code"in e}function o(e){return"object"==typeof e&&null!==e&&"message"in e}s.isErrorWithCode=r,s.isErrorWithMessage=o,s.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},s.getErrorMessage=function(e){return o(e)&&"string"==typeof e.message?e.message:(0,n.isNullOrUndefined)(e)?"":String(e)},s.wrapError=function(e,t){if((s=e)instanceof Error||(0,n.isObject)(s)&&"Error"===s.constructor.name){let s;return s=2===Error.length?new Error(t,{cause:e}):new a.ErrorWithCause(t,{cause:e}),r(e)&&(s.code=e.code),s}var s;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/errors.cjs"}],[1435,{"./assert.cjs":1426,"./bytes.cjs":1428,"@metamask/superstruct":2737,"@noble/hashes/sha3":2866},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.remove0x=s.add0x=s.isValidChecksumAddress=s.getChecksumAddress=s.isValidHexAddress=s.assertIsStrictHexString=s.assertIsHexString=s.isStrictHexString=s.isHexString=s.HexChecksumAddressStruct=s.HexAddressStruct=s.StrictHexStruct=s.HexStruct=void 0;const a=e("@metamask/superstruct"),n=e("@noble/hashes/sha3"),r=e("./assert.cjs"),o=e("./bytes.cjs");function i(e){return(0,a.is)(e,s.HexStruct)}function c(e){return(0,a.is)(e,s.StrictHexStruct)}function l(e){(0,r.assert)((0,a.is)(e,s.HexChecksumAddressStruct),"Invalid hex address.");const t=m(e.toLowerCase()),i=m((0,o.bytesToHex)((0,n.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const s=i[t];return(0,r.assert)((0,a.is)(s,(0,a.string)()),"Hash shorter than address."),parseInt(s,16)>7?e.toUpperCase():e})).join("")}`}function d(e){return!!(0,a.is)(e,s.HexChecksumAddressStruct)&&l(e)===e}function m(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}s.HexStruct=(0,a.pattern)((0,a.string)(),/^(?:0x)?[0-9a-f]+$/iu),s.StrictHexStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]+$/iu),s.HexAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-f]{40}$/u),s.HexChecksumAddressStruct=(0,a.pattern)((0,a.string)(),/^0x[0-9a-fA-F]{40}$/u),s.isHexString=i,s.isStrictHexString=c,s.assertIsHexString=function(e){(0,r.assert)(i(e),"Value must be a hexadecimal string.")},s.assertIsStrictHexString=function(e){(0,r.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},s.isValidHexAddress=function(e){return(0,a.is)(e,s.HexAddressStruct)||d(e)},s.getChecksumAddress=l,s.isValidChecksumAddress=d,s.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},s.remove0x=m}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/hex.cjs"}],[1436,{"./assert.cjs":1426,"./base64.cjs":1427,"./bytes.cjs":1428,"./caip-types.cjs":1429,"./checksum.cjs":1430,"./coercers.cjs":1431,"./collections.cjs":1432,"./encryption-types.cjs":1433,"./errors.cjs":1434,"./hex.cjs":1435,"./json.cjs":1437,"./keyring.cjs":1438,"./logging.cjs":1439,"./misc.cjs":1440,"./number.cjs":1441,"./opaque.cjs":1442,"./promise.cjs":1443,"./time.cjs":1444,"./transaction-types.cjs":1445,"./versions.cjs":1446},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./assert.cjs"),s),n(e("./base64.cjs"),s),n(e("./bytes.cjs"),s),n(e("./caip-types.cjs"),s),n(e("./checksum.cjs"),s),n(e("./coercers.cjs"),s),n(e("./collections.cjs"),s),n(e("./encryption-types.cjs"),s),n(e("./errors.cjs"),s),n(e("./hex.cjs"),s),n(e("./json.cjs"),s),n(e("./keyring.cjs"),s),n(e("./logging.cjs"),s),n(e("./misc.cjs"),s),n(e("./number.cjs"),s),n(e("./opaque.cjs"),s),n(e("./promise.cjs"),s),n(e("./time.cjs"),s),n(e("./transaction-types.cjs"),s),n(e("./versions.cjs"),s)}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/index.cjs"}],[1437,{"./assert.cjs":1426,"./misc.cjs":1440,"@metamask/superstruct":2737},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getJsonRpcIdValidator=s.assertIsJsonRpcError=s.isJsonRpcError=s.assertIsJsonRpcFailure=s.isJsonRpcFailure=s.assertIsJsonRpcSuccess=s.isJsonRpcSuccess=s.assertIsJsonRpcResponse=s.isJsonRpcResponse=s.assertIsPendingJsonRpcResponse=s.isPendingJsonRpcResponse=s.JsonRpcResponseStruct=s.JsonRpcFailureStruct=s.JsonRpcSuccessStruct=s.PendingJsonRpcResponseStruct=s.assertIsJsonRpcRequest=s.isJsonRpcRequest=s.assertIsJsonRpcNotification=s.isJsonRpcNotification=s.JsonRpcNotificationStruct=s.JsonRpcRequestStruct=s.JsonRpcParamsStruct=s.JsonRpcErrorStruct=s.JsonRpcIdStruct=s.JsonRpcVersionStruct=s.jsonrpc2=s.getJsonSize=s.getSafeJson=s.isValidJson=s.JsonStruct=s.UnsafeJsonStruct=s.exactOptional=s.object=void 0;const a=e("@metamask/superstruct"),n=e("./assert.cjs"),r=e("./misc.cjs");function o({path:e,branch:t}){const s=e[e.length-1];return(0,r.hasProperty)(t[t.length-2],s)}function i(e){return new a.Struct({...e,type:`optional ${e.type}`,validator:(t,s)=>!o(s)||e.validator(t,s),refiner:(t,s)=>!o(s)||e.refiner(t,s)})}s.object=e=>(0,a.object)(e),s.exactOptional=i;function c(e){return(0,a.create)(e,s.JsonStruct)}s.UnsafeJsonStruct=(0,a.union)([(0,a.literal)(null),(0,a.boolean)(),(0,a.define)("finite number",(e=>(0,a.is)(e,(0,a.number)())&&Number.isFinite(e))),(0,a.string)(),(0,a.array)((0,a.lazy)((()=>s.UnsafeJsonStruct))),(0,a.record)((0,a.string)(),(0,a.lazy)((()=>s.UnsafeJsonStruct)))]),s.JsonStruct=(0,a.coerce)(s.UnsafeJsonStruct,(0,a.any)(),(e=>((0,n.assertStruct)(e,s.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))))),s.isValidJson=function(e){try{return c(e),!0}catch{return!1}},s.getSafeJson=c,s.getJsonSize=function(e){(0,n.assertStruct)(e,s.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},s.jsonrpc2="2.0",s.JsonRpcVersionStruct=(0,a.literal)(s.jsonrpc2),s.JsonRpcIdStruct=(0,a.nullable)((0,a.union)([(0,a.number)(),(0,a.string)()])),s.JsonRpcErrorStruct=(0,s.object)({code:(0,a.integer)(),message:(0,a.string)(),data:i(s.JsonStruct),stack:i((0,a.string)())}),s.JsonRpcParamsStruct=(0,a.union)([(0,a.record)((0,a.string)(),s.JsonStruct),(0,a.array)(s.JsonStruct)]),s.JsonRpcRequestStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:i(s.JsonRpcParamsStruct)}),s.JsonRpcNotificationStruct=(0,s.object)({jsonrpc:s.JsonRpcVersionStruct,method:(0,a.string)(),params:i(s.JsonRpcParamsStruct)}),s.isJsonRpcNotification=function(e){return(0,a.is)(e,s.JsonRpcNotificationStruct)},s.assertIsJsonRpcNotification=function(e,t){(0,n.assertStruct)(e,s.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},s.isJsonRpcRequest=function(e){return(0,a.is)(e,s.JsonRpcRequestStruct)},s.assertIsJsonRpcRequest=function(e,t){(0,n.assertStruct)(e,s.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},s.PendingJsonRpcResponseStruct=(0,a.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:(0,a.optional)((0,a.unknown)()),error:(0,a.optional)(s.JsonRpcErrorStruct)}),s.JsonRpcSuccessStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,result:s.JsonStruct}),s.JsonRpcFailureStruct=(0,s.object)({id:s.JsonRpcIdStruct,jsonrpc:s.JsonRpcVersionStruct,error:s.JsonRpcErrorStruct}),s.JsonRpcResponseStruct=(0,a.union)([s.JsonRpcSuccessStruct,s.JsonRpcFailureStruct]),s.isPendingJsonRpcResponse=function(e){return(0,a.is)(e,s.PendingJsonRpcResponseStruct)},s.assertIsPendingJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},s.isJsonRpcResponse=function(e){return(0,a.is)(e,s.JsonRpcResponseStruct)},s.assertIsJsonRpcResponse=function(e,t){(0,n.assertStruct)(e,s.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},s.isJsonRpcSuccess=function(e){return(0,a.is)(e,s.JsonRpcSuccessStruct)},s.assertIsJsonRpcSuccess=function(e,t){(0,n.assertStruct)(e,s.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},s.isJsonRpcFailure=function(e){return(0,a.is)(e,s.JsonRpcFailureStruct)},s.assertIsJsonRpcFailure=function(e,t){(0,n.assertStruct)(e,s.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},s.isJsonRpcError=function(e){return(0,a.is)(e,s.JsonRpcErrorStruct)},s.assertIsJsonRpcError=function(e,t){(0,n.assertStruct)(e,s.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},s.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:s,permitNull:a}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(s||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||a&&null===e)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/json.cjs"}],[1438,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/keyring.cjs"}],[1439,{debug:4088},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.createProjectLogger=void 0;const n=(0,a(e("debug")).default)("metamask");s.createProjectLogger=function(e){return n.extend(e)},s.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/logging.cjs"}],[1440,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.calculateNumberSize=s.calculateStringSize=s.isASCII=s.isPlainObject=s.ESCAPE_CHARACTERS_REGEXP=s.JsonSize=s.getKnownPropertyNames=s.hasProperty=s.isObject=s.isNullOrUndefined=s.isNonEmptyArray=void 0,s.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},s.isNullOrUndefined=function(e){return null===e||e===undefined},s.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function a(e){return e.charCodeAt(0)<=127}s.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),s.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(s.JsonSize||(s.JsonSize={})),s.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,s.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},s.isASCII=a,s.calculateStringSize=function(e){return e.split("").reduce(((e,t)=>a(t)?e+1:e+2),0)+(e.match(s.ESCAPE_CHARACTERS_REGEXP)??[]).length},s.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/misc.cjs"}],[1441,{"./assert.cjs":1426,"./hex.cjs":1435},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.hexToBigInt=s.hexToNumber=s.bigIntToHex=s.numberToHex=void 0;const a=e("./assert.cjs"),n=e("./hex.cjs");s.numberToHex=e=>((0,a.assert)("number"==typeof e,"Value must be a number."),(0,a.assert)(e>=0,"Value must be a non-negative number."),(0,a.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,n.add0x)(e.toString(16)));s.bigIntToHex=e=>((0,a.assert)("bigint"==typeof e,"Value must be a bigint."),(0,a.assert)(e>=0,"Value must be a non-negative bigint."),(0,n.add0x)(e.toString(16)));s.hexToNumber=e=>{(0,n.assertIsHexString)(e);const t=parseInt(e,16);return(0,a.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};s.hexToBigInt=e=>((0,n.assertIsHexString)(e),BigInt((0,n.add0x)(e)))}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/number.cjs"}],[1442,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/opaque.cjs"}],[1443,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createDeferredPromise=void 0,s.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,s;const a=new Promise(((e,a)=>{t=e,s=a}));return e&&a.catch((e=>{})),{promise:a,resolve:t,reject:s}}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/promise.cjs"}],[1444,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.timeSince=s.inMilliseconds=s.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(s.Duration||(s.Duration={}));const a=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};s.inMilliseconds=function(e,t){return a(e,"count"),e*t},s.timeSince=function(e){return a(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/time.cjs"}],[1445,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1446,{"./assert.cjs":1426,"@metamask/superstruct":2737,semver:5410},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.satisfiesVersionRange=s.gtRange=s.gtVersion=s.assertIsSemVerRange=s.assertIsSemVerVersion=s.isValidSemVerRange=s.isValidSemVerVersion=s.VersionRangeStruct=s.VersionStruct=void 0;const a=e("@metamask/superstruct"),n=e("semver"),r=e("./assert.cjs");s.VersionStruct=(0,a.refine)((0,a.string)(),"Version",(e=>null!==(0,n.valid)(e)||`Expected SemVer version, got "${e}"`)),s.VersionRangeStruct=(0,a.refine)((0,a.string)(),"Version range",(e=>null!==(0,n.validRange)(e)||`Expected SemVer range, got "${e}"`)),s.isValidSemVerVersion=function(e){return(0,a.is)(e,s.VersionStruct)},s.isValidSemVerRange=function(e){return(0,a.is)(e,s.VersionRangeStruct)},s.assertIsSemVerVersion=function(e){(0,r.assertStruct)(e,s.VersionStruct)},s.assertIsSemVerRange=function(e){(0,r.assertStruct)(e,s.VersionRangeStruct)},s.gtVersion=function(e,t){return(0,n.gt)(e,t)},s.gtRange=function(e,t){return(0,n.gtr)(e,t)},s.satisfiesVersionRange=function(e,t){return(0,n.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/browser-passworder>@metamask/utils",file:"node_modules/@metamask/browser-passworder/node_modules/@metamask/utils/dist/versions.cjs"}],[1447,{"../scope/constants.cjs":1454,"../scope/transform.cjs":1458,"../scope/types.cjs":1459,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.setPermittedAccounts=s.setEthAccounts=s.getEthAccounts=void 0;const a=e("@metamask/utils"),n=e("../scope/constants.cjs"),r=e("../scope/transform.cjs"),o=e("../scope/types.cjs"),i=e=>{const{namespace:t}=(0,o.parseScopeString)(e);return t===a.KnownCaipNamespace.Eip155||e===n.KnownWalletScopeString.Eip155},c=e=>{const t=[];return Object.entries(e).forEach((([e,{accounts:s}])=>{s?.forEach((e=>{const{address:s,chainId:n}=(0,a.parseCaipAccountId)(e);i(n)&&((0,a.assertIsStrictHexString)(s),t.push(s))}))})),t};s.getEthAccounts=e=>{const{requiredScopes:t,optionalScopes:s}=e,a=[...c(t),...c(s)];return(0,r.getUniqueArrayItems)(a)};const l=(e,t)=>{const s={};return Object.entries(e).forEach((([e,n])=>{const r=e,c=r===a.KnownCaipNamespace.Wallet,{namespace:l,reference:d}=(0,o.parseScopeString)(r);if(!i(r)&&!c)return void(s[r]=n);let m=[];l&&d&&(m=t.map((e=>`${l}:${d}:${e}`))),s[r]={...n,accounts:m}})),s};s.setEthAccounts=(e,t)=>({...e,requiredScopes:l(e.requiredScopes,t),optionalScopes:l(e.optionalScopes,t)});const d=(e,t)=>{const s={};return Object.entries(e).forEach((([e,n])=>{const i=e,{namespace:c,reference:l}=(0,o.parseScopeString)(i);let d=[];c&&l&&(d=t.reduce(((e,t)=>{const{chain:{namespace:s},address:n}=(0,a.parseCaipAccountId)(t);return c===s&&e.push(`${c}:${l}:${n}`),e}),[]));const m=(0,r.getUniqueArrayItems)(d);s[i]={...n,accounts:m}})),s};s.setPermittedAccounts=(e,t)=>({...e,requiredScopes:d(e.requiredScopes,t),optionalScopes:d(e.optionalScopes,t)})}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/adapters/caip-permission-adapter-accounts.cjs"}],[1448,{"../scope/transform.cjs":1458,"../scope/types.cjs":1459,"@metamask/controller-utils":1468,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.setPermittedChainIds=s.addPermittedChainId=s.setPermittedEthChainIds=s.addPermittedEthChainId=s.getPermittedEthChainIds=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/utils"),r=e("../scope/transform.cjs"),o=e("../scope/types.cjs"),i=e=>{const t=[];return Object.keys(e).forEach((e=>{const{namespace:s,reference:r}=(0,o.parseScopeString)(e);s===n.KnownCaipNamespace.Eip155&&r&&t.push((0,a.toHex)(r))})),t};s.getPermittedEthChainIds=e=>{const{requiredScopes:t,optionalScopes:s}=e,a=[...i(t),...i(s)];return(0,r.getUniqueArrayItems)(a)};s.addPermittedEthChainId=(e,t)=>{const s=`eip155:${(0,n.hexToBigInt)(t).toString(10)}`;return Object.keys(e.requiredScopes).includes(s)||Object.keys(e.optionalScopes).includes(s)?e:{...e,optionalScopes:{...e.optionalScopes,[s]:{accounts:[]}}}};const c=(e,t)=>{const s={};return Object.entries(e).forEach((([e,r])=>{const i=e,{namespace:c,reference:l}=(0,o.parseScopeString)(i);if(l)if(c===n.KnownCaipNamespace.Eip155){const e=(0,a.toHex)(l);t.includes(e)&&(s[i]=r)}else s[i]=r;else s[i]=r})),s};s.setPermittedEthChainIds=(e,t)=>{let a={...e,requiredScopes:c(e.requiredScopes,t),optionalScopes:c(e.optionalScopes,t)};return t.forEach((e=>{a=(0,s.addPermittedEthChainId)(a,e)})),a};const l=(e,t)=>{const s={};return Object.entries(e).forEach((([e,a])=>{const n=e;((0,o.isWalletScope)(n)||t.includes(n))&&(s[n]=a)})),s};s.addPermittedChainId=(e,t)=>Object.keys(e.requiredScopes).includes(t)||Object.keys(e.optionalScopes).includes(t)?e:{...e,optionalScopes:{...e.optionalScopes,[t]:{accounts:[]}}};s.setPermittedChainIds=(e,t)=>{let a={...e,requiredScopes:l(e.requiredScopes,t),optionalScopes:l(e.optionalScopes,t)};return t.forEach((e=>{a=(0,s.addPermittedChainId)(a,e)})),a}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/adapters/caip-permission-adapter-permittedChains.cjs"}],[1449,{"../scope/constants.cjs":1454,"../scope/transform.cjs":1458,"../scope/types.cjs":1459,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getPermittedAccountsForScopes=s.getSessionScopes=s.getInternalScopesObject=void 0;const a=e("@metamask/utils"),n=e("../scope/constants.cjs"),r=e("../scope/transform.cjs"),o=e("../scope/types.cjs");s.getInternalScopesObject=e=>{const t={};return Object.entries(e).forEach((([e,{accounts:s}])=>{t[e]={accounts:s}})),t};const i=(e,{getNonEvmSupportedMethods:t})=>{const s={};return Object.entries(e).forEach((([e,{accounts:r}])=>{const i=e,{namespace:c,reference:l}=(0,o.parseScopeString)(i);let d=[],m=[];i===a.KnownCaipNamespace.Wallet||c===a.KnownCaipNamespace.Wallet?d=l===a.KnownCaipNamespace.Eip155?n.KnownWalletNamespaceRpcMethods[l]:(0,a.isCaipChainId)(i)?t(i):n.KnownWalletRpcMethods:c===a.KnownCaipNamespace.Eip155?(d=n.KnownRpcMethods[c],m=n.KnownNotifications[c]):(d=t(i),m=[]),s[i]={methods:d,notifications:m,accounts:r}})),s};s.getSessionScopes=(e,{getNonEvmSupportedMethods:t})=>(0,r.mergeNormalizedScopes)(i(e.requiredScopes,{getNonEvmSupportedMethods:t}),i(e.optionalScopes,{getNonEvmSupportedMethods:t}));s.getPermittedAccountsForScopes=(e,t)=>{const s=[];return t.forEach((t=>{const a=e.requiredScopes[t],n=e.optionalScopes[t];a&&s.push(...a.accounts),n&&s.push(...n.accounts)})),[...new Set(s)]}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/adapters/caip-permission-adapter-session-scopes.cjs"}],[1450,{"./adapters/caip-permission-adapter-accounts.cjs":1447,"./adapters/caip-permission-adapter-permittedChains.cjs":1448,"./scope/assert.cjs":1452,"./scope/supported.cjs":1457,"./scope/transform.cjs":1458,"./scope/types.cjs":1459,"@metamask/permission-controller":2271,"@metamask/utils":2815,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.generateCaip25Caveat=s.Caip25CaveatMutators=s.caip25EndowmentBuilder=s.caip25CaveatBuilder=s.diffScopesForCaip25CaveatValue=s.createCaip25Caveat=s.Caip25EndowmentPermissionName=s.Caip25CaveatType=void 0;const a=e("@metamask/permission-controller"),n=e("@metamask/utils"),r=e("lodash"),o=e("./adapters/caip-permission-adapter-accounts.cjs"),i=e("./adapters/caip-permission-adapter-permittedChains.cjs"),c=e("./scope/assert.cjs"),l=e("./scope/supported.cjs"),d=e("./scope/transform.cjs"),m=e("./scope/types.cjs");s.Caip25CaveatType="authorizedScopes",s.Caip25EndowmentPermissionName="endowment:caip25";function u(e,t,s){const a=(0,r.cloneDeep)(e),n=t[s];for(const[e,t]of Object.entries(n)){const n=e,r=a[s][n];if(r){const e=t.accounts.filter((e=>!r?.accounts.includes(e)));if(e.length>0){a[s][n]={accounts:e};continue}delete a[s][n]}else a[s][n]=t}return a}function p(e,t,s){return Object.values(e).every((e=>e.accounts.every((e=>(0,l.isSupportedAccount)(e,{getEvmInternalAccounts:t,getNonEvmAccountAddresses:s})))))}s.createCaip25Caveat=e=>({type:s.Caip25CaveatType,value:e}),s.diffScopesForCaip25CaveatValue=u;s.caip25CaveatBuilder=({findNetworkClientIdByChainId:e,listAccounts:t,isNonEvmScopeSupported:a,getNonEvmAccountAddresses:r})=>({type:s.Caip25CaveatType,validator:(o,i,d)=>{if(!(o.value&&(0,n.hasProperty)(o.value,"requiredScopes")&&(0,n.hasProperty)(o.value,"optionalScopes")&&(0,n.hasProperty)(o.value,"isMultichainOrigin")&&(0,n.hasProperty)(o.value,"sessionProperties")&&"boolean"==typeof o.value.isMultichainOrigin&&(0,n.isObject)(o.value.sessionProperties)))throw new Error(`${s.Caip25EndowmentPermissionName} error: Received invalid value for caveat of type "${s.Caip25CaveatType}".`);const{requiredScopes:m,optionalScopes:u,sessionProperties:h}=o.value;if(!Object.keys(h).every((e=>(0,l.isSupportedSessionProperty)(e))))throw new Error(`${s.Caip25EndowmentPermissionName} error: Received unknown session property(s) for caveat of type "${s.Caip25CaveatType}".`);if((0,c.assertIsInternalScopesObject)(m),(0,c.assertIsInternalScopesObject)(u),0===Object.keys(m).length&&0===Object.keys(u).length)throw new Error(`${s.Caip25EndowmentPermissionName} error: Received no scopes for caveat of type "${s.Caip25CaveatType}".`);const g=t=>{try{return e(t),!0}catch{return!1}},f=Object.keys(m).every((e=>(0,l.isSupportedScopeString)(e,{isEvmChainIdSupported:g,isNonEvmScopeSupported:a}))),b=Object.keys(u).every((e=>(0,l.isSupportedScopeString)(e,{isEvmChainIdSupported:g,isNonEvmScopeSupported:a})));if(!f||!b)throw new Error(`${s.Caip25EndowmentPermissionName} error: Received scopeString value(s) for caveat of type "${s.Caip25CaveatType}" that are not supported by the wallet.`);const y=p(m,t,r),w=p(u,t,r);if(!y||!w)throw new Error(`${s.Caip25EndowmentPermissionName} error: Received account value(s) for caveat of type "${s.Caip25CaveatType}" that are not supported by the wallet.`)},merger:(e,t)=>{const s={requiredScopes:(0,d.mergeInternalScopes)(e.requiredScopes,t.requiredScopes),optionalScopes:(0,d.mergeInternalScopes)(e.optionalScopes,t.optionalScopes),sessionProperties:{...e.sessionProperties,...t.sessionProperties},isMultichainOrigin:e.isMultichainOrigin},a=u(e,s,"requiredScopes");return[s,u(a,s,"optionalScopes")]}});s.caip25EndowmentBuilder=Object.freeze({targetName:s.Caip25EndowmentPermissionName,specificationBuilder:()=>({permissionType:a.PermissionType.Endowment,targetName:s.Caip25EndowmentPermissionName,allowedCaveats:[s.Caip25CaveatType],endowmentGetter:e=>null,validator:e=>{if(1!==e.caveats?.length||e.caveats?.[0]?.type!==s.Caip25CaveatType)throw new Error(`${s.Caip25EndowmentPermissionName} error: Invalid caveats. There must be a single caveat of type "${s.Caip25CaveatType}".`)}})}),s.Caip25CaveatMutators={[s.Caip25CaveatType]:{removeScope:function(e,t){const s=Object.entries(e.requiredScopes).filter((([e])=>e!==t)),r=Object.entries(e.optionalScopes).filter((([e])=>e!==t)),o=s.length!==Object.keys(e.requiredScopes).length,i=r.length!==Object.keys(e.optionalScopes).length;if(!o&&!i)return{operation:a.CaveatMutatorOperation.Noop};const c={...e,requiredScopes:Object.fromEntries(s),optionalScopes:Object.fromEntries(r)};if([...s,...r].some((([e])=>{const{namespace:t}=(0,m.parseScopeString)(e);return t!==n.KnownCaipNamespace.Wallet})))return{operation:a.CaveatMutatorOperation.UpdateValue,value:c};return{operation:a.CaveatMutatorOperation.RevokePermission}},removeAccount:function(e,t){const s=(0,r.cloneDeep)(e);[s.requiredScopes,s.optionalScopes].forEach((e=>{Object.entries(e).forEach((([,e])=>{!function(e,t){e.accounts&&(e.accounts=e.accounts.filter(function(e){return t=>(0,n.parseCaipAccountId)(t).address!==e}(t)))}(e,t)}))}));if((0,r.isEqual)(s,e))return{operation:a.CaveatMutatorOperation.Noop};if([...Object.values(s.requiredScopes),...Object.values(s.optionalScopes)].some((({accounts:e})=>e.length>0)))return{operation:a.CaveatMutatorOperation.UpdateValue,value:s};return{operation:a.CaveatMutatorOperation.RevokePermission}}}};s.generateCaip25Caveat=(e,t,a)=>{const n=(0,i.setPermittedChainIds)(e,a),r=(0,o.setPermittedAccounts)(n,t);return{[s.Caip25EndowmentPermissionName]:{caveats:[{type:s.Caip25CaveatType,value:r}]}}}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/caip25Permission.cjs"}],[1451,{"./adapters/caip-permission-adapter-accounts.cjs":1447,"./adapters/caip-permission-adapter-permittedChains.cjs":1448,"./adapters/caip-permission-adapter-session-scopes.cjs":1449,"./caip25Permission.cjs":1450,"./scope/assert.cjs":1452,"./scope/authorization.cjs":1453,"./scope/constants.cjs":1454,"./scope/filter.cjs":1456,"./scope/transform.cjs":1458,"./scope/types.cjs":1459},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.KnownSessionProperties=s.generateCaip25Caveat=s.Caip25CaveatMutators=s.caip25EndowmentBuilder=s.Caip25EndowmentPermissionName=s.createCaip25Caveat=s.Caip25CaveatType=s.caip25CaveatBuilder=s.normalizeAndMergeScopes=s.mergeInternalScopes=s.mergeNormalizedScopes=s.mergeScopeObject=s.normalizeScope=s.getUniqueArrayItems=s.parseScopeString=s.getSupportedScopeObjects=s.KnownWalletScopeString=s.KnownNotifications=s.KnownWalletNamespaceRpcMethods=s.KnownRpcMethods=s.KnownWalletRpcMethods=s.assertIsInternalScopeString=s.bucketScopes=s.validateAndNormalizeScopes=s.getPermittedAccountsForScopes=s.getSessionScopes=s.getInternalScopesObject=s.addPermittedChainId=s.setPermittedChainIds=s.setPermittedEthChainIds=s.addPermittedEthChainId=s.getPermittedEthChainIds=s.setPermittedAccounts=s.setEthAccounts=s.getEthAccounts=void 0;var a=e("./adapters/caip-permission-adapter-accounts.cjs");Object.defineProperty(s,"getEthAccounts",{enumerable:!0,get:function(){return a.getEthAccounts}}),Object.defineProperty(s,"setEthAccounts",{enumerable:!0,get:function(){return a.setEthAccounts}}),Object.defineProperty(s,"setPermittedAccounts",{enumerable:!0,get:function(){return a.setPermittedAccounts}});var n=e("./adapters/caip-permission-adapter-permittedChains.cjs");Object.defineProperty(s,"getPermittedEthChainIds",{enumerable:!0,get:function(){return n.getPermittedEthChainIds}}),Object.defineProperty(s,"addPermittedEthChainId",{enumerable:!0,get:function(){return n.addPermittedEthChainId}}),Object.defineProperty(s,"setPermittedEthChainIds",{enumerable:!0,get:function(){return n.setPermittedEthChainIds}}),Object.defineProperty(s,"setPermittedChainIds",{enumerable:!0,get:function(){return n.setPermittedChainIds}}),Object.defineProperty(s,"addPermittedChainId",{enumerable:!0,get:function(){return n.addPermittedChainId}});var r=e("./adapters/caip-permission-adapter-session-scopes.cjs");Object.defineProperty(s,"getInternalScopesObject",{enumerable:!0,get:function(){return r.getInternalScopesObject}}),Object.defineProperty(s,"getSessionScopes",{enumerable:!0,get:function(){return r.getSessionScopes}}),Object.defineProperty(s,"getPermittedAccountsForScopes",{enumerable:!0,get:function(){return r.getPermittedAccountsForScopes}});var o=e("./scope/authorization.cjs");Object.defineProperty(s,"validateAndNormalizeScopes",{enumerable:!0,get:function(){return o.validateAndNormalizeScopes}}),Object.defineProperty(s,"bucketScopes",{enumerable:!0,get:function(){return o.bucketScopes}});var i=e("./scope/assert.cjs");Object.defineProperty(s,"assertIsInternalScopeString",{enumerable:!0,get:function(){return i.assertIsInternalScopeString}});var c=e("./scope/constants.cjs");Object.defineProperty(s,"KnownWalletRpcMethods",{enumerable:!0,get:function(){return c.KnownWalletRpcMethods}}),Object.defineProperty(s,"KnownRpcMethods",{enumerable:!0,get:function(){return c.KnownRpcMethods}}),Object.defineProperty(s,"KnownWalletNamespaceRpcMethods",{enumerable:!0,get:function(){return c.KnownWalletNamespaceRpcMethods}}),Object.defineProperty(s,"KnownNotifications",{enumerable:!0,get:function(){return c.KnownNotifications}}),Object.defineProperty(s,"KnownWalletScopeString",{enumerable:!0,get:function(){return c.KnownWalletScopeString}});var l=e("./scope/filter.cjs");Object.defineProperty(s,"getSupportedScopeObjects",{enumerable:!0,get:function(){return l.getSupportedScopeObjects}});var d=e("./scope/types.cjs");Object.defineProperty(s,"parseScopeString",{enumerable:!0,get:function(){return d.parseScopeString}});var m=e("./scope/transform.cjs");Object.defineProperty(s,"getUniqueArrayItems",{enumerable:!0,get:function(){return m.getUniqueArrayItems}}),Object.defineProperty(s,"normalizeScope",{enumerable:!0,get:function(){return m.normalizeScope}}),Object.defineProperty(s,"mergeScopeObject",{enumerable:!0,get:function(){return m.mergeScopeObject}}),Object.defineProperty(s,"mergeNormalizedScopes",{enumerable:!0,get:function(){return m.mergeNormalizedScopes}}),Object.defineProperty(s,"mergeInternalScopes",{enumerable:!0,get:function(){return m.mergeInternalScopes}}),Object.defineProperty(s,"normalizeAndMergeScopes",{enumerable:!0,get:function(){return m.normalizeAndMergeScopes}});var u=e("./caip25Permission.cjs");Object.defineProperty(s,"caip25CaveatBuilder",{enumerable:!0,get:function(){return u.caip25CaveatBuilder}}),Object.defineProperty(s,"Caip25CaveatType",{enumerable:!0,get:function(){return u.Caip25CaveatType}}),Object.defineProperty(s,"createCaip25Caveat",{enumerable:!0,get:function(){return u.createCaip25Caveat}}),Object.defineProperty(s,"Caip25EndowmentPermissionName",{enumerable:!0,get:function(){return u.Caip25EndowmentPermissionName}}),Object.defineProperty(s,"caip25EndowmentBuilder",{enumerable:!0,get:function(){return u.caip25EndowmentBuilder}}),Object.defineProperty(s,"Caip25CaveatMutators",{enumerable:!0,get:function(){return u.Caip25CaveatMutators}}),Object.defineProperty(s,"generateCaip25Caveat",{enumerable:!0,get:function(){return u.generateCaip25Caveat}});var p=e("./scope/constants.cjs");Object.defineProperty(s,"KnownSessionProperties",{enumerable:!0,get:function(){return p.KnownSessionProperties}})}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/index.cjs"}],[1452,{"./errors.cjs":1455,"./supported.cjs":1457,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.assertIsInternalScopesObject=s.assertIsInternalScopeString=s.assertIsExternalScopesObject=s.assertScopesSupported=s.assertScopeSupported=void 0;const a=e("@metamask/utils"),n=e("./errors.cjs"),r=e("./supported.cjs");s.assertScopeSupported=(e,t,{isEvmChainIdSupported:s,isNonEvmScopeSupported:a,getNonEvmSupportedMethods:o})=>{const{methods:i,notifications:c}=t;if(!(0,r.isSupportedScopeString)(e,{isEvmChainIdSupported:s,isNonEvmScopeSupported:a}))throw n.Caip25Errors.requestedChainsNotSupportedError();if(!i.every((t=>(0,r.isSupportedMethod)(e,t,{getNonEvmSupportedMethods:o}))))throw n.Caip25Errors.requestedMethodsNotSupportedError();if(c&&!c.every((t=>(0,r.isSupportedNotification)(e,t))))throw n.Caip25Errors.requestedNotificationsNotSupportedError()};function o(e){if("object"!=typeof e||null===e)throw new Error("ExternalScopeObject must be an object");if((0,a.hasProperty)(e,"references")&&(!Array.isArray(e.references)||!e.references.every(a.isCaipReference)))throw new Error("ExternalScopeObject.references must be an array of CaipReference");if((0,a.hasProperty)(e,"accounts")&&(!Array.isArray(e.accounts)||!e.accounts.every(a.isCaipAccountId)))throw new Error("ExternalScopeObject.accounts must be an array of CaipAccountId");if((0,a.hasProperty)(e,"methods")&&(!Array.isArray(e.methods)||!e.methods.every((e=>"string"==typeof e))))throw new Error("ExternalScopeObject.methods must be an array of strings");if((0,a.hasProperty)(e,"notifications")&&(!Array.isArray(e.notifications)||!e.notifications.every((e=>"string"==typeof e))))throw new Error("ExternalScopeObject.notifications must be an array of strings");if((0,a.hasProperty)(e,"rpcDocuments")&&(!Array.isArray(e.rpcDocuments)||!e.rpcDocuments.every((e=>"string"==typeof e))))throw new Error("ExternalScopeObject.rpcDocuments must be an array of strings");if((0,a.hasProperty)(e,"rpcEndpoints")&&(!Array.isArray(e.rpcEndpoints)||!e.rpcEndpoints.every((e=>"string"==typeof e))))throw new Error("ExternalScopeObject.rpcEndpoints must be an array of strings")}function i(e){if("string"!=typeof e||!(0,a.isCaipNamespace)(e)&&!(0,a.isCaipChainId)(e))throw new Error("scopeString is not a valid ExternalScopeString")}function c(e){if("object"!=typeof e||null===e)throw new Error("InternalScopeObject must be an object");if(!(0,a.hasProperty)(e,"accounts")||!Array.isArray(e.accounts)||!e.accounts.every(a.isCaipAccountId))throw new Error("InternalScopeObject.accounts must be an array of CaipAccountId")}function l(e){if("string"!=typeof e||e!==a.KnownCaipNamespace.Wallet&&!(0,a.isCaipChainId)(e))throw new Error("scopeString is not a valid InternalScopeString")}s.assertScopesSupported=(e,{isEvmChainIdSupported:t,isNonEvmScopeSupported:a,getNonEvmSupportedMethods:n})=>{for(const[r,o]of Object.entries(e))(0,s.assertScopeSupported)(r,o,{isEvmChainIdSupported:t,isNonEvmScopeSupported:a,getNonEvmSupportedMethods:n})},s.assertIsExternalScopesObject=function(e){if("object"!=typeof e||null===e)throw new Error("ExternalScopesObject must be an object");for(const[t,s]of Object.entries(e))i(t),o(s)},s.assertIsInternalScopeString=l,s.assertIsInternalScopesObject=function(e){if("object"!=typeof e||null===e)throw new Error("InternalScopesObject must be an object");for(const[t,s]of Object.entries(e))l(t),c(s)}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/assert.cjs"}],[1453,{"./filter.cjs":1456,"./transform.cjs":1458,"./validation.cjs":1460},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bucketScopes=s.validateAndNormalizeScopes=void 0;const a=e("./filter.cjs"),n=e("./transform.cjs"),r=e("./validation.cjs");s.validateAndNormalizeScopes=(e,t)=>{const{validRequiredScopes:s,validOptionalScopes:a}=(0,r.getValidScopes)(e,t);return{normalizedRequiredScopes:(0,n.normalizeAndMergeScopes)(s),normalizedOptionalScopes:(0,n.normalizeAndMergeScopes)(a)}};s.bucketScopes=(e,{isEvmChainIdSupported:t,isEvmChainIdSupportable:s,isNonEvmScopeSupported:n,getNonEvmSupportedMethods:r})=>{const{supportedScopes:o,unsupportedScopes:i}=(0,a.bucketScopesBySupport)(e,{isEvmChainIdSupported:t,isNonEvmScopeSupported:n,getNonEvmSupportedMethods:r}),{supportedScopes:c,unsupportedScopes:l}=(0,a.bucketScopesBySupport)(i,{isEvmChainIdSupported:s,isNonEvmScopeSupported:n,getNonEvmSupportedMethods:r});return{supportedScopes:o,supportableScopes:c,unsupportableScopes:l}}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/authorization.cjs"}],[1454,{"@metamask/api-specs":1463},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.KnownSessionProperties=s.KnownNotifications=s.KnownWalletNamespaceRpcMethods=s.KnownRpcMethods=s.Eip1193OnlyMethods=s.KnownWalletRpcMethods=s.CaipReferenceRegexes=s.KnownWalletScopeString=void 0;const n=a(e("@metamask/api-specs"));var r;!function(e){e.Eip155="wallet:eip155"}(r||(s.KnownWalletScopeString=r={})),s.CaipReferenceRegexes={eip155:/^(0|[1-9][0-9]*)$/u,bip122:/.*/u,solana:/.*/u},s.KnownWalletRpcMethods=["wallet_registerOnboarding","wallet_scanQRCode"];const o=["wallet_addEthereumChain"];s.Eip1193OnlyMethods=["wallet_switchEthereumChain","wallet_getPermissions","wallet_requestPermissions","wallet_revokePermissions","eth_requestAccounts","eth_accounts","eth_coinbase","net_version","metamask_logWeb3ShimUsage","metamask_getProviderState","metamask_sendDomainMetadata","wallet_registerOnboarding"];const i=n.default.methods.map((({name:e})=>e)).filter((e=>!o.includes(e))).filter((e=>!s.KnownWalletRpcMethods.includes(e))).filter((e=>!s.Eip1193OnlyMethods.includes(e)));var c;s.KnownRpcMethods={eip155:i,bip122:[],solana:[]},s.KnownWalletNamespaceRpcMethods={eip155:o,bip122:[],solana:[]},s.KnownNotifications={eip155:["eth_subscription"],bip122:[],solana:[]},function(e){e.SolanaAccountChangedNotifications="solana_accountChanged_notifications"}(c||(s.KnownSessionProperties=c={}))}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/constants.cjs"}],[1455,{"@metamask/rpc-errors":2404},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.Caip25Errors=void 0;const a=e("@metamask/rpc-errors");s.Caip25Errors={requestedChainsNotSupportedError:()=>new a.JsonRpcError(5100,"Requested chains are not supported"),requestedMethodsNotSupportedError:()=>new a.JsonRpcError(5101,"Requested methods are not supported"),requestedNotificationsNotSupportedError:()=>new a.JsonRpcError(5102,"Requested notifications are not supported"),unknownMethodsRequestedError:()=>new a.JsonRpcError(5201,"Unknown method(s) requested"),unknownNotificationsRequestedError:()=>new a.JsonRpcError(5202,"Unknown notification(s) requested")}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/errors.cjs"}],[1456,{"./assert.cjs":1452,"./supported.cjs":1457},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getSupportedScopeObjects=s.bucketScopesBySupport=void 0;const a=e("./assert.cjs"),n=e("./supported.cjs");s.bucketScopesBySupport=(e,{isEvmChainIdSupported:t,isNonEvmScopeSupported:s,getNonEvmSupportedMethods:n})=>{const r={},o={};for(const[i,c]of Object.entries(e)){(0,a.assertIsInternalScopeString)(i);try{(0,a.assertScopeSupported)(i,c,{isEvmChainIdSupported:t,isNonEvmScopeSupported:s,getNonEvmSupportedMethods:n}),r[i]=c}catch{o[i]=c}}return{supportedScopes:r,unsupportedScopes:o}};const r=(e,t,{getNonEvmSupportedMethods:s})=>{const{methods:a,notifications:r}=t,o=a.filter((t=>(0,n.isSupportedMethod)(e,t,{getNonEvmSupportedMethods:s}))),i=r.filter((t=>(0,n.isSupportedNotification)(e,t)));return{...t,methods:o,notifications:i}};s.getSupportedScopeObjects=(e,{getNonEvmSupportedMethods:t})=>{const s={};for(const[n,o]of Object.entries(e))(0,a.assertIsInternalScopeString)(n),s[n]=r(n,o,{getNonEvmSupportedMethods:t});return s}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/filter.cjs"}],[1457,{"./constants.cjs":1454,"./types.cjs":1459,"@metamask/controller-utils":1468,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isSupportedSessionProperty=s.isSupportedNotification=s.isSupportedMethod=s.isSupportedAccount=s.isSupportedScopeString=void 0;const a=e("@metamask/controller-utils"),n=e("@metamask/utils"),r=e("./constants.cjs"),o=e("./types.cjs");s.isSupportedScopeString=(e,{isEvmChainIdSupported:t,isNonEvmScopeSupported:s})=>{const{namespace:i,reference:c}=(0,o.parseScopeString)(e);switch(i){case n.KnownCaipNamespace.Wallet:return!(0,n.isCaipChainId)(e)||c===n.KnownCaipNamespace.Eip155||s(e);case n.KnownCaipNamespace.Eip155:return!c||r.CaipReferenceRegexes.eip155.test(c)&&t((0,a.toHex)(c));default:return!!(0,n.isCaipChainId)(e)&&s(e)}};s.isSupportedAccount=(e,{getEvmInternalAccounts:t,getNonEvmAccountAddresses:s})=>{const{address:r,chainId:o,chain:{namespace:i,reference:c}}=(0,n.parseCaipAccountId)(e),l=()=>t().some((e=>["eip155:eoa","eip155:erc4337"].includes(e.type)&&(0,a.isEqualCaseInsensitive)(r,e.address))),d=()=>s(o).includes(e);switch(i){case n.KnownCaipNamespace.Wallet:return c===n.KnownCaipNamespace.Eip155?l():d();case n.KnownCaipNamespace.Eip155:return l();default:return d()}};s.isSupportedMethod=(e,t,{getNonEvmSupportedMethods:s})=>{const{namespace:a,reference:i}=(0,o.parseScopeString)(e);if(!a)return!1;const c=()=>(0,n.isCaipChainId)(e)&&s(e).includes(t);return a===n.KnownCaipNamespace.Wallet?i?i===n.KnownCaipNamespace.Eip155?r.KnownWalletNamespaceRpcMethods[i].includes(t):c():r.KnownWalletRpcMethods.includes(t):a===n.KnownCaipNamespace.Eip155?r.KnownRpcMethods[a].includes(t):c()};s.isSupportedNotification=(e,t)=>{const{namespace:s}=(0,o.parseScopeString)(e);return s===n.KnownCaipNamespace.Eip155&&r.KnownNotifications[s].includes(t)};s.isSupportedSessionProperty=e=>Object.values(r.KnownSessionProperties).includes(e)}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/supported.cjs"}],[1458,{"./types.cjs":1459,lodash:4718},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.normalizeAndMergeScopes=s.mergeInternalScopes=s.mergeNormalizedScopes=s.mergeScopeObject=s.normalizeScope=s.getUniqueArrayItems=void 0;const a=e("lodash"),n=e("./types.cjs");s.getUniqueArrayItems=e=>Array.from(new Set(e));s.normalizeScope=(e,t)=>{const{references:s,...r}=t,{namespace:o,reference:i}=(0,n.parseScopeString)(e),c={accounts:[],...r};return o&&!i&&s!==undefined&&s.length>0?Object.fromEntries(s.map((e=>[`${o}:${e}`,(0,a.cloneDeep)(c)]))):{[e]:c}};s.mergeScopeObject=(e,t)=>{const a={methods:(0,s.getUniqueArrayItems)([...e.methods,...t.methods]),notifications:(0,s.getUniqueArrayItems)([...e.notifications,...t.notifications]),accounts:(0,s.getUniqueArrayItems)([...e.accounts,...t.accounts])};return(e.rpcDocuments||t.rpcDocuments)&&(a.rpcDocuments=(0,s.getUniqueArrayItems)([...e.rpcDocuments??[],...t.rpcDocuments??[]])),(e.rpcEndpoints||t.rpcEndpoints)&&(a.rpcEndpoints=(0,s.getUniqueArrayItems)([...e.rpcEndpoints??[],...t.rpcEndpoints??[]])),a};s.mergeNormalizedScopes=(e,t)=>{const a={};return Object.entries(e).forEach((([e,n])=>{const r=e,o=t[r];a[r]=o?(0,s.mergeScopeObject)(n,o):n})),Object.entries(t).forEach((([t,s])=>{const n=t;e[n]||(a[n]=s)})),a};s.mergeInternalScopes=(e,t)=>{const n=(0,a.cloneDeep)(e);return Object.entries(t).forEach((([e,t])=>{const a=e,r=n[a];n[a]=r?{accounts:(0,s.getUniqueArrayItems)([...r.accounts,...t.accounts])}:t})),n};s.normalizeAndMergeScopes=e=>{let t={};return Object.keys(e).forEach((a=>{const n=(0,s.normalizeScope)(a,e[a]);t=(0,s.mergeNormalizedScopes)(t,n)})),t}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/transform.cjs"}],[1459,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.isWalletScope=s.parseScopeString=void 0;const a=e("@metamask/utils");s.parseScopeString=e=>(0,a.isCaipNamespace)(e)?{namespace:e}:(0,a.isCaipChainId)(e)?(0,a.parseCaipChainId)(e):{};s.isWalletScope=e=>{const{namespace:t}=(0,s.parseScopeString)(e);return t===a.KnownCaipNamespace.Wallet}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/types.cjs"}],[1460,{"./types.cjs":1459,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.getValidScopes=s.isValidScope=void 0;const a=e("@metamask/utils"),n=e("./types.cjs");s.isValidScope=(e,t)=>{const{namespace:s,reference:r}=(0,n.parseScopeString)(e);if(!s)return!1;const{references:o,methods:i,notifications:c,accounts:l,rpcDocuments:d,rpcEndpoints:m,...u}=t;if(!i||!c)return!1;if(!("wallet"===s||r||o&&0!==o.length))return!1;if(o){if(r)return!1;if(!o.every((e=>(0,a.isCaipReference)(e))))return!1}if(!i.every((e=>"string"==typeof e&&""!==e.trim())))return!1;return!!c.every((e=>"string"==typeof e&&""!==e.trim()))&&!(Object.keys(u).length>0)};s.getValidScopes=(e,t)=>{const a={};for(const[t,n]of Object.entries(e||{}))(0,s.isValidScope)(t,n)&&(a[t]={accounts:[],...n});const n={};for(const[e,a]of Object.entries(t||{}))(0,s.isValidScope)(e,a)&&(n[e]={accounts:[],...a});return{validRequiredScopes:a,validOptionalScopes:n}}}}},{package:"@metamask/chain-agnostic-permission",file:"node_modules/@metamask/chain-agnostic-permission/dist/scope/validation.cjs"}],[1461,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={openrpc:"1.2.4",info:{title:"MetaMask MultiChain API",version:"1.0.0",description:"This provides the specs for the MultiChain API Layer for the MetaMask API"},methods:[{name:"wallet_notify",paramStructure:"by-name",params:[{name:"scope",description:"a valid `scope` string that has been previously authorized via `provider_authorize`",required:!0,schema:{$ref:"#/components/schemas/ScopeString"}},{name:"notification",description:"an object containing a JSON-RPC notification with `method` and `params`",deprecated:!1,required:!0,schema:{type:"object",properties:{method:{type:"string"},params:!0}}}]},{name:"wallet_invokeMethod",paramStructure:"by-name",params:[{name:"scope",description:"a valid `scope` string that has been previously authorized via `provider_authorize`",required:!0,schema:{$ref:"#/components/schemas/ScopeString"}},{name:"request",description:"an object containing a JSON-RPC request with `method` and `params`",deprecated:!1,required:!0,schema:{type:"object",properties:{method:{type:"string"},params:!0}}}],result:{name:"wallet_invokeMethodResult",schema:!0},examples:[{name:"wallet_invokeMethodExample",params:[{name:"scope",value:"eip155:1"},{name:"request",value:{method:"eth_getBalance",params:[]}}],result:{name:"wallet_invokeMethodResult",value:"0x1"}}]},{name:"wallet_revokeSession",description:"The `wallet_revokeSession` method revokes the entire active session.",params:[],result:{name:"wallet_revokeSessionResult",schema:{type:"boolean"}},examples:[{name:"wallet_revokeSessionExample",params:[],result:{name:"wallet_revokeSessionExampleResult",value:!0}}],errors:[{$ref:"#/components/errors/UnknownError"}]},{name:"wallet_sessionChanged",paramStructure:"by-name",description:"This notification is published by the wallet to notify the callers of updates to a shared session's authorization scopes. The event payload contains the new `sessionScopes`.",params:[{name:"sessionScopes",schema:{$ref:"#/components/schemas/SessionScopes"}}],examples:[{name:"wallet_sessionChangedExample",description:"Example of a wallet_sessionChanged notification.",params:[{name:"sessionScopes",value:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain","personal_sign","eth_signTypedData_v4"],notifications:[]}}}]}]},{name:"wallet_getSession",description:"The `wallet_getSession` method returns an active session.",params:[],result:{name:"wallet_getSessionResult",schema:{type:"object",properties:{sessionScopes:{$ref:"#/components/schemas/SessionScopes"}}}},examples:[{name:"wallet_getSessionExample",description:"Example of a getSession request.",params:[],result:{name:"wallet_getSessionResultExample",value:{sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain","personal_sign","eth_signTypedData_v4"],notifications:[]}}}}}]},{name:"wallet_createSession",paramStructure:"by-name",params:[{name:"requiredScopes",description:"Scopes that the wallet must support in order to be used with this provider.",schema:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}}},{name:"optionalScopes",description:"Scopes that the wallet may support in order to be used with this provider.",schema:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}}},{name:"sessionProperties",description:"Properties that the wallet may use to determine if the session is valid.",schema:{type:"object",properties:{expiry:{type:"string",format:"date-time"}}}}],result:{name:"wallet_createSessionResult",schema:{type:"object",properties:{sessionScopes:{$ref:"#/components/schemas/SessionScopes"},sessionProperties:{type:"object",properties:{expiry:{type:"string",format:"date-time"}}}}}},examples:[{name:"wallet_createSessionEthExample",description:"Example of a createSession request.",params:[{name:"requiredScopes",value:{"eip155:1337":{methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{methods:["wallet_addEthereumChain","personal_sign","eth_signTypedData_v4"],notifications:[]}}},{name:"sessionProperties",value:{expiry:"2022-12-24T17:07:31+00:00"}}],result:{name:"wallet_createSessionResultExample",value:{sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain","personal_sign","eth_signTypedData_v4"],notifications:[]},sessionProperties:{expiry:"2022-11-31T17:07:31+00:00"}}}}},{name:"wallet_createSessionEthUnsupportedMethodsExample",description:"Example of a createSession request with unsupported eip155 methods.",params:[{name:"optionalScopes",value:{"eip155:1337":{methods:["not_supported"],notifications:[]},wallet:{methods:[],notifications:[]},"wallet:eip155":{methods:[],notifications:[]}}},{name:"sessionProperties",value:{expiry:"2022-12-24T17:07:31+00:00"}}],result:{name:"wallet_createSessionEthUnsupportedMethodsResultExample",value:{sessionScopes:{"eip155:1337":{accounts:["eip155:1337:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},wallet:{accounts:[],methods:["wallet_registerOnboarding","wallet_scanQRCode"],notifications:[]},"wallet:eip155":{accounts:["wallet:eip155:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_addEthereumChain","personal_sign","eth_signTypedData_v4"],notifications:[]}},sessionProperties:{expiry:"2022-11-31T17:07:31+00:00"}}}},{name:"wallet_createSessionUnsupportedScopesExample",description:"Example of a createSession request with unsupported scopes.",params:[{name:"requiredScopes",value:{foobar:{methods:["eth_getBalance"],notifications:["eth_subscription"]}}}],result:{name:"wallet_createSessionUnsupportedScopesResultExample",value:{sessionScopes:{"eip155:1":{accounts:["eip155:1:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]},"eip155:59144":{accounts:["eip155:59144:0x5cfe73b6021e818b776b421b1c4db2474086a7e1"],methods:["wallet_watchAsset","eth_sendTransaction","eth_decrypt","eth_getEncryptionPublicKey","web3_clientVersion","eth_subscribe","eth_unsubscribe","eth_blockNumber","eth_call","eth_chainId","eth_estimateGas","eth_feeHistory","eth_gasPrice","eth_getBalance","eth_getBlockByHash","eth_getBlockByNumber","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getCode","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getProof","eth_getStorageAt","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionByHash","eth_getTransactionCount","eth_getTransactionReceipt","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_newBlockFilter","eth_newFilter","eth_newPendingTransactionFilter","eth_sendRawTransaction","eth_syncing","eth_uninstallFilter"],notifications:["eth_subscription"]}}},sessionProperties:{expiry:"2022-11-31T17:07:31+00:00"}}}],errors:[{$ref:"#/components/errors/UnknownError"},{code:5100,message:"Requested networks are not supported"},{code:5101,message:"Requested methods are not supported"},{code:5102,message:"Requested notifications are not supported"},{code:5300,message:"Invalid scopedProperties requested"},{code:5301,message:"scopedProperties can only be outside of sessionScopes"},{code:5302,message:"Invalid sessionProperties requested"}]}],components:{errors:{UnknownError:{code:5e3,message:"Unknown error with request"}},schemas:{SessionScopes:{type:"object",patternProperties:{"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?":{$ref:"#/components/schemas/Scope"}}},ScopeString:{type:"string",pattern:"[-a-z0-9]{3,8}(:[-_a-zA-Z0-9]{1,32})?"},Scope:{type:"object",title:"Scope",description:"Scope for a multi-chain connection",additionalProperties:!0,required:["notifications","methods"],properties:{scopes:{type:"array",items:{$ref:"#/components/schemas/ScopeString"}},methods:{description:"Methods that the wallet must support in order to be used with this provider.",type:"array",items:{type:"string"}},notifications:{description:"Notifications that the wallet must support in order to be used with this provider.",type:"array",items:{type:"string"}},rpcEndpoints:{description:"JSON-RPC endpoints for this namespace.",type:"array",items:{type:"string",format:"uri"}},rpcDocuments:{type:"array",description:"OpenRPC documents that define RPC methods in which to anchor the methods authorized in a CAIP-25 interaction.",items:{type:"string",format:"uri"}}}}}}}}}},{package:"@metamask/chain-agnostic-permission>@metamask/api-specs",file:"node_modules/@metamask/chain-agnostic-permission/node_modules/@metamask/api-specs/dist/build/multichain-openrpc.json"}],[1462,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={openrpc:"1.2.4",info:{title:"JSON-RPC API",version:"1.0.0",description:"This section provides an interactive reference for MetaMask's Wallet JSON-RPC API. The API builds on a set of standard Ethereum methods with MetaMask-specific enhancements, and is designed for seamless integration into dapps."},methods:[{name:"wallet_addEthereumChain",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Multichain"}],summary:"Adds an Ethereum chain to the wallet.",description:"Creates a confirmation asking the user to add the specified chain to the wallet application. The caller must specify a chain ID and some chain metadata. Specified by [EIP-3085](https://eips.ethereum.org/EIPS/eip-3085).",params:[{name:"Chain",schema:{$ref:"#/components/schemas/AddEthereumChainParameter"}}],errors:[{code:-32602,message:"Expected null or array with at least one valid string HTTPS URL 'blockExplorerUrl'. Received: ${blockExplorerUrls}"},{code:-32602,message:"Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${chainId}"},{code:-32602,message:'Invalid chain ID "${_chainId}": numerical value greater than max safe value. Received:\n${chainId}'},{code:-32602,message:"May not specify default MetaMask chain."},{code:-32602,message:"Expected 2-6 character string 'nativeCurrency.symbol'. Received:\n${ticker}"},{code:-32602,message:"nativeCurrency.symbol does not match currency symbol for a network the user already has added with the same chainId. Received:\n${ticker}"}],result:{name:"Null response",description:"This method returns `null` if the chain is added.",schema:{type:"null"}},examples:[{name:"wallet_addEthereumChain example",params:[{name:"Chain",value:{chainId:"0x64",chainName:"Gnosis",rpcUrls:["https://rpc.gnosischain.com"],iconUrls:["https://xdaichain.com/fake/example/url/xdai.svg","https://xdaichain.com/fake/example/url/xdai.png"],nativeCurrency:{name:"XDAI",symbol:"XDAI",decimals:18},blockExplorerUrls:["https://blockscout.com/poa/xdai/"]}}],result:{name:"Null response",value:"null"}}]},{name:"wallet_switchEthereumChain",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Switches the wallet's active Ethereum chain.",description:"Requests that the wallet switches its active Ethereum chain. Specified by [EIP-3326](https://eips.ethereum.org/EIPS/eip-3326).",params:[{name:"Chain",schema:{title:"Chain",description:"Object containing the chain ID to switch to.",type:"object",required:["chainId"],properties:{chainId:{description:"The chain ID as a `0x`-prefixed hexadecimal string, as returned by the `eth_chainId` method.",type:"string"}}}}],result:{name:"Null response",description:"This method returns `null` if the active chain is switched.",schema:{type:"null"}},errors:[{code:4902,message:"Unrecognized chain ID. Try adding the chain using wallet_addEthereumChain first."}],examples:[{name:"wallet_switchEthereumChain example",params:[{name:"Chain",value:{chainId:"0x64"}}],result:{name:"Null response",value:"null"}}]},{name:"wallet_getPermissions",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Gets the user's permissions.",description:"Gets the user's permissions. Specified by [EIP-2255](https://eips.ethereum.org/EIPS/eip-2255).",params:[],result:{name:"Permissions list",schema:{$ref:"#/components/schemas/PermissionsList"}},examples:[{name:"wallet_getPermissions example",params:[],result:{name:"Permission list",value:{eth_accounts:{}}}}]},{name:"wallet_requestPermissions",tags:[{$ref:"#/components/tags/MetaMask"}],summary:"Requests additional permissions.",description:"Requests additional permissions from the user. This method accepts a single permission per call. Specified by [EIP-2255](https://eips.ethereum.org/EIPS/eip-2255).",params:[{name:"Permission",required:!0,schema:{title:"Permission",description:"Object containing the permission to request.",type:"object",properties:{permission_name:{type:"object",description:"The permission object. `permission_name` is the name of the permission being requested.",additionalProperties:!0}}}}],result:{name:"Permissions list",schema:{$ref:"#/components/schemas/PermissionsList"}},examples:[{name:"wallet_requestPermissions example",params:[{name:"Permission",value:{eth_accounts:{}}}],result:{name:"Permission list",value:{eth_accounts:{}}}}],errors:[{$ref:"#/components/errors/UserRejected"}]},{name:"wallet_revokePermissions",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Experimental"}],summary:"Revokes the current dapp permissions.",description:"Revokes previously granted permissions for the current dapp identified by its origin. This method accepts a single permission per call. Specified by [MIP-2](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md) and only available for the MetaMask browser extension.",params:[{name:"Permission",required:!0,schema:{title:"Permission",description:"Object containing the permission to revoke.",type:"object",properties:{permission_name:{type:"object",description:"The permission object. `permission_name` is the name of the permission being revoked.",additionalProperties:!0}}}}],result:{name:"Null response",description:"This method returns `null` if the permission is revoked.",schema:{type:"null"}},errors:[],examples:[{name:"wallet_revokePermissions example",params:[{name:"Permission",value:{eth_accounts:{}}}],result:{name:"Null response",value:"null"}}]},{name:"personal_sign",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],summary:"Presents a plain text signature challenge to the user.",description:"Presents a plain text signature challenge to the user and returns the signed response. Prepends a safe prefix to the signed message to prevent the challenge tricking users into signing a financial transaction. <br><br> MetaMask implements `personal_sign` similarly to the Go Ethereum client's `eth_sign` implementation. MetaMask's `personal_sign` doesn't accept a password. <br><br> This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",deprecated:!1,params:[{name:"Challenge",required:!0,description:"A hex-encoded UTF-8 string to present to the user. See how to encode a string like this in the [`browser-string-hexer`](https://github.com/danfinlay/browser-string-hexer) module.",schema:{type:"string",pattern:"^0x[a-fA-F\\d]+$"}},{name:"Address",required:!0,description:"The address of the requested signing account.",schema:{type:"string",pattern:"^0x[0-9a-fA-F]{40}$"}}],result:{name:"Signature",description:"A hex-encoded signature.",schema:{type:"string",pattern:"^0x[0-9a-f]*$"}},examples:[{name:"personal_sign example",params:[{name:"Challenge",value:"0x506c65617365207369676e2074686973206d65737361676520746f20636f6e6669726d20796f7572206964656e746974792e"},{name:"Address",value:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7"}],result:{name:"Signature",value:"0x43d7215ebe96c09a5adac69fc76dea5647286b501954ea273e417cf65e6c80e1db4891826375a7de02467a3e01caf125f64c851a8e9ee9467fd6f7e83523b2115bed8e79d527a85e28a36807d79b85fc551b5c15c1ead2e43456c31f565219203db2aed86cb3601b33ec3b410836d4be7718c6148dc9ac82ecc0a04c5edecd8914"}}]},{name:"eth_signTypedData_v4",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],summary:"Presents a structured data message for the user to sign.",description:"Presents a data message for the user to sign in a structured and readable format and returns the signed response. Introduced by [EIP-712](https://eips.ethereum.org/EIPS/eip-712). This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",params:[{name:"Address",required:!0,description:"The address of the requested signing account.",schema:{$ref:"#/components/schemas/address"}},{name:"TypedData",required:!0,schema:{$ref:"#/components/schemas/TypedData"}}],result:{name:"Signature",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_SignTypedData_v4 example",params:[{name:"Address",value:"0x0000000000000000000000000000000000000000"},{name:"TypedData",value:{types:{EIP712Domain:[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],Person:[{name:"name",type:"string"},{name:"wallet",type:"address"}],Mail:[{name:"from",type:"Person"},{name:"to",type:"Person"},{name:"contents",type:"string"}]},primaryType:"Mail",domain:{name:"Ether Mail",version:"1",chainId:1,verifyingContract:"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"},message:{from:{name:"Cow",wallet:"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"},to:{name:"Bob",wallet:"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"},contents:"Hello, Bob!"}}}],result:{name:"Signature",value:"0x4355c47d63924e8a72e509b65029052eb6c299d53a04e167c5775fd466751c9d07299936d304c153f6443dfa05f40ff007d72911b6f72307f996231605b915621c"}}]},{name:"wallet_registerOnboarding",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Multichain"}],summary:"Redirects the user back to the site after onboarding.",description:"Registers the requesting site with MetaMask as the initiator of onboarding, enabling MetaMask to redirect the user back to the site after onboarding. Returns a promise that resolves to `true`, or rejects if there's an error. Instead of calling this method directly, you should use the [`@metamask/onboarding`](https://github.com/MetaMask/metamask-onboarding) library.",params:[],result:{name:"RegisterOnboardingResult",description:"`true` if the request was successful, `false` otherwise.",schema:{type:"boolean"}}},{name:"wallet_watchAsset",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Experimental"},{$ref:"#/components/tags/Multichain"}],summary:"Tracks a token in MetaMask.",description:"Requests that the user track the specified token in MetaMask. Returns a boolean indicating if the token was successfully added. Once added, the token is indistinguishable from those added using legacy methods, such as a centralized registry. Introduced by [EIP-747](https://eips.ethereum.org/EIPS/eip-747).",paramStructure:"by-name",params:[{name:"type",schema:{type:"string",description:"Supports ERC-20, ERC-721, and ERC-1155 tokens. Support for ERC-721 and ERC-1155 tokens is experimental and currently only available on the extension (not on mobile). See [MIP-1](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-1.md) and [MIP proposal lifecycle](https://github.com/MetaMask/metamask-improvement-proposals/blob/main/PROCESS-GUIDE.md#proposal-lifecycle) for more information.",enum:["ERC20","ERC721","ERC1155"]},required:!0},{name:"options",schema:{title:"WatchAssetOptions",type:"object",required:["address"],properties:{address:{description:"The address of the token contract.",type:"string"},symbol:{description:"A ticker symbol or shorthand, up to 11 characters (optional for ERC-20 tokens).",minLength:2,maxLength:11,type:"string"},decimals:{description:"The number of token decimals (optional for ERC-20 tokens).",type:"number"},image:{description:"A string URL of the token logo (optional for ERC-20 tokens).",type:"string"},tokenId:{description:"The unique identifier of the NFT (required for ERC-721 and ERC-1155 tokens).",type:"string"}}}}],errors:[{code:-32602,message:"Must specify address, symbol, and decimals."},{code:-32602,message:"Invalid symbol: not a string."},{code:-32602,message:"Invalid symbol '${symbol}': longer than 11 characters."},{code:-32602,message:"Invalid decimals '${decimals}': must be 0 <= 36."},{code:-32602,message:"Invalid address '${address}'."},{code:-32602,message:"Asset type is required."},{code:-32602,message:"Both address and tokenId are required."},{code:-32602,message:"Invalid address."},{code:-32e3,message:"Suggested NFT is not owned by the selected account."},{code:-32e3,message:"Suggested NFT of type ${standard} does not match received type ${type}."},{code:-32002,message:"Unable to verify ownership. Possibly because the standard is not supported or the user's currently selected network does not match the chain of the asset in question."}],result:{name:"WatchAssetResult",description:"`true` if the token was added, `false` otherwise.",schema:{type:"boolean"}},examples:[{name:"wallet_watchAsset ERC-20 example",params:[{name:"type",value:"ERC20"},{name:"options",value:{address:"0xb60e8dd61c5d32be8058bb8eb970870f07233155",symbol:"FOO",decimals:18,image:"https://foo.io/token-image.svg"}}],result:{name:"wallet_watchAssetExampleResult",value:!0}},{name:"wallet_watchAsset ERC-721 example",params:[{name:"type",value:"ERC721"},{name:"options",value:{address:"0x123456789abcdef0123456789abcdef01234567",tokenId:"42"}}],result:{name:"wallet_watchAssetERC721ExampleResult",value:!0}},{name:"wallet_watchAsset ERC-1155 example",params:[{name:"type",value:"ERC1155"},{name:"options",value:{address:"0xabcdef0123456789abcdef0123456789abcdef01",tokenId:"1337"}}],result:{name:"wallet_watchAssetERC1155ExampleResult",value:!0}}]},{name:"wallet_scanQRCode",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Mobile"},{$ref:"#/components/tags/Multichain"}],summary:"Requests that the user scan a QR code.",description:"Requests that the user scan a QR code using their device camera. Introduced by [EIP-945](https://github.com/ethereum/EIPs/issues/945).",params:[{name:"regex",required:!1,description:"A regular expression (regex) string for matching arbitrary QR code strings.",schema:{type:"string",title:"regex"}}],result:{name:"ScanQRCodeResult",description:"A string corresponding to the scanned QR code. If a regex string is provided, the resulting string matches it. If no regex string is provided, the resulting string matches an Ethereum address. If neither condition is met, the method returns an error.",schema:{type:"string",title:"ScanQRCodeResult"}}},{name:"eth_requestAccounts",tags:[{$ref:"#/components/tags/MetaMask"}],description:"Requests that the user provide an Ethereum address to be identified by. This method is specified by [EIP-1102](https://eips.ethereum.org/EIPS/eip-1102). Internally, this method calls `wallet_requestPermissions` for permission to call `eth_accounts`.",summary:"Requests that the user provide an Ethereum address.",params:[],result:{name:"AddressList",schema:{type:"array",items:{$ref:"#/components/schemas/address"}}},errors:[{$ref:"#/components/errors/UserRejected"}],examples:[{name:"eth_requestAccounts example",params:[],result:{name:"eth_requestAccountsExampleResult",value:"0xa77392123a1085f75e62eec7dea7e0e1e5142d5f"}}]},{name:"eth_accounts",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"}],description:"Returns a list of addresses for the accounts owned by the user. This method requires calling `wallet_requestPermissions` for permission. We recommend using `eth_requestAccounts`, which internally calls `wallet_requestPermission`.",summary:"Gets a list of addresses for the user's accounts.",params:[],result:{name:"AddressList",schema:{type:"array",items:{$ref:"#/components/schemas/address"}}},examples:[{name:"eth_accounts example",params:[],result:{name:"eth_accountsExampleResult",value:"0xa77392123a1085f75e62eec7dea7e0e1e5142d5f"}}]},{name:"eth_sendTransaction",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Multichain"}],description:"Creates a new wallet confirmation to make an Ethereum transaction from the user's account. This method requires that the user has granted permission to interact with their account first, so make sure to call `eth_requestAccounts` (recommended) or `wallet_requestPermissions` first.",summary:"Initiates a new transaction.",params:[{name:"Transaction",required:!0,description:"The transaction object to sign and send.",schema:{type:"object",title:"Transaction",description:"The parameters to customize a transaction. If a `to` address is not provided, it will be assumed that the transaction is a contract creation transaction, and the `data` field of the transaction will be used as the contract initialization code. `gasPrice` cannot be used together with `maxPriorityFeePerGas` and `maxFeePerGas`.",required:["from"],if:{properties:{to:{not:{type:"string"}}}},then:{required:["data"]},properties:{to:{title:"to address",$ref:"#/components/schemas/address"},from:{title:"from address",$ref:"#/components/schemas/address"},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},data:{title:"data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price the sender is willing to pay to miners in wei. Used in pre-1559 transactions.",$ref:"#/components/schemas/uint"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei. Used in 1559 transactions.",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei. Used in 1559 transactions.",$ref:"#/components/schemas/uint"}}}}],result:{name:"TransactionHash",description:"The transaction hash of the sent transaction.",schema:{$ref:"#/components/schemas/bytes32"}},errors:[{code:4100,message:"The requested account and/or method has not been authorized by the user."}],examples:[{name:"sendTransaction",params:[{name:"Transaction",value:{to:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7",from:"0xDeaDbeefdEAdbeefdEadbEEFdeadbeefDEADbEEF",gas:"0x76c0",value:"0x8ac7230489e80000",data:"0x",gasPrice:"0x4a817c800"}}],result:{name:"eth_sendTransactionExampleResult",value:"0x4e306b5a5a37532e1734503f7d2427a86f2c992fbe471f5be403b9f734e667c8"}}]},{name:"eth_decrypt",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Deprecated"}],summary:"Decrypts an encrypted message.",description:"This method is deprecated and may be removed in the future.\n\n Requests that MetaMask decrypt the specified encrypted message.\n The message must have been encrypted using the public encryption key of the specified Ethereum address.\n Returns a promise that resolves to the decrypted message, or rejects if the decryption attempt fails.",params:[{name:"EncryptedMessage",required:!0,description:"The encrypted message to decrypt.",schema:{type:"string"}},{name:"Address",required:!0,description:"The address of the Ethereum account that can decrypt the message.",schema:{$ref:"#/components/schemas/address"}}],result:{name:"PermissionsList",schema:{$ref:"#/components/schemas/PermissionsList"}},errors:[{code:4100,message:"The requested account and/or method has not been authorized by the user."}],examples:[{name:"decryptExample",params:[{name:"EncryptedMessage",value:"0x7b2276657273696f6e223a227832353531392d7873616c736132302d706f6c7931333035222c226e6f6e6365223a2243533967507076467071765358704655416679726a7179774e35302b7a747766222c22657068656d5075626c69634b6579223a224372774b61456d2f4b356d6d714239764c376f5872636d6441417757764479324f784c3333527135576e553d222c2263697068657274657874223a2248347a65336e7177572b753174663956343945506167454e343872774f766b6952676244566e47587a38493d227d"},{name:"Address",value:"0xD1F5279BE4B4dD94133A23deE1B23F5bfC0Db1d0"}],result:{name:"eth_decryptExampleResult",value:"Hello, Ethereum!"}}]},{name:"eth_getEncryptionPublicKey",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Restricted"},{$ref:"#/components/tags/Deprecated"}],summary:"Gets a public key used for encryption.",description:"This method is deprecated and may be removed in the future.\n\n Requests that the user share their public encryption key.\n Returns a public encryption key, or rejects if the user denies the request.\n The public key is computed from entropy associated with the specified user account, using the NaCl implementation of the `X25519_XSalsa20_Poly1305` algorithm.",params:[{name:"Address",required:!0,description:"The address of the Ethereum account that can decrypt the message.",schema:{$ref:"#/components/schemas/address"}}],result:{name:"EncryptionKey",schema:{type:"string"}},examples:[{name:"eth_getEncryptionPublicKey",params:[{name:"Address",value:"0x4B0897b0513FdBeEc7C469D9aF4fA6C0752aBea7"}],result:{name:"eth_getEncryptionPublicKeyExampleResult",value:"0x04bfcab3b7ca7e8b3f3b62b2f7f77e9e4b68080bbf8f0f4a1c8f890864d2c7c1d3c45d8b2e3f5f1c27dfeea4c2f5733e90bfc7484e2a690aa9b8ac4559d2e6a8d7"}}]},{name:"web3_clientVersion",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],description:"Returns the current MetaMask client version. This differs slightly per client. For example, the browser extension returns a string like `MetaMask/v10.33.1`, while the mobile app returns a string like `MetaMask/8.1.2/Mobile`.",summary:"Current client version.",params:[],examples:[{name:"MetaMaskClientVersionExample",description:"Example version response from MetaMask.",params:[],result:{name:"MetaMaskClientVersion",description:"The current client version.",value:"MetaMask/v10.33.1"}},{name:"MetaMaskMobileClientVersionExample",description:"Example version response from MetaMask Mobile.",params:[],result:{name:"MetaMaskClientVersion",description:"The current client version.",value:"MetaMask/8.1.2/Mobile"}}],result:{name:"CurrentVersion",description:"The current client version.",schema:{title:"CurrentClientVersion",type:"string"}}},{name:"eth_subscribe",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],summary:"Subscribes to specific Ethereum events, returning a subscription ID used to receive notifications.",description:"Subscribes to specific events on the Ethereum network, such as new blocks, or logs. When an event occurs, a notification is sent to the client with the corresponding data. To stop receiving notifications, the client can unsubscribe using `eth_unsubscribe`.",params:[{name:"subscriptionType",required:!0,schema:{title:"subscriptionType",type:"string",enum:["newHeads","logs"],description:"The type of subscription to create. Must be one of the following:\n1. `newHeads` - New block headers.\n2. `logs` - Logs matching a filter object."}},{name:"filterOptions",required:!1,schema:{title:"filterOptions",type:"object",description:"(Optional) An object containing filter options specific to the subscription type. Only applicable for the `logs` subscription type.",required:["topics"],properties:{address:{type:"string",description:"(Optional) A single address or an array of addresses to filter the logs by."},topics:{type:"array",description:"An array of topics to filter the logs by.",items:{type:"string"}}}}}],result:{name:"subscriptionId",schema:{type:"string"},description:"A unique subscription ID that can be used to unsubscribe or identify incoming notifications."},examples:[{name:"eth_subscribe example",params:[{name:"subscriptionType",value:"newHeads"}],result:{name:"eth_subscribeExampleResult",value:"0x1b84f2cdf29a204b79e450c1939b30c1"}}]},{name:"eth_unsubscribe",tags:[{$ref:"#/components/tags/Ethereum"},{$ref:"#/components/tags/Multichain"}],summary:"Unsubscribes from a specific Ethereum event, using the subscription ID provided by `eth_subscribe`.",description:"Unsubscribes from specific events on the Ethereum network, to which the client has been previously subscribed using `eth_subscribe`. The client must provide the subscription ID obtained from `eth_subscribe` to stop receiving notifications for the corresponding event.",params:[{name:"subscriptionId",required:!0,schema:{type:"string",description:"The unique subscription ID obtained from `eth_subscribe`, used to identify the subscription to be unsubscribed."}}],result:{name:"unsubscribed",schema:{type:"boolean"},description:"A boolean value indicating whether the unsubscription was successful."},examples:[{name:"eth_unsubscribe example",params:[{name:"subscriptionId",value:"0x1b84f2cdf29a204b79e450c1939b30c1"}],result:{name:"eth_unsubscribeExampleResult",value:!0}}]},{name:"wallet_swapAsset",tags:[{$ref:"#/components/tags/MetaMask"},{$ref:"#/components/tags/Experimental"}],summary:"Allows dApps to request MetaMask to perform a token swap operation.",description:"This method enables dApps to initiate a token swap directly within MetaMask, improving the user experience by streamlining the process of swapping tokens. The method accepts parameters for the source and destination tokens and initiates a token swap operation.",params:[{name:"SwapAssetParameter",required:!0,schema:{title:"SwapAssetParameter",type:"object",required:["fromToken","toToken","userAddress"],properties:{fromToken:{type:"array",items:{type:"object",required:["address"],properties:{address:{type:"string",description:"The CAIP-10 formatted address of the source token.",$ref:"#/components/schemas/Caip10Address"},value:{type:"string",description:"(Optional) The amount of the source token to be swapped, in wei, as a hexadecimal string, defaults to 0.",nullable:!0}}}},toToken:{type:"object",required:["address"],properties:{address:{type:"string",description:"The CAIP-10 formatted address of the destination token.",$ref:"#/components/schemas/Caip10Address"}}},userAddress:{type:"string",description:"The CAIP-10 formatted address of the user performing the swap.",$ref:"#/components/schemas/Caip10Address"}}}}],result:{name:"SwapAssetResult",description:"A boolean indicating if the swap was initiated successfully.",schema:{type:"boolean"}},errors:[{code:6e3,message:"Swap is not available on this chain {{chainName}}"},{code:-32600,message:"Cross-chain swaps are currently not supported. Both fromToken and toToken must be on the same blockchain."}],examples:[{name:"wallet_swapAsset example",params:[{name:"SwapAssetParameter",value:{from:[{tokenAddress:"0x1234567890abcdefABCDEF1234567890ABCDEF",value:"0xDE0B6B3A7640000"}],to:{tokenAddress:"0xabcdef1234567890ABCDEF1234567890abcdef"},userAddress:"0x0000000000000000000000000000000000000000"}}],result:{name:"wallet_swapAssetExampleResult",value:!0}}]},{name:"eth_blockNumber",summary:"Returns the number of most recent block.",params:[],result:{name:"Block number",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_blockNumber example",params:[],result:{name:"Block number",value:"0x2377"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_call",summary:"Executes a new message call immediately without creating a transaction on the block chain.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/GenericTransaction"}},{name:"Block",required:!1,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Return data",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_call example",params:[{name:"Transaction",value:{to:"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",value:"0x1"}},{name:"Block",value:"latest"}],result:{name:"Return data",value:"0x"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_chainId",summary:"Returns the chain ID of the current network.",params:[],result:{name:"Chain ID",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_chainId example",params:[],result:{name:"Chain ID",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_coinbase",summary:"Returns the client coinbase address.",params:[],result:{name:"Coinbase address",schema:{$ref:"#/components/schemas/address"}},examples:[{name:"eth_coinbase example",params:[],result:{name:"Coinbase address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_estimateGas",summary:"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/GenericTransaction"}},{name:"Block",required:!1,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Gas used",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_estimateGas example",params:[{name:"Transaction",value:{from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",to:"0x44aa93095d6749a706051658b970b941c72c1d53",value:"0x1"}}],result:{name:"Gas used",value:"0x5208"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_feeHistory",summary:"Transaction fee history",description:"Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",params:[{name:"blockCount",description:"Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",required:!0,schema:{$ref:"#/components/schemas/uint"}},{name:"newestBlock",description:"Highest block of the requested range.",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"rewardPercentiles",description:"A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",required:!0,schema:{title:"rewardPercentiles",type:"array",items:{title:"rewardPercentile",description:"Floating point value between 0 and 100.",type:"number"}}}],result:{name:"Fee history result",description:"Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",schema:{title:"feeHistoryResults",description:"Fee history results.",type:"object",required:["oldestBlock","baseFeePerGas","gasUsedRatio"],additionalProperties:!1,properties:{oldestBlock:{title:"oldestBlock",description:"Lowest number block of returned range.",$ref:"#/components/schemas/uint"},baseFeePerGas:{title:"baseFeePerGasArray",description:"An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",type:"array",items:{$ref:"#/components/schemas/uint"}},baseFeePerBlobGas:{title:"baseFeePerBlobGasArray",description:"An array of block base fees per blob gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-4844 blocks.",type:"array",items:{$ref:"#/components/schemas/uint"}},gasUsedRatio:{title:"gasUsedRatio",description:"An array of block gas used ratios. These are calculated as the ratio of gasUsed and gasLimit.",type:"array",items:{$ref:"#/components/schemas/ratio"}},blobGasUsedRatio:{title:"blobGasUsedRatio",description:"An array of block blob gas used ratios. These are calculated as the ratio of blobGasUsed and the max blob gas per block.",type:"array",items:{$ref:"#/components/schemas/ratio"}},reward:{title:"rewardArray",description:"A two-dimensional array of effective priority fees per gas at the requested block percentiles.",type:"array",items:{title:"rewardPercentile",description:"An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",type:"array",items:{title:"rewardPercentile",description:"A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty.",$ref:"#/components/schemas/uint"}}}}}},examples:[{name:"eth_feeHistory example",params:[{name:"blockCount",value:"0x5"},{name:"newestblock",value:"latest"},{name:"rewardPercentiles",value:[20,30]}],result:{name:"Fee history result",value:{oldestblock:"0x10b52f",baseFeePerGas:["0x3fa63a3f","0x37f999ee","0x3e36f20a","0x4099f79a","0x430d532d","0x46fcd4a4"],baseFeePerBlobGas:["0x7b7609c19","0x6dbe41789","0x7223341d4","0x6574a002c","0x7223341d4","0x6574a002c"],gasUsedRatio:[.017712333333333333,.9458865666666667,.6534561,.6517375666666667,.7347769666666667],blobGasUsedRatio:[0,.6666666666666666,0,1,0],reward:[["0x3b9aca00","0x59682f00"],["0x3a13012","0x3a13012"],["0x3a13012","0x3a13012"],["0xf4240","0xf4240"],["0xf4240","0xf4240"]]}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_gasPrice",summary:"Returns the current price per gas in wei.",params:[],result:{name:"Gas price",schema:{title:"Gas price",$ref:"#/components/schemas/uint"}},examples:[{name:"eth_gasPrice example",params:[],result:{name:"Gas price",value:"0x3e8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBalance",summary:"Returns the balance of the account of given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Balance",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_getBalance example",params:[{name:"Address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{name:"Block",value:"latest"}],result:{name:"Balance",value:"0x1cfe56f3795885980000"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockByHash",summary:"Returns information about a block by hash.",params:[{name:"Block hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}},{name:"Hydrated transactions",required:!0,schema:{title:"hydrated",type:"boolean"}}],result:{name:"Block information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/Block"}]}},examples:[{name:"eth_getBlockByHash example",params:[{name:"Block hash",value:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c"},{name:"Hydrated transactions",value:!1}],result:{name:"Block information",value:{number:"0x68b3",hash:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",mixHash:"0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",parentHash:"0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",nonce:"0x378da40ff335b070",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",logsBloom:"0xtransactionsRoot:"0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",stateRoot:"0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",receiptsRoot:"0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",miner:"0xb42b6c4a95406c78ff892d270ad20b22642e102d",difficulty:"0x66e619a",totalDifficulty:"0x1e875d746ae",extraData:"0xd583010502846765746885676f312e37856c696e7578",size:"0x334",gasLimit:"0x47e7c4",gasUsed:"0x37993",timestamp:"0x5835c54d",uncles:[],transactions:["0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc","0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"],baseFeePerGas:"0x7",withdrawalsRoot:"0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",withdrawals:[{index:"0x0",validatorIndex:"0x9d8c0",address:"0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",amount:"0x11a33e3760"}],blobGasUsed:"0x0",excessBlobGas:"0x0",parentBeaconBlockRoot:"0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockByNumber",summary:"Returns information about a block by number.",params:[{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"Hydrated transactions",required:!0,schema:{title:"hydrated",type:"boolean"}}],result:{name:"Block information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/Block"}]}},examples:[{name:"eth_getBlockByNumber example",params:[{name:"block",value:"0x68b3"},{name:"Hydrated transactions",value:!1}],result:{name:"Block information",value:{number:"0x68b3",hash:"0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",mixHash:"0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",parentHash:"0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",nonce:"0x378da40ff335b070",sha3Uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",logsBloom:"0xtransactionsRoot:"0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",stateRoot:"0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",receiptsRoot:"0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",miner:"0xb42b6c4a95406c78ff892d270ad20b22642e102d",difficulty:"0x66e619a",totalDifficulty:"0x1e875d746ae",extraData:"0xd583010502846765746885676f312e37856c696e7578",size:"0x334",gasLimit:"0x47e7c4",gasUsed:"0x37993",timestamp:"0x5835c54d",uncles:[],transactions:["0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc","0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"],baseFeePerGas:"0x7",withdrawalsRoot:"0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",withdrawals:[{index:"0x0",validatorIndex:"0x9d8c0",address:"0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",amount:"0x11a33e3760"}],blobGasUsed:"0x0",excessBlobGas:"0x0",parentBeaconBlockRoot:"0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockTransactionCountByHash",summary:"Returns the number of transactions in a block from a block matching the given block hash.",params:[{name:"Block hash",schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Transaction count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Transaction count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getBlockTransactionCountByHash example",params:[{name:"Block hash",value:"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"}],result:{name:"Transaction count",value:"0x8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getBlockTransactionCountByNumber",summary:"Returns the number of transactions in a block matching the given block number.",params:[{name:"Block",schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Transaction count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Transaction count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getBlockTransactionCountByNumber example",params:[{name:"Block",value:"0xe8"}],result:{name:"Transaction count",value:"0x8"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getCode",summary:"Returns code at a given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Bytecode",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_getCode example",params:[{name:"Address",value:"0xa50a51c09a5c451c52bb714527e1974b686d8e77"},{name:"Block",value:"latest"}],result:{name:"Bytecode",value:"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getFilterChanges",summary:"Polling method for the filter with the given ID (created using `eth_newFilter`). Returns an array of logs which occurred since last poll.",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getFilterChanges example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getFilterLogs",summary:"Returns an array of all logs matching the filter with the given ID (created using `eth_newFilter`).",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getFilterLogs example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getLogs",summary:"Returns an array of all logs matching the specified filter.",params:[{name:"Filter",schema:{$ref:"#/components/schemas/Filter"}}],result:{name:"Log objects",schema:{$ref:"#/components/schemas/FilterResults"}},examples:[{name:"eth_getLogs example",params:[{name:"Filter",value:{fromBlock:"0x137d3c2",toBlock:"0x137d3c3",address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",topics:[]}}],result:{name:"Log objects",value:[{logIndex:"0x0",removed:!1,blockNumber:"0x233",blockHash:"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",transactionHash:"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000004",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]},{logIndex:"0x0",removed:!1,blockNumber:"0x238",blockHash:"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",transactionHash:"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",transactionIndex:"0x0",address:"0x42699a7612a82f1d9c36148af9c77354759b210b",data:"0x0000000000000000000000000000000000000000000000000000000000000007",topics:["0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"]}]}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getProof",summary:"Returns the merkle proof for a given account and optionally some storage keys.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"StorageKeys",required:!0,schema:{title:"Storage keys",type:"array",items:{$ref:"#/components/schemas/bytesMax32"}}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Account",schema:{$ref:"#/components/schemas/AccountProof"}},examples:[{name:"eth_getProof example",params:[{name:"Address",value:"0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"},{name:"StorageKeys",value:["0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"]},{name:"Block",value:"latest"}],result:{name:"Account",value:{accountProof:["0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280","0xf90211a0d360be1e1da1a0c32bc4c105833bd531e59d110684007b7c50fb2709002973eca0cf6dd1e350a7031b4e2ab49c899fd8bd47551c8565d8fd8d1d7796c83820c3b1a0eb0a88c29bb33989a589156f7bf07d9efc74034dd9d3f5b73385c3b45c3249bea02783c25f97a6ddb8dc07adf4b176991836d39184b1f678adeda832fff15e3664a00a4e288060045e587774d8a64993a7add73068b16863145e1e8eeb4602e18e19a0340851f4046ad1298962d6e47d05c66329549c839c158748aaad7ae00b943aefa085b127bc2a3bd17604283de21b2b3c9aa8f1d4b7b85c94d8105a46fe32c77688a00f531d62b3c5435324c01009c284fe31277e8d38302b75ea01be89f09e205969a00011c8351c0e3d639ac54b9d3a59de630b16a67de8270d7d6064d0a67e93f9cca048780d32b7f2db88650b51c46f46fd0a68795edee1fd5ecee6eb3595741d9669a0c91afd74eaf8e08a997061a62b354e2516fdc494e8e26cc50ceeb8f4a175608ba0e2c07f1b48fab80eecb340f5882e8c7b32ee416e4045c61f1df646a133487303a01a1eff78435a7a29a29463bdc3486ae81364b00bea82ba0fdf67a110770f2261a04f2eb440ba71c72da5fd7f0e439018d6671dc809f747213a1ea755848124e994a074ff9f37fce99daa3ed01dd763076450022996fc729be2cc43c61ec5182c2366a0b80b36b7b621112592f52390b89748d422e9b1517c4b0203b8176a53f89d4a6680","0xf90211a0b25f283bd01a8c8b2418049f9585bc37ff2c1e2e12eab4b7f64ae1f26647389aa02ad96c150d7c3c9c194d30315456852cf6a0a940e0191ae5d04007454823d4e9a0b220cf7a855e2dbcc0b973134e2e119b982d7d40dbb1b27d99816c41f40e829aa049224431da84cbf1b7ae813abcc9ef4c1dfc1760f6ddc5d57f7354bf3cbf6cc4a015191f879ac115b362f0257fd3eedb789537e836574a5b1abf1c9982ebe3bdfea07913c1b6e7282569d2d421e9fa2257f5d1698e93303bc49b941704287d7aaefea0a526576981ce6fd9f2bd48dd2ca6d5272f2fbdc85f0ee35a295f6ccd97ae8765a0313fad407f0c737c29024c02a890c4ecc12d7771c05ab7b435e5087a7cdef4d9a0d2044603cba9d4afdaf6fd2470e729ef3a65242de71276f20d59accfa6b53a7ca0457caacb9370c09b15f7d904adefd2308be94e23669ba5f43241ffff5f438a0aa09fb2dd45a383a0cc088a72b14117e1e9b7d6889218f3ac7631e8de644c5cb76da0c675dcd4d3fb692b514851c6106e2b09e6f5661d56a0a32ae02e2efc1515c235a074949a59ff1bdba87548510d6e404ec4532f4456dfdec8e753d92fda11a3088ba0a328c6ab1ab8f70db4d23e95bb163c13ba0c508f063a5b1393a4efd7ff375f05a0c722fe3ce796998269373cbb2fc229b2bdf2c43c6c2df003309422e043ce6c03a024e69343286eec44fa4744f6907209116e5383cff3fa98fe81ba06e7e8d4366680","0xf90211a00e99ba2198124b8241ea304551fe973215829e2fbc0438d67922707a2a847432a0bb9ce24fd527879c5fe6dbbec1ef5a05ed9d1ca88e921d140bafbec1112f6a6aa099787fd6c7a1989229c4291ef5267335e66152ce417daea46e66d19cb6f81d1ca0e430ff4b8d5621baa5978673344e78b4d8b4df51431b6e63785267c98a24ce18a0bb3e91a825fe3d42ed270a93e9ad1aabd566c40cb28e622f7f1d7ee967c8afd6a0aa364b0056870c6507bc3262a5f851ecb13684088bdb13996d3cb2db401ce3ffa0a3732eba4c7a6e062665ab5be08acb986c3db87556fb138548cc900ff1e56995a026b088e90c9738b8ce16e853107a937a50d52726a24f9f6ce60f587762eb45a2a006c9d5bc3c064b5c1fb565bff91cace9161c64ae653a329610c1dcf34d434429a06c16df2edc70656d322d0c2403bad7d45bc790ffc3e7adeef856d98ea6afc91ba0ae05ed5d6c34b5da29c2e94d7880aeba0906f95f4ec10b132a1d4766a0701c98a01470a86aa350d1ada0c082eac75de828a851f9c8c7c4aa49b1556fe3a5574966a0334eef025100a6da1033710dd98e0475f29d3d7e397caf618ca71c336c5f4f49a0ef0b3abbebcff34d6a8a8f5cdbfbd154ab3452b58dcb09de58ec983644963675a041857e865ec38e200a13bc1a3cb71c7d69aeef7ffdee8be515c9a5b691ce091fa059edd0eb3bbec36bbf38a19802d4646c00ba821ab55fdeea12e15bab62c4e1e580","0xf90211a0af0c7fa65ffcb84c31e68c1cf00e1a20bf8bb497c39883e19b66a99975b03431a0c492cab3623eb7926069794c3c718733e16c5fd0d4a13fb7c752ee9809aac7ada05003cea7132aa70d6f36731d60640a90bcd8f4fd493e4540d5ab1b4943679c0ca0fd700683405b1d2306b586dd3b5b2f92f1692fae20d17cd8b8e59d09b9c6670da01db8683910e46e56e8afeb9fe2b7c35382e5a0914d7b0dd8f0e8cb9981ba7435a0fa7f75d73aa73c35824387bec81388315caa4aee3f4f5562f971beb256c62d49a0ee478e420d83f413e8568dacfd5d83f83a5dd7c45f494b504828e5dc962f0e3ea094b95444a917ac94a675681f6bf851172ad0969801a783a63a71edafed45e7a7a0a0c46586e109abe80fe50361dd582e3f143cb416828239faa43bb2b890869501a0ae051d5d43634c68bf9c97823256cc68580f194dfdbd0c301140c7ca5853430ca0660b9365bb77ec9cdc6eb95516c162dca20727c6f828dbbeb1ae110dde4d3134a09feb1b75e84ff6722e4d837bfb6d207b6ee3b21b86844a01140ce293813b49a1a0ed58a70b04efa3bdc0babe2abfa20824a75d61d52291bfdb5cf08597800764d6a020a2d5d3a83f9e35ad9fd1c448626d90af0eb3efefaa4f2f93207b4096ef5507a0fc8efc4484dcf0a54f0574de9aaade0dcff6ec3599edb9f82efb26b6566dcaeaa032f7e79856db3fd984f72bb2c93d4dab328198d355a61c975fab1f08bdb2046580"],balance:"0x0",codeHash:"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",nonce:"0x0",storageHash:"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",storageProof:[{key:"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",proof:["0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280","0xf90191a0f0c5b800b542001597f2b7a8e106ac0e2849d2cc1df1727ac35c4ea3965f1c9180a08537f2e248702a6ae2a57e9110a5740f5772c876389739ac90debd6a0692713ea00b3a26a05b5494fb3ff6f0b3897688a5581066b20b07ebab9252d169d928717fa0a9a54d84976d134d6dba06a65064c7f3a964a75947d452db6f6bb4b6c47b43aaa01e2a1ed3d1572b872bbf09ee44d2ed737da31f01de3c0f4b4e1f046740066461a076f251d160b9a02eb0b5c1d83b61c9cdd4f37361705e79a45529bf49801fb824a0774a01a624cb14a50d17f2fe4b7ae6af8a67bbb029177ccc3dd729a734484d3ea05921b8a19aebe4fff5a36071e311778f9b93459183fdf7f6d870b401fa25dcbba0c8d71dd13d2806e2865a5c2cfa447f626471bf0b66182a8fd07230434e1cad2680a0e9864fdfaf3693b2602f56cd938ccd494b8634b1f91800ef02203a3609ca4c21a0c69d174ad6b6e58b0bd05914352839ec60915cd066dd2bee2a48016139687f21a0513dd5514fd6bad56871711441d38de2821cc6913cb192416b0385f025650731808080"],value:"0x1"}]}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getStorageAt",summary:"Returns the value from a storage position at a given address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Storage slot",required:!0,schema:{$ref:"#/components/schemas/uint256"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Value",schema:{$ref:"#/components/schemas/bytes"}},examples:[{name:"eth_getStorageAt example",params:[{name:"Address",value:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"},{name:"Storage slot",value:"0x0"},{name:"Block",value:"latest"}],result:{name:"Value",value:"0x0000000000000000000000000000000000000000000000000000000000000000"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByBlockHashAndIndex",summary:"Returns information about a transaction by block hash and transaction index position.",params:[{name:"Block hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}},{name:"Transaction index",required:!0,schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByBlockHashAndIndex example",params:[{name:"Block hash",value:"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7"},{name:"Transaction index",value:"0x2"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByBlockNumberAndIndex",summary:"Returns information about a transaction by block number and transaction index position.",params:[{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTag"}},{name:"Transaction index",required:!0,schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByBlockNumberAndIndex example",params:[{name:"Block",value:"0x1442e"},{name:"Transaction index",value:"0x2"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionByHash",summary:"Returns the information about a transaction requested by transaction hash.",params:[{name:"Transaction hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Transaction information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/TransactionInfo"}]}},examples:[{name:"eth_getTransactionByHash example",params:[{name:"Transaction hash",value:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"}],result:{name:"Transaction information",value:{blockHash:"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",blockNumber:"0x422",chainId:2018,from:"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",gas:"0x5208",gasPrice:"0x3b9aca00",hash:"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",input:"0x",nonce:"0x1",to:"0x627306090abab3a6e1400e9345bc60c78a8bef57",transactionIndex:"0x0",value:"0x4e1003b28d9280000",v:"0xfe7",r:"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",s:"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionCount",summary:"Returns the number of transactions sent from an address.",params:[{name:"Address",required:!0,schema:{$ref:"#/components/schemas/address"}},{name:"Block",required:!0,schema:{$ref:"#/components/schemas/BlockNumberOrTagOrHash"}}],result:{name:"Transaction count",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_getTransactionCount example",params:[{name:"Address",value:"0xc94770007dda54cF92009BFF0dE90c06F603a09f"},{name:"Block",value:"latest"}],result:{name:"Transaction count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getTransactionReceipt",summary:"Returns the receipt of a transaction by transaction hash.",params:[{name:"Transaction hash",required:!0,schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Receipt information",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{$ref:"#/components/schemas/ReceiptInfo"}]}},examples:[{name:"eth_getTransactionReceipt example",params:[{name:"Transaction hash",value:"0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"}],result:{name:"Receipt information",value:{blockHash:"0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",blockNumber:"0x50",contractAddress:null,cumulativeGasUsed:"0x5208",from:"0x627306090abab3a6e1400e9345bc60c78a8bef57",gasUsed:"0x5208",blobGasUsed:"0x20000",effectiveGasPrice:"0x1",blobGasPrice:"0x3",logs:[],logsBloom:"0xstatus:"0x1",to:"0xf17f52151ebef6c7334fad080c5704d77216b732",transactionHash:"0xc00e97af59c6f88de163306935f7682af1a34c67245e414537d02e422815efc3",transactionIndex:"0x0"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getUncleCountByBlockHash",summary:"Returns the number of uncles in a block from a block matching the given block hash.",params:[{name:"Block hash",schema:{$ref:"#/components/schemas/hash32"}}],result:{name:"Uncle count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Uncle count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getUncleCountByBlockHash example",params:[{name:"Block hash",value:"0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"}],result:{name:"Uncle count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_getUncleCountByBlockNumber",summary:"Returns the number of transactions in a block matching the given block number.",params:[{name:"Block",schema:{$ref:"#/components/schemas/BlockNumberOrTag"}}],result:{name:"Uncle count",schema:{oneOf:[{$ref:"#/components/schemas/notFound"},{title:"Uncle count",$ref:"#/components/schemas/uint"}]}},examples:[{name:"eth_getUncleCountByBlockNumber example",params:[{name:"Block",value:"0xe8"}],result:{name:"Uncle count",value:"0x1"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newBlockFilter",summary:"Creates a filter in the node, to notify when a new block arrives.",params:[],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newBlockFilter example",params:[],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newFilter",summary:"Creates a filter object, based on filter options, to notify when the state changes (logs).",params:[{name:"Filter",schema:{$ref:"#/components/schemas/Filter"}}],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newFilter example",params:[{name:"Filter",value:{fromBlock:"0x137d3c2",toBlock:"0x137d3c3",address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",topics:[]}}],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_newPendingTransactionFilter",summary:"Creates a filter in the node, to notify when new pending transactions arrive.",params:[],result:{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}},examples:[{name:"eth_newPendingTransactionFilter example",params:[],result:{name:"Filter identifier",value:"0x01"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_sendRawTransaction",summary:"Submits a raw transaction. You can create and sign a transaction externally using a library such as [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.org/). For [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) transactions, the raw form must be the network form. This means it includes the blobs, KZG commitments, and KZG proofs.",params:[{name:"Transaction",required:!0,schema:{$ref:"#/components/schemas/bytes"}}],result:{name:"Transaction hash",schema:{$ref:"#/components/schemas/hash32"}},examples:[{name:"eth_sendRawTransaction example",params:[{name:"Transaction",value:"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"}],result:{name:"Transaction hash",value:"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_syncing",summary:"Returns an object with data about the sync status or false.",params:[],result:{name:"Syncing status",schema:{$ref:"#/components/schemas/SyncingStatus"}},examples:[{name:"eth_syncing example",params:[],result:{name:"Syncing status",value:{startingBlock:"0x0",currentBlock:"0x1518",highestBlock:"0x9567a3"}}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]},{name:"eth_uninstallFilter",summary:"Uninstalls a filter with given id.",params:[{name:"Filter identifier",schema:{$ref:"#/components/schemas/uint"}}],result:{name:"Success",schema:{type:"boolean"}},examples:[{name:"eth_uninstallFilter example",params:[{name:"Filter identifier",value:"0x01"}],result:{name:"Success",value:!0}}],tags:[{name:"Ethereum API",description:"Ethereum Node JSON-RPC method"},{name:"Multichain API",description:"Multichain JSON-RPC method"}]}],components:{errors:{UserRejected:{code:4001,message:"User rejected the request."}},schemas:{TypedData:{title:"TypedData",type:"object",required:["types","primaryType","domain","message"],properties:{types:{type:"object",required:["EIP712Domain"],properties:{EIP712Domain:{type:"array",items:{type:"object",properties:{name:{type:"string"},type:{type:"string"}}},description:"An array specifying one or more of the following domain separator values: 1) `name` - The user-readable name of the signing domain, that is, the name of the dapp or the protocol. 2) `version` - The current major version of the signing domain. 3) `chainId` - The chain ID of the network. 4) `verifyingContract` - The address of the contract that will verify the signature. 5) `salt` - A disambiguating salt for the protocol."}},additionalProperties:{type:"array",required:["name","type"],items:{type:"object",properties:{name:{type:"string"},type:{type:"string"}}}}},domain:{type:"object",description:"Contains the domain separator values specified in the `EIP712Domain` type."},primaryType:{type:"string"},message:{type:"object",description:"The message you're proposing the user to sign."}}},AddEthereumChainParameter:{title:"Chain",description:"Object containing information about the chain to add.",type:"object",required:["chainId","chainName","nativeCurrency","rpcUrls"],properties:{chainId:{description:"The chain ID as a `0x`-prefixed hexadecimal string, per the `eth_chainId` method. MetaMask compares this chain ID value with the `eth_chainId` return value. If these values aren't identical, MetaMask rejects the request.",type:"string"},blockExplorerUrls:{description:"(Optional) An array of one or more URLs pointing to block explorer sites for the chain.",type:"array",items:{type:"string",description:"Block explorer URL."}},chainName:{description:"A human-readable name for the chain.",type:"string"},iconUrls:{description:"(Optional) An array of one or more URLs pointing to icons that can be used to visually identify the chain. Note: MetaMask will not currently display these icons. You can still include icon URLs so they are used if MetaMask incorporates them into the display of custom networks in the future.",type:"array",items:{format:"uri",type:"string",description:"Icon URL."}},nativeCurrency:{$ref:"#/components/schemas/NativeCurrency"},rpcUrls:{description:"An array of one or more URLs pointing to RPC endpoints that can be used to communicate with the chain. At least one item is required, and only the first item is used.",type:"array",minItems:1,items:{format:"uri",type:"string",description:"RPC URL."}}}},NativeCurrency:{title:"NativeCurrency",type:"object",description:"An object containing information about the native currency of the chain.",required:["decimals","symbol"],properties:{decimals:{description:"A non-negative integer representing the number of decimals the native currency uses.",minimum:0,type:"integer"},name:{description:"A human-readable name of the native currency.",type:"string"},symbol:{description:"A human-readable symbol of the native currency.",type:"string"}}},Caveats:{title:"Caveats",description:"An array of caveats that specify restrictions on the permission.",type:"array",items:{title:"Caveat",description:"Object containing information about the caveat.",type:"object",properties:{type:{title:"Type",type:"string",description:"Type of caveat."},value:{title:"CaveatValue",description:"Value of the caveat."},name:{title:"Name",type:"string",description:"Name of the caveat."}}}},Permission:{title:"Permission",description:"Object containing information about the permission.",type:"object",properties:{id:{description:"The permission ID.",type:"string"},parentCapability:{description:"The name of the permission being granted. For example, `eth_accounts` or `endowment:permitted-chains`.",type:"string"},invoker:{description:"The URI of the dapp being granted this permission.",type:"string"},caveats:{$ref:"#/components/schemas/Caveats"},date:{description:"The timestamp of the permission request.",type:"number"}}},PermissionsList:{title:"Permissions list",description:"An array of the user's permissions.",type:"array",items:{$ref:"#/components/schemas/Permission"}},Caip10Address:{title:"Caip10Address",type:"string",description:"CAIP-10 defines a way to identify an account/address in any blockchain."},address:{title:"hex encoded address",type:"string",pattern:"^0x[0-9a-fA-F]{40}$"},addresses:{title:"hex encoded address",type:"array",items:{$ref:"#/components/schemas/address"}},byte:{title:"hex encoded byte",type:"string",pattern:"^0x([0-9a-fA-F]?){1,2}$"},bytes:{title:"hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]*$"},bytesMax32:{title:"32 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{0,64}$"},bytes8:{title:"8 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{16}$"},bytes32:{title:"32 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{64}$"},bytes48:{title:"48 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{96}$"},bytes96:{title:"96 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{192}$"},bytes256:{title:"256 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{512}$"},bytes65:{title:"65 hex encoded bytes",type:"string",pattern:"^0x[0-9a-f]{130}$"},ratio:{title:"normalized ratio",type:"number",minimum:0,maximum:1},uint:{title:"hex encoded unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]*|0)$"},uint64:{title:"hex encoded 64 bit unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]{0,15})|0$"},uint256:{title:"hex encoded 256 bit unsigned integer",type:"string",pattern:"^0x([1-9a-f]+[0-9a-f]{0,31})|0$"},hash32:{title:"32 byte hex value",type:"string",pattern:"^0x[0-9a-f]{64}$"},notFound:{title:"Not Found (null)",type:"null"},Block:{title:"Block object",type:"object",required:["hash","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","number","gasLimit","gasUsed","timestamp","extraData","mixHash","nonce","size","transactions","uncles"],additionalProperties:!1,properties:{hash:{title:"Hash",$ref:"#/components/schemas/hash32"},parentHash:{title:"Parent block hash",$ref:"#/components/schemas/hash32"},sha3Uncles:{title:"Ommers hash",$ref:"#/components/schemas/hash32"},miner:{title:"Coinbase",$ref:"#/components/schemas/address"},stateRoot:{title:"State root",$ref:"#/components/schemas/hash32"},transactionsRoot:{title:"Transactions root",$ref:"#/components/schemas/hash32"},receiptsRoot:{title:"Receipts root",$ref:"#/components/schemas/hash32"},logsBloom:{title:"Bloom filter",$ref:"#/components/schemas/bytes256"},difficulty:{title:"Difficulty",$ref:"#/components/schemas/uint"},number:{title:"Number",$ref:"#/components/schemas/uint"},gasLimit:{title:"Gas limit",$ref:"#/components/schemas/uint"},gasUsed:{title:"Gas used",$ref:"#/components/schemas/uint"},timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint"},extraData:{title:"Extra data",$ref:"#/components/schemas/bytes"},mixHash:{title:"Mix hash",$ref:"#/components/schemas/hash32"},nonce:{title:"Nonce",$ref:"#/components/schemas/bytes8"},baseFeePerGas:{title:"Base fee per gas",$ref:"#/components/schemas/uint"},withdrawalsRoot:{title:"Withdrawals root",$ref:"#/components/schemas/hash32"},blobGasUsed:{title:"Blob gas used",$ref:"#/components/schemas/uint"},excessBlobGas:{title:"Excess blob gas",$ref:"#/components/schemas/uint"},parentBeaconBlockRoot:{title:"Parent Beacon Block Root",$ref:"#/components/schemas/hash32"},size:{title:"Block size",$ref:"#/components/schemas/uint"},transactions:{anyOf:[{title:"Transaction hashes",type:"array",items:{$ref:"#/components/schemas/hash32"}},{title:"Full transactions",type:"array",items:{$ref:"#/components/schemas/TransactionInfo"}}]},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/Withdrawal"}},uncles:{title:"Uncles",type:"array",items:{$ref:"#/components/schemas/hash32"}}}},BlockTag:{title:"Block tag",type:"string",enum:["earliest","finalized","safe","latest","pending"],description:"`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"},BlockNumberOrTag:{title:"Block number or tag",oneOf:[{title:"Block number",$ref:"#/components/schemas/uint"},{title:"Block tag",$ref:"#/components/schemas/BlockTag"}]},BlockNumberOrTagOrHash:{title:"Block number, tag, or block hash",anyOf:[{title:"Block number",$ref:"#/components/schemas/uint"},{title:"Block tag",$ref:"#/components/schemas/BlockTag"},{title:"Block hash",$ref:"#/components/schemas/hash32"}]},BadBlock:{title:"Bad block",type:"object",required:["block","hash","rlp"],additionalProperties:!1,properties:{block:{title:"Block",$ref:"#/components/schemas/Block"},hash:{title:"Hash",$ref:"#/components/schemas/hash32"},rlp:{title:"RLP",$ref:"#/components/schemas/bytes"}}},SyncingStatus:{title:"Syncing status",oneOf:[{title:"Syncing progress",type:"object",additionalProperties:!1,properties:{startingBlock:{title:"Starting block",$ref:"#/components/schemas/uint"},currentBlock:{title:"Current block",$ref:"#/components/schemas/uint"},highestBlock:{title:"Highest block",$ref:"#/components/schemas/uint"}}},{title:"Not syncing",description:"Should always return false if not syncing.",type:"boolean"}]},FilterResults:{title:"Filter results",oneOf:[{title:"new block or transaction hashes",type:"array",items:{$ref:"#/components/schemas/hash32"}},{title:"new logs",type:"array",items:{$ref:"#/components/schemas/Log"}}]},Filter:{title:"filter",type:"object",additionalProperties:!1,properties:{fromBlock:{title:"from block",$ref:"#/components/schemas/uint"},toBlock:{title:"to block",$ref:"#/components/schemas/uint"},address:{title:"Address(es)",oneOf:[{title:"Any Address",type:"null"},{title:"Address",$ref:"#/components/schemas/address"},{title:"Addresses",$ref:"#/components/schemas/addresses"}]},topics:{title:"Topics",$ref:"#/components/schemas/FilterTopics"}}},FilterTopics:{title:"Filter Topics",oneOf:[{title:"Any Topic Match",type:"null"},{title:"Specified Filter Topics",type:"array",items:{$ref:"#/components/schemas/FilterTopic"}}]},FilterTopic:{title:"Filter Topic List Entry",oneOf:[{title:"Single Topic Match",$ref:"#/components/schemas/bytes32"},{title:"Multiple Topic Match",type:"array",items:{$ref:"#/components/schemas/bytes32"}}]},Log:{title:"log",type:"object",required:["transactionHash"],additionalProperties:!1,properties:{removed:{title:"removed",type:"boolean"},logIndex:{title:"log index",$ref:"#/components/schemas/uint"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"},transactionHash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},address:{title:"address",$ref:"#/components/schemas/address"},data:{title:"data",$ref:"#/components/schemas/bytes"},topics:{title:"topics",type:"array",items:{$ref:"#/components/schemas/bytes32"}}}},ReceiptInfo:{type:"object",title:"Receipt information",required:["blockHash","blockNumber","from","cumulativeGasUsed","gasUsed","logs","logsBloom","transactionHash","transactionIndex","effectiveGasPrice"],additionalProperties:!1,properties:{type:{title:"type",$ref:"#/components/schemas/byte"},transactionHash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"},blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},from:{title:"from",$ref:"#/components/schemas/address"},to:{title:"to",description:"Address of the receiver or null in a contract creation transaction.",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Recipient Address",$ref:"#/components/schemas/address"}]},cumulativeGasUsed:{title:"cumulative gas used",description:"The sum of gas used by this transaction and all preceding transactions in the same block.",$ref:"#/components/schemas/uint"},gasUsed:{title:"gas used",description:"The amount of gas used for this specific transaction alone.",$ref:"#/components/schemas/uint"},blobGasUsed:{title:"blob gas used",description:"The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844.",$ref:"#/components/schemas/uint"},contractAddress:{title:"contract address",description:"The contract address created, if the transaction was a contract creation, otherwise null.",oneOf:[{$ref:"#/components/schemas/address"},{title:"Null",type:"null"}]},logs:{title:"logs",type:"array",items:{$ref:"#/components/schemas/Log"}},logsBloom:{title:"logs bloom",$ref:"#/components/schemas/bytes256"},root:{title:"state root",description:"The post-transaction state root. Only specified for transactions included before the Byzantium upgrade.",$ref:"#/components/schemas/hash32"},status:{title:"status",description:"Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade.",$ref:"#/components/schemas/uint"},effectiveGasPrice:{title:"effective gas price",description:"The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas).",$ref:"#/components/schemas/uint"},blobGasPrice:{title:"blob gas price",description:"The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844.",$ref:"#/components/schemas/uint"}}},AccountProof:{title:"Account proof",type:"object",required:["address","accountProof","balance","codeHash","nonce","storageHash","storageProof"],additionalProperties:!1,properties:{address:{title:"address",$ref:"#/components/schemas/address"},accountProof:{title:"accountProof",type:"array",items:{$ref:"#/components/schemas/bytes"}},balance:{title:"balance",$ref:"#/components/schemas/uint256"},codeHash:{title:"codeHash",$ref:"#/components/schemas/hash32"},nonce:{title:"nonce",$ref:"#/components/schemas/uint64"},storageHash:{title:"storageHash",$ref:"#/components/schemas/hash32"},storageProof:{title:"Storage proofs",type:"array",items:{$ref:"#/components/schemas/StorageProof"}}}},StorageProof:{title:"Storage proof",type:"object",required:["key","value","proof"],additionalProperties:!1,properties:{key:{title:"key",$ref:"#/components/schemas/bytesMax32"},value:{title:"value",$ref:"#/components/schemas/uint256"},proof:{title:"proof",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},Transaction4844Unsigned:{type:"object",title:"EIP-4844 transaction.",required:["type","nonce","to","gas","value","input","maxPriorityFeePerGas","maxFeePerGas","maxFeePerBlobGas","accessList","blobVersionedHashes","chainId"],properties:{type:{title:"type",$ref:"#/components/schemas/byte"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",$ref:"#/components/schemas/address"},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},maxFeePerBlobGas:{title:"max fee per blob gas",description:"The maximum total fee per gas the sender is willing to pay for blob gas in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},blobVersionedHashes:{title:"blobVersionedHashes",description:"List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",type:"array",items:{$ref:"#/components/schemas/hash32"}},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},AccessListEntry:{title:"Access list entry",type:"object",additionalProperties:!1,properties:{address:{$ref:"#/components/schemas/address"},storageKeys:{type:"array",items:{$ref:"#/components/schemas/hash32"}}}},AccessList:{title:"Access list",type:"array",items:{$ref:"#/components/schemas/AccessListEntry"}},Transaction1559Unsigned:{type:"object",title:"EIP-1559 transaction.",required:["type","nonce","gas","value","input","maxFeePerGas","maxPriorityFeePerGas","gasPrice","chainId","accessList"],properties:{type:{title:"type",type:"string",pattern:"^0x2$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},gasPrice:{title:"gas price",description:"The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},Transaction2930Unsigned:{type:"object",title:"EIP-2930 transaction.",required:["type","nonce","gas","value","input","gasPrice","chainId","accessList"],properties:{type:{title:"type",type:"string",pattern:"^0x1$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},TransactionLegacyUnsigned:{type:"object",title:"Legacy transaction.",required:["type","nonce","gas","value","input","gasPrice"],properties:{type:{title:"type",type:"string",pattern:"^0x0$"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},TransactionUnsigned:{oneOf:[{$ref:"#/components/schemas/Transaction4844Unsigned"},{$ref:"#/components/schemas/Transaction1559Unsigned"},{$ref:"#/components/schemas/Transaction2930Unsigned"},{$ref:"#/components/schemas/TransactionLegacyUnsigned"}]},Transaction4844Signed:{title:"Signed 4844 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction4844Unsigned"},{title:"EIP-4844 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},Transaction1559Signed:{title:"Signed 1559 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction1559Unsigned"},{title:"EIP-1559 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},v:{title:"v",description:"For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},Transaction2930Signed:{title:"Signed 2930 Transaction",type:"object",allOf:[{$ref:"#/components/schemas/Transaction2930Unsigned"},{title:"EIP-2930 transaction signature properties.",required:["yParity","r","s"],properties:{yParity:{title:"yParity",description:"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",$ref:"#/components/schemas/uint"},v:{title:"v",description:"For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},TransactionLegacySigned:{title:"Signed Legacy Transaction",type:"object",allOf:[{$ref:"#/components/schemas/TransactionLegacyUnsigned"},{title:"Legacy transaction signature properties.",required:["v","r","s"],properties:{v:{title:"v",$ref:"#/components/schemas/uint"},r:{title:"r",$ref:"#/components/schemas/uint"},s:{title:"s",$ref:"#/components/schemas/uint"}}}]},TransactionSigned:{oneOf:[{$ref:"#/components/schemas/Transaction4844Signed"},{$ref:"#/components/schemas/Transaction1559Signed"},{$ref:"#/components/schemas/Transaction2930Signed"},{$ref:"#/components/schemas/TransactionLegacySigned"}]},TransactionInfo:{type:"object",title:"Transaction information",allOf:[{title:"Contextual information",required:["blockHash","blockNumber","from","hash","transactionIndex"],unevaluatedProperties:!1,properties:{blockHash:{title:"block hash",$ref:"#/components/schemas/hash32"},blockNumber:{title:"block number",$ref:"#/components/schemas/uint"},from:{title:"from address",$ref:"#/components/schemas/address"},hash:{title:"transaction hash",$ref:"#/components/schemas/hash32"},transactionIndex:{title:"transaction index",$ref:"#/components/schemas/uint"}}},{$ref:"#/components/schemas/TransactionSigned"}]},GenericTransaction:{type:"object",title:"Transaction object generic to all types",additionalProperties:!1,properties:{type:{title:"type",$ref:"#/components/schemas/byte"},nonce:{title:"nonce",$ref:"#/components/schemas/uint"},to:{title:"to address",oneOf:[{title:"Contract Creation (null)",type:"null"},{title:"Address",$ref:"#/components/schemas/address"}]},from:{title:"from address",$ref:"#/components/schemas/address"},gas:{title:"gas limit",$ref:"#/components/schemas/uint"},value:{title:"value",$ref:"#/components/schemas/uint"},input:{title:"input data",$ref:"#/components/schemas/bytes"},gasPrice:{title:"gas price",description:"The gas price willing to be paid by the sender in wei",$ref:"#/components/schemas/uint"},maxPriorityFeePerGas:{title:"max priority fee per gas",description:"Maximum fee per gas the sender is willing to pay to miners in wei",$ref:"#/components/schemas/uint"},maxFeePerGas:{title:"max fee per gas",description:"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",$ref:"#/components/schemas/uint"},maxFeePerBlobGas:{title:"max fee per blob gas",description:"The maximum total fee per gas the sender is willing to pay for blob gas in wei",$ref:"#/components/schemas/uint"},accessList:{title:"accessList",description:"EIP-2930 access list",$ref:"#/components/schemas/AccessList"},blobVersionedHashes:{title:"blobVersionedHashes",description:"List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",type:"array",items:{$ref:"#/components/schemas/hash32"}},blobs:{title:"blobs",description:"Raw blob data.",type:"array",items:{$ref:"#/components/schemas/bytes"}},chainId:{title:"chainId",description:"Chain ID that this transaction is valid on.",$ref:"#/components/schemas/uint"}}},Withdrawal:{type:"object",title:"Validator withdrawal",required:["index","validatorIndex","address","amount"],additionalProperties:!1,properties:{index:{title:"index of withdrawal",$ref:"#/components/schemas/uint64"},validatorIndex:{title:"index of validator that generated withdrawal",$ref:"#/components/schemas/uint64"},address:{title:"recipient address for withdrawal value",$ref:"#/components/schemas/address"},amount:{title:"value contained in withdrawal",$ref:"#/components/schemas/uint256"}}},ForkchoiceStateV1:{title:"Forkchoice state object V1",type:"object",required:["headBlockHash","safeBlockHash","finalizedBlockHash"],properties:{headBlockHash:{title:"Head block hash",$ref:"#/components/schemas/hash32"},safeBlockHash:{title:"Safe block hash",$ref:"#/components/schemas/hash32"},finalizedBlockHash:{title:"Finalized block hash",$ref:"#/components/schemas/hash32"}}},ForkchoiceUpdatedResponseV1:{title:"Forkchoice updated response",type:"object",required:["payloadStatus"],properties:{payloadStatus:{title:"Payload status",$ref:"#/components/schemas/RestrictedPayloadStatusV1"},payloadId:{title:"Payload id",$ref:"#/components/schemas/bytes8"}}},PayloadAttributesV1:{title:"Payload attributes object V1",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient"],properties:{timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint64"},prevRandao:{title:"Previous randao value",$ref:"#/components/schemas/bytes32"},suggestedFeeRecipient:{title:"Suggested fee recipient",$ref:"#/components/schemas/address"}}},PayloadAttributesV2:{title:"Payload attributes object V2",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient","withdrawals"],properties:{timestamp:{$ref:"#/components/schemas/PayloadAttributesV1/properties/timestamp"},prevRandao:{$ref:"#/components/schemas/PayloadAttributesV1/properties/prevRandao"},suggestedFeeRecipient:{$ref:"#/components/schemas/PayloadAttributesV1/properties/suggestedFeeRecipient"},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/WithdrawalV1"}}}},PayloadAttributesV3:{title:"Payload attributes object V3",type:"object",required:["timestamp","prevRandao","suggestedFeeRecipient","withdrawals","parentBeaconBlockRoot"],properties:{timestamp:{$ref:"#/components/schemas/PayloadAttributesV2/properties/timestamp"},prevRandao:{$ref:"#/components/schemas/PayloadAttributesV2/properties/prevRandao"},suggestedFeeRecipient:{$ref:"#/components/schemas/PayloadAttributesV2/properties/suggestedFeeRecipient"},withdrawals:{$ref:"#/components/schemas/PayloadAttributesV2/properties/withdrawals"},parentBeaconBlockRoot:{title:"Parent beacon block root",$ref:"#/components/schemas/hash32"}}},PayloadStatusV1:{title:"Payload status object V1",type:"object",required:["status"],properties:{status:{title:"Payload validation status",type:"string",enum:["VALID","INVALID","SYNCING","ACCEPTED","INVALID_BLOCK_HASH"]},latestValidHash:{title:"The hash of the most recent valid block",$ref:"#/components/schemas/hash32"},validationError:{title:"Validation error message",type:"string"}}},RestrictedPayloadStatusV1:{$ref:"#/components/schemas/PayloadStatusV1",properties:{status:{$ref:"#/components/schemas/PayloadStatusV1/properties/status",description:"Set of possible values is restricted to VALID, INVALID, SYNCING",enum:["VALID","INVALID","SYNCING"]},latestValidHash:{$ref:"#/components/schemas/PayloadStatusV1/properties/latestValidHash"},validationError:{$ref:"#/components/schemas/PayloadStatusV1/properties/validationError"}}},PayloadStatusNoInvalidBlockHash:{$ref:"#/components/schemas/PayloadStatusV1",title:"Payload status object deprecating INVALID_BLOCK_HASH status",properties:{status:{$ref:"#/components/schemas/PayloadStatusV1/properties/status",enum:["VALID","INVALID","SYNCING","ACCEPTED"]},latestValidHash:{$ref:"#/components/schemas/PayloadStatusV1/properties/latestValidHash"},validationError:{$ref:"#/components/schemas/PayloadStatusV1/properties/validationError"}}},ExecutionPayloadV1:{title:"Execution payload object V1",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions"],properties:{parentHash:{title:"Parent block hash",$ref:"#/components/schemas/hash32"},feeRecipient:{title:"Recipient of transaction priority fees",$ref:"#/components/schemas/address"},stateRoot:{title:"State root",$ref:"#/components/schemas/hash32"},receiptsRoot:{title:"Receipts root",$ref:"#/components/schemas/hash32"},logsBloom:{title:"Bloom filter",$ref:"#/components/schemas/bytes256"},prevRandao:{title:"Previous randao value",$ref:"#/components/schemas/bytes32"},blockNumber:{title:"Block number",$ref:"#/components/schemas/uint64"},gasLimit:{title:"Gas limit",$ref:"#/components/schemas/uint64"},gasUsed:{title:"Gas used",$ref:"#/components/schemas/uint64"},timestamp:{title:"Timestamp",$ref:"#/components/schemas/uint64"},extraData:{title:"Extra data",$ref:"#/components/schemas/bytesMax32"},baseFeePerGas:{title:"Base fee per gas",$ref:"#/components/schemas/uint256"},blockHash:{title:"Block hash",$ref:"#/components/schemas/hash32"},transactions:{title:"Transactions",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},WithdrawalV1:{title:"Withdrawal object V1",type:"object",required:["index","validatorIndex","address","amount"],properties:{index:{title:"Withdrawal index",$ref:"#/components/schemas/uint64"},validatorIndex:{title:"Validator index",$ref:"#/components/schemas/uint64"},address:{title:"Withdrawal address",$ref:"#/components/schemas/address"},amount:{title:"Withdrawal amount",$ref:"#/components/schemas/uint64"}}},ExecutionPayloadV2:{title:"Execution payload object V2",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/transactions"},withdrawals:{title:"Withdrawals",type:"array",items:{$ref:"#/components/schemas/WithdrawalV1"}}}},ExecutionPayloadV3:{title:"Execution payload object V3",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals","blobGasUsed","excessBlobGas"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/transactions"},withdrawals:{$ref:"#/components/schemas/ExecutionPayloadV2/properties/withdrawals"},blobGasUsed:{title:"Blob gas used",$ref:"#/components/schemas/uint64"},excessBlobGas:{title:"Excess blob gas",$ref:"#/components/schemas/uint64"}}},ExecutionPayloadV4:{title:"Execution payload object V4",type:"object",required:["parentHash","feeRecipient","stateRoot","receiptsRoot","logsBloom","prevRandao","blockNumber","gasLimit","gasUsed","timestamp","extraData","baseFeePerGas","blockHash","transactions","withdrawals","blobGasUsed","excessBlobGas","depositRequests","withdrawalRequests","consolidationRequests"],properties:{parentHash:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/parentHash"},feeRecipient:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/feeRecipient"},stateRoot:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/stateRoot"},receiptsRoot:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/receiptsRoot"},logsBloom:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/logsBloom"},prevRandao:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/prevRandao"},blockNumber:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blockNumber"},gasLimit:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/gasLimit"},gasUsed:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/gasUsed"},timestamp:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/timestamp"},extraData:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/extraData"},baseFeePerGas:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/baseFeePerGas"},blockHash:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blockHash"},transactions:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/transactions"},withdrawals:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/withdrawals"},blobGasUsed:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/blobGasUsed"},excessBlobGas:{$ref:"#/components/schemas/ExecutionPayloadV3/properties/excessBlobGas"},depositRequests:{title:"Deposit requests",type:"array",items:{$ref:"#/components/schemas/DepositRequestV1"}},withdrawalRequests:{title:"Withdrawals requests",type:"array",items:{$ref:"#/components/schemas/WithdrawalRequestV1"}},consolidationRequests:{title:"Consolidation requests",type:"array",items:{$ref:"#/components/schemas/ConsolidationRequestV1"}}}},ExecutionPayloadBodyV1:{title:"Execution payload body object V1",type:"object",required:["transactions"],properties:{transactions:{$ref:"#/components/schemas/ExecutionPayloadV1/properties/transactions"},withdrawals:{title:"Withdrawals",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalV1"}}}},ExecutionPayloadBodyV2:{title:"Execution payload body object V2",type:"object",required:["transactions"],properties:{transactions:{title:"Transactions",type:"array",items:{$ref:"#/components/schemas/bytes"}},withdrawals:{title:"Withdrawals",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalV1"}},depositRequests:{title:"Deposit requests",type:["array","null"],items:{$ref:"#/components/schemas/DepositRequestV1"}},withdrawalRequests:{title:"Withdrawals requests",type:["array","null"],items:{$ref:"#/components/schemas/WithdrawalRequestV1"}},consolidationRequests:{title:"Consolidation requests - array - 'null'",items:{$ref:"#/components/schemas/ConsolidationRequestV1"}}}},BlobsBundleV1:{title:"Blobs bundle object V1",type:"object",required:["commitments","proofs","blobs"],properties:{commitments:{title:"Commitments",type:"array",items:{$ref:"#/components/schemas/bytes48"}},proofs:{title:"Proofs",type:"array",items:{$ref:"#/components/schemas/bytes48"}},blobs:{title:"Blobs",type:"array",items:{$ref:"#/components/schemas/bytes"}}}},DepositRequestV1:{title:"Deposit request object V1",type:"object",required:["pubkey","withdrawalCredentials","amount","signature","index"],properties:{pubkey:{title:"Public key",$ref:"#/components/schemas/bytes48"},withdrawalCredentials:{title:"Withdrawal credentials",$ref:"#/components/schemas/bytes32"},amount:{title:"Deposit amount",$ref:"#/components/schemas/uint64"},signature:{title:"Deposit signature",$ref:"#/components/schemas/bytes96"},index:{title:"Deposit index",$ref:"#/components/schemas/uint64"}}},WithdrawalRequestV1:{title:"Withdrawal request object V1",type:"object",required:["sourceAddress","validatorPubkey","amount"],properties:{sourceAddress:{title:"Source address",$ref:"#/components/schemas/address"},validatorPubkey:{title:"Validator public key",$ref:"#/components/schemas/bytes48"},amount:{title:"Withdraw amount",$ref:"#/components/schemas/uint64"}}},ConsolidationRequestV1:{title:"Consolidation request object V1",type:"object",required:["sourceAddress","sourcePubkey","targetPubkey"],properties:{sourceAddress:{title:"Source address",$ref:"#/components/schemas/address"},sourcePubkey:{title:"Source validator public key",$ref:"#/components/schemas/bytes48"},targetPubkey:{title:"Target validator public key",$ref:"#/components/schemas/bytes48"}}},TransitionConfigurationV1:{title:"Transition configuration object",type:"object",required:["terminalTotalDifficulty","terminalBlockHash","terminalBlockNumber"],properties:{terminalTotalDifficulty:{title:"Terminal total difficulty",$ref:"#/components/schemas/uint256"},terminalBlockHash:{title:"Terminal block hash",$ref:"#/components/schemas/hash32"},terminalBlockNumber:{title:"Terminal block number",$ref:"#/components/schemas/uint64"}}}},tags:{MetaMask:{name:"MetaMask",description:"MetaMask-specific methods."},Restricted:{name:"Restricted",description:"Restricted methods. If a method is restricted, the caller must have the corresponding permission via `wallet_requestPermissions` in order to call it."},Mobile:{name:"Mobile",description:"Mobile-specific methods."},Experimental:{name:"Experimental",description:"Experimental methods."},Deprecated:{name:"Deprecated",description:"Deprecated methods."},Ethereum:{name:"Ethereum API",description:"Ethereum execution API methods."},Multichain:{name:"Multichain API",description:"Multichain API methods."}},contentDescriptors:{},examplePairings:{},links:{},examples:{}}}}}},{package:"@metamask/chain-agnostic-permission>@metamask/api-specs",file:"node_modules/@metamask/chain-agnostic-permission/node_modules/@metamask/api-specs/dist/build/openrpc.json"}],[1463,{"./build/multichain-openrpc.json":1461,"./build/openrpc.json":1462},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.MultiChainOpenRPCDocument=s.MetaMaskOpenRPCDocument=void 0;const n=a(e("./build/openrpc.json"));s.MetaMaskOpenRPCDocument=n.default;const r=a(e("./build/multichain-openrpc.json"));s.MultiChainOpenRPCDocument=r.default,s.default=n.default}}},{package:"@metamask/chain-agnostic-permission>@metamask/api-specs",file:"node_modules/@metamask/chain-agnostic-permission/node_modules/@metamask/api-specs/dist/index.js"}],[1464,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports={"0x12652C6d93FDB6F4f37d48A8687783C782BB0d10":{name:"Entangle",logo:"NGL.svg",erc20:!0,symbol:"NGL",decimals:18},"0xB50721BCf8d664c30412Cfbc6cf7a15145234ad1":{name:"Arbitrum",logo:"Arb.svg",erc20:!0,symbol:"ARB",decimals:18},"0x4D0528598F916Fd1D8dc80e5f54a8fEEDcFd4b18":{name:"Atoshi",logo:"ATOS.svg",erc20:!0,symbol:"ATOS",decimals:18},"0x57B946008913B82E4dF85f501cbAeD910e58D26C":{name:"POND",logo:"POND.svg",erc20:!0,symbol:"POND",decimals:18},"0x5eed99d066a8CaF10f3E4327c1b3D8b673485eED":{name:"SEED",logo:"SEED.svg",erc20:!0,symbol:"SEED",decimals:18},"0x487d62468282Bd04ddf976631C23128A425555EE":{name:"UPCX",logo:"UPC.svg",erc20:!0,symbol:"UPC",decimals:5},"0xd3210F246Ae54C5a45A7b4A83315bf718F591bfc":{name:"ArkiTech",logo:"ARKI.svg",erc20:!0,symbol:"ARKI",decimals:9},"0x7d51888C5ABb7CDfa9cdd6A50673c7F8afAccD7F":{name:"DuckDAO Token",logo:"duckdao.svg",erc20:!0,symbol:"DD",decimals:18},"0x49642110B712C1FD7261Bc074105E9E44676c68F":{name:"DinoLFG",logo:"DINO.svg",erc20:!0,symbol:"DINO",decimals:18},"0xB8BAa0e4287890a5F79863aB62b7F175ceCbD433":{name:"Swerve DAO Token",logo:"swrv.svg",erc20:!0,symbol:"SWRV",decimals:18},"0x8b79656FC38a04044E495e22fAD747126ca305C4":{name:"AgaveCoin",logo:"agvc.svg",erc20:!0,symbol:"AGVC",decimals:18},"0x967da4048cD07aB37855c090aAF366e4ce1b9F48":{name:"Ocean Token",logo:"ocean.svg",erc20:!0,symbol:"OCEAN",decimals:18},"0x83e6f1E41cdd28eAcEB20Cb649155049Fac3D5Aa":{name:"PolkastarterToken",logo:"pols.svg",erc20:!0,symbol:"POLS",decimals:18},"0x08d967bb0134F2d07f7cfb6E246680c53927DD30":{name:"MATH Token",logo:"math.svg",erc20:!0,symbol:"MATH",decimals:18},"0xccC8cb5229B0ac8069C51fd58367Fd1e622aFD97":{name:"Gods Unchained",logo:"gods.svg",erc20:!0,symbol:"GODS",decimals:18},"0xF57e7e7C23978C3cAEC3C3548E3D615c346e79fF":{name:"Immutable X",logo:"imx.svg",erc20:!0,symbol:"IMX",decimals:18},"0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f":{name:"Gho Token",logo:"GHO.svg",erc20:!0,symbol:"GHO",decimals:18},"0x536381a8628dBcC8C70aC9A30A7258442eAb4c92":{name:"Pantos Token ",logo:"pan.svg",erc20:!0,symbol:"PAN",decimals:8},"0x011E128Ec62840186F4A07E85E3ACe28858c5606":{name:"Valeria",logo:"val.svg",erc20:!0,symbol:"VAL",decimals:18},"0x6c3ea9036406852006290770BEdFcAbA0e23A0e8":{name:"PayPal USD",logo:"pyusd.svg",erc20:!0,symbol:"PYUSD",decimals:6},"0x8b385Ca3592A5EFc34E0C9fE663de56897F1751F":{name:"INFibit",logo:"INFibit.svg",erc20:!0,symbol:"IBIT",decimals:18},"0x9bf1D7D63dD7a4ce167CF4866388226EEefa702E":{name:"Ben Coin",logo:"BEN.svg",erc20:!0,symbol:"BEN",decimals:18},"0xC7a2572fA8FDB0f7E81d6D3c4e3CCF78FB0DC374":{name:"Bens Finale",logo:"BensFinale.svg",erc20:!0,symbol:"FINALE",decimals:18},"0x99cFB8cBA9c821B4a343c6a1Fc630465C9708DF5":{name:"Pepe Inu",logo:"PepeInu.svg",erc20:!0,symbol:"$PEPEINU",decimals:18},"0xCEBA2a8F6Ec221AEB5f3a7bcd15Cbc7e6a387bfb":{name:"Peter Pan",logo:"PeterPan.svg",erc20:!0,symbol:"PAN",decimals:18},"0x467719aD09025FcC6cF6F8311755809d45a5E5f3":{name:"Axelar",logo:"axelar.svg",erc20:!0,symbol:"AXL",decimals:6},"0x665F77fbA5975ab40Ce61c90F28007fb5b09D7B1":{name:"Genieswap",logo:"Genieswap.svg",erc20:!0,symbol:"GENIE",decimals:18},"0x09E6d500D14D13e0528d2c0fff24E5ffF68237B4":{name:"Dohrnii",logo:"dhn.svg",erc20:!0,symbol:"DHN",decimals:18},"0xaE0585a259A3BCAB258D6EE02FB583f7B33C2a12":{name:"TempleCoin",logo:"tem.svg",erc20:!0,symbol:"TEM",decimals:18},"0xaeDf386B755465871fF874E3E37Af5976E247064":{name:"Fasttoken",logo:"ftn.svg",erc20:!0,symbol:"FTN",decimals:18},"0x7BEF710a5759d197EC0Bf621c3Df802C2D60D848":{name:"SHOPX",logo:"SHOPX.svg",erc20:!0,symbol:"SHOPX",decimals:18},"0xBa3335588D9403515223F109EdC4eB7269a9Ab5D":{name:"Gearbox",logo:"gear.svg",erc20:!0,symbol:"GEAR",decimals:18},"0x9B6B9d2468E165a02FEf69E61B6D3D6CBC0Ac409":{name:"OASISLIFE",logo:"OFE.svg",erc20:!0,symbol:"OFE",decimals:18},"0xdf0162A6B3e9fDf0302c1e949739DeeaFafd8F89":{name:"METAOASIS",logo:"MOA.svg",erc20:!0,symbol:"MOA",decimals:18},"0xe4dae00bc1c46ea2F44ae71B1BEb8b171C15d812":{name:"PREMA",logo:"PREMA.svg",erc20:!0,symbol:"PRMX",decimals:18},"0x1416946162B1C2c871A73B07E932D2fB6C932069":{name:"Energi",logo:"energi.svg",erc20:!0,symbol:"NRG",decimals:18},"0x0d88eD6E74bbFD96B831231638b66C05571e824F":{name:"Aventus",logo:"aventus.svg",erc20:!0,symbol:"AVT",decimals:18},"0x4FC15c91a9c4A9efB404174464687E8e128730C2":{name:"STAT",logo:"STAT.svg",erc20:!0,erc721:!1,symbol:"STAT",decimals:18},"0x4ad7a056191F4c9519fAcd6D75FA94CA26003aCE":{name:"GoldPesa Option",logo:"GPO.svg",erc20:!0,symbol:"GPO",decimals:18},"0x767FE9EDC9E0dF98E07454847909b5E959D7ca0E":{name:"Illuvium",logo:"illuvium.svg",erc20:!0,erc721:!1,symbol:"ILV",decimals:18},"0x85F17Cf997934a597031b2E18a9aB6ebD4B9f6a4":{name:"NEAR",logo:"NEAR.svg",erc20:!0,symbol:"NEAR",decimals:24},"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2":{name:"SushiSwap",logo:"sushi.svg",erc20:!0,erc721:!1,symbol:"SUSHI",decimals:18},"0x881Ba05de1E78f549cC63a8f6Cabb1d4AD32250D":{name:"00",logo:"00.svg",erc20:!0,erc721:!1,symbol:"00",decimals:18},"0xC211477cb4098aC22a98432781f5f26a1E07a4d4":{name:"CULTURED",logo:"CULTURED.svg",erc20:!0,erc721:!1,symbol:"CULTURED",decimals:18},"0x86f2A193b116d1f9C53Ed26d97F77cDC8BcF4c2b":{name:"EHTAGA",logo:"EHTAGA.svg",erc20:!0,erc721:!1,symbol:"EHTAGA",decimals:18},"0x54b79A15b2e2c55c736A66bb0A978fb840407aC8":{name:"FEVER",logo:"FEVER.svg",erc20:!0,erc721:!1,symbol:"FEVER",decimals:18},"0x677c9fE4396D3D13A0F9013a8118eAE386C843A5":{name:"IAM",logo:"IAM.svg",erc20:!0,erc721:!1,symbol:"IAM",decimals:18},"0xf63c65E855020E4B74f0Ad842D9537dA0E6162eC":{name:"ISH",logo:"ISH.svg",erc20:!0,erc721:!1,symbol:"ISH",decimals:18},"0xc105fA46510F32c0444CCdB4e51065da95caA1B4":{name:"LITA",logo:"LITA.svg",erc20:!0,erc721:!1,symbol:"LITA",decimals:18},"0x5401F949cDfa3E5aF32538167c0314230769209C":{name:"MAHCOIN",logo:"MAHCOIN.svg",erc20:!0,erc721:!1,symbol:"MAHCOIN",decimals:18},"0x711D2C47aFf84B96AD0F36983b1c41Be2C509e18":{name:"NIKITA",logo:"NIKITA.svg",erc20:!0,erc721:!1,symbol:"NIKITA",decimals:18},"0x3C44aEc33993b6830e5C2a705ea879b9C9ba0f7c":{name:"NYELA",logo:"NYELA.svg",erc20:!0,erc721:!1,symbol:"NYELA",decimals:18},"0xfa9096c99e687ea8E0064C23DAaCFE87cc99E4Ba":{name:"RON",logo:"RON.svg",erc20:!0,erc721:!1,symbol:"RON",decimals:18},"0x287a7C95aD00bBDd48599Ad2919567fD09281f07":{name:"STEELO",logo:"STEELO.svg",erc20:!0,erc721:!1,symbol:"STEELO",decimals:18},"0x2Ec3275f7aCe4044e499823F511cd58250be8E3d":{name:"Privilege",logo:"prvg.svg",erc20:!0,symbol:"PRVG",decimals:8},"0x65BB569FAaDD324a00883FdE4c46346cc96D5c0A":{name:"Provide",logo:"prvd.svg",erc20:!0,symbol:"PRVD",decimals:8},"0xB4272071eCAdd69d933AdcD19cA99fe80664fc08":{name:"CryptoFranc",logo:"XCHF.svg",erc20:!0,symbol:"XCHF",decimals:18},"0x5aFE3855358E112B5647B952709E6165e1c1eEEe":{name:"Safe Token",logo:"safe-green-token.svg",erc20:!0,symbol:"SAFE",decimals:18},"0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03":{name:"Nouns",erc20:!1,erc721:!0,symbol:"NOUN",decimals:0,logo:"nouns.svg"},"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D":{name:"BoredApeYachtClub",erc20:!1,erc721:!0,symbol:"BAYC",decimals:0,logo:"bayc.svg"},"0x08D7C0242953446436F34b4C78Fe9da38c73668d":{name:"PROOF Collective",erc20:!1,erc721:!0,symbol:"PROOF",decimals:0,logo:"proof.svg"},"0x23581767a106ae21c074b2276D25e5C3e136a68b":{name:"Moonbirds",erc20:!1,erc721:!0,symbol:"MOONBIRD",decimals:0,logo:"moonbirds.svg"},"0x60E4d786628Fea6478F785A6d7e704777c86a7c6":{name:"MutantApeYachtClub",erc20:!1,erc721:!0,symbol:"MAYC",decimals:0,logo:"mayc.svg"},"0x49cF6f5d44E70224e2E23fDcdd2C053F30aDA28B":{name:"CloneX",erc20:!1,erc721:!0,symbol:"CloneX",decimals:0,logo:"clonex.svg"},"0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e":{name:"Doodles",erc20:!1,erc721:!0,symbol:"DOODLE",decimals:0,logo:"doodles.svg"},"0xED5AF388653567Af2F388E6224dC7C4b3241C544":{name:"Azuki",erc20:!1,erc721:!0,symbol:"AZUKI",decimals:0,logo:"azuki.svg"},"0xa3AEe8BcE55BEeA1951EF834b99f3Ac60d1ABeeB":{name:"VeeFriends",erc20:!1,erc721:!0,symbol:"VFT",decimals:0,logo:"veefriends.svg"},"0x34d85c9CDeB23FA97cb08333b511ac86E1C4E258":{name:"Otherdeed",erc20:!1,erc721:!0,symbol:"OTHR",decimals:0,logo:"otherdeed.svg"},"0xBBc2AE13b23d715c30720F079fcd9B4a74093505":{name:"Ethernity Chain Token",logo:"ERN.svg",erc20:!0,symbol:"ERN",decimals:18},"0x243cACb4D5fF6814AD668C3e225246efA886AD5a":{name:"Shina Inu",logo:"shina.svg",erc20:!0,symbol:"SHI",decimals:18},"0xD057B63f5E69CF1B929b356b579Cba08D7688048":{name:"CoW Protocol Virtual Token",logo:"vCOW.svg",erc20:!0,symbol:"vCOW",decimals:18},"0xDEf1CA1fb7FBcDC777520aa7f396b4E015F497aB":{name:"CoW Protocol Token",logo:"COW.svg",erc20:!0,symbol:"COW",decimals:18},"0xEd04915c23f00A313a544955524EB7DBD823143d":{name:"Alchemy Pay",logo:"ACH.svg",erc20:!0,symbol:"ACH",decimals:8},"0xeDF6568618A00C6F0908Bf7758A16F76B6E04aF9":{name:"Arianee",logo:"aria20.svg",erc20:!0,symbol:"ARIA20",decimals:18},"0x88D8DA2A8D0fA5b1f4E38030AC486aDE0AFA2798":{name:"Terrapass Coin",logo:"tpsc.svg",erc20:!0,symbol:"TPSC",decimals:18},"0x4730fB1463A6F1F44AEB45F6c5c422427f37F4D0":{name:"The 4th Pillar Token",logo:"four.svg",erc20:!0,symbol:"FOUR",decimals:18},"0x875773784Af8135eA0ef43b5a374AaD105c5D39e":{name:"Idle DAO Token",logo:"idle.svg",erc20:!0,symbol:"IDLE",decimals:18},"0x6BeA7CFEF803D1e3d5f7C0103f7ded065644e197":{name:"Gamma",logo:"Gamma.svg",erc20:!0,symbol:"GAMMA",decimals:18},"0x26805021988F1a45dC708B5FB75Fc75F21747D8c":{name:"xGamma",logo:"xGamma.svg",erc20:!0,symbol:"xGAMMA",decimals:18},"0xc7D9c108D4E1dD1484D3e2568d7f74bfD763d356":{name:"SORA Synthetic USD",logo:"sora-xstusd.svg",erc20:!0,symbol:"XSTUSD",decimals:18},"0x519C1001D550C0a1DaE7d1fC220f7d14c2A521BB":{name:"Polkaswap",logo:"sora-pswap.svg",erc20:!0,symbol:"PSWAP",decimals:18},"0x40FD72257597aA14C7231A7B1aaa29Fce868F677":{name:"SORA",logo:"sora-xor.svg",erc20:!0,symbol:"XOR",decimals:18},"0x909E34d3f6124C324ac83DccA84b74398a6fa173":{name:"$ZKP Token",logo:"ZKP.svg",erc20:!0,erc721:!1,symbol:"$ZKP",decimals:18},"0xe88f8313e61A97cEc1871EE37fBbe2a8bf3ed1E4":{name:"SORA Validator",logo:"sora-val.svg",erc20:!0,symbol:"VAL",decimals:18},"0x7A58c0Be72BE218B41C608b7Fe7C5bB630736C71":{name:"ConstitutionDAO",logo:"PEOPLE.svg",erc20:!0,symbol:"PEOPLE",decimals:18},"0x32E6C34Cd57087aBBD59B5A4AECC4cB495924356":{name:"BitBase",logo:"BTBS.svg",erc20:!0,symbol:"BTBS",decimals:18},"0x3fa400483487A489EC9b1dB29C4129063EEC4654":{name:"Cryptokek.com",logo:"cryptokek.svg",erc20:!0,symbol:"KEK",decimals:18},"0xEd3D4e446A96dC3b181B64B75c3c70dA41dC3CBe":{name:"Vodra",logo:"Vodra.svg",erc20:!0,symbol:"VDR",decimals:18},"0xb753428af26E81097e7fD17f40c88aaA3E04902c":{name:"Spice",logo:"sfi.svg",erc20:!0,symbol:"SFI",decimals:18},"0xd084944d3c05CD115C09d072B9F44bA3E0E45921":{name:"Manifold Finance",logo:"Manifold.svg",erc20:!0,symbol:"FOLD",decimals:18},"0x9a0242b7a33DAcbe40eDb927834F96eB39f8fBCB":{name:"BABB",logo:"bax.svg",erc20:!0,symbol:"BAX",decimals:18},"0x4Cf89ca06ad997bC732Dc876ed2A7F26a9E7f361":{name:"Mysterium",logo:"MYST.svg",erc20:!0,symbol:"MYST",decimals:18},"0x697eF32B4a3F5a4C39dE1cB7563f24CA7BfC5947":{name:"Insula Token",logo:"Insula.svg",erc20:!0,symbol:"ISLA",decimals:18},"0x62Dc4817588d53a056cBbD18231d91ffCcd34b2A":{name:"DeHive",logo:"dehive.svg",erc20:!0,erc721:!1,symbol:"DHV",decimals:18},"0x8400D94A5cb0fa0D041a3788e395285d61c9ee5e":{name:"Unibright",logo:"ubt.svg",erc20:!0,symbol:"UBT",decimals:8},"0xfAd45E47083e4607302aa43c65fB3106F1cd7607":{name:"Hoge Finance",logo:"HogeFinanceLogo.svg",erc20:!0,symbol:"HOGE",decimals:9},"0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b":{name:"Axie Infinity Shard",logo:"AXS.svg",erc20:!0,symbol:"AXS",decimals:18},"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25":{name:"Smooth Love Potion",logo:"SLP.svg",erc20:!0,symbol:"SLP",decimals:0},"0x10633216E7E8281e33c86F02Bf8e565a635D9770":{name:"Dvision Network",logo:"dvision.svg",erc20:!0,symbol:"DVI",decimals:18},"0x898BAD2774EB97cF6b94605677F43b41871410B1":{name:"vEth2",logo:"vEth2.svg",erc20:!0,symbol:"vEth2",decimals:18},"0x321C2fE4446C7c963dc41Dd58879AF648838f98D":{name:"Cryptex Finance",logo:"ctx.svg",erc20:!0,symbol:"CTX",decimals:18},"0x16c52CeeCE2ed57dAd87319D91B5e3637d50aFa4":{name:"TCAP Token",logo:"tcap.svg",erc20:!0,symbol:"TCAP",decimals:18},"0xE94B97b6b43639E238c851A7e693F50033EfD75C":{name:"Rainbow Token",logo:"halodao-rnbw.svg",erc20:!0,symbol:"RNBW",decimals:18},"0x47BE779De87de6580d0548cde80710a93c502405":{name:"Rainbow Pool",logo:"halodao-xrnbw.svg",erc20:!0,symbol:"xRNBW",decimals:18},"0xe7aE6D0C56CACaf007b7e4d312f9af686a9E9a04":{name:"Vabble",logo:"VAB.svg",erc20:!0,symbol:"VAB",decimals:18},"0x853d955aCEf822Db058eb8505911ED77F175b99e":{name:"Frax",logo:"frax.svg",erc20:!0,symbol:"FRAX",decimals:18},"0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0":{name:"Frax Share",logo:"fxs.svg",erc20:!0,symbol:"FXS",decimals:18},"0x84810bcF08744d5862B8181f12d17bfd57d3b078":{name:"SharedStake",logo:"sharedstake.svg",erc20:!0,symbol:"SGT",decimals:18},"0x75387e1287Dd85482aB66102DA9f6577E027f609":{name:"MindsyncAI",logo:"MAI.svg",erc20:!0,symbol:"MAI",decimals:18},"0x196f4727526eA7FB1e17b2071B3d8eAA38486988":{name:"Reserve",logo:"rsv.svg",erc20:!0,symbol:"RSV",decimals:18},"0x320623b8E4fF03373931769A31Fc52A4E78B5d70":{name:"Reserve Rights",logo:"rsr.svg",erc20:!0,symbol:"RSR",decimals:18},"0x1cF4592ebfFd730c7dc92c1bdFFDfc3B9EfCf29a":{name:"WAVES",logo:"waves.svg",erc20:!0,symbol:"WAVES",decimals:18},"0x252739487C1fa66eaeaE7CED41d6358aB2a6bCa9":{name:"ArCoin",logo:"ArCoin.svg",erc20:!0,symbol:"RCOIN",decimals:8},"0x18aAA7115705e8be94bfFEBDE57Af9BFc265B998":{name:"Audius",logo:"audius.svg",erc20:!0,symbol:"AUDIO",decimals:18},"0x8E3BCC334657560253B83f08331d85267316e08a":{name:"Rubic",logo:"brbc.svg",erc20:!0,symbol:"BRBC",decimals:18},"0xca1207647Ff814039530D7d35df0e1Dd2e91Fa84":{name:"dHEDGE DAO Token",logo:"DHT.svg",erc20:!0,symbol:"DHT",decimals:18},"0x6243d8CEA23066d098a15582d81a598b4e8391F4":{name:"Reflexer Ungovernance Token",logo:"flx.svg",erc20:!0,symbol:"FLX",decimals:18},"0x03ab458634910AaD20eF5f1C8ee96F1D6ac54919":{name:"Rai Reflex Index",logo:"rai.svg",erc20:!0,symbol:"RAI",decimals:18},"0xF25c91C87e0B1fd9B4064Af0F427157AaB0193A7":{name:"BASIC Token",logo:"basic.svg",erc20:!0,symbol:"BASIC",decimals:18},"0x53C8395465A84955c95159814461466053DedEDE":{name:"DeGate Token",logo:"DG.svg",erc20:!0,symbol:"DG",decimals:18},"0xBCf9dBf8B14eD096B2BA08b7269356197fDd1b5D":{name:"Avaluse",logo:"avaluse.svg",erc20:!0,symbol:"AVAL",decimals:18},"0x6E765D26388A17A6e86c49A8E41DF3F58aBcd337":{name:"Kangal",logo:"kangal.svg",erc20:!0,symbol:"KANGAL",decimals:18},"0x9AF4f26941677C706cfEcf6D3379FF01bB85D5Ab":{name:"DomRaiderToken",logo:"drt.svg",erc20:!0,symbol:"DRT",decimals:8},"0x06B179e292f080871825beD5D722162fD96B4c95":{name:"10x.gg",logo:"xgg.svg",erc20:!0,symbol:"XGG",decimals:18},"0xF29992D7b589A0A6bD2de7Be29a97A6EB73EaF85":{name:"DMScript",logo:"dmst.svg",erc20:!0,symbol:"DMST",decimals:18},"0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5":{name:"Olympus",logo:"OHM.svg",erc20:!0,symbol:"OHM",decimals:9},"0x0ab87046fBb341D058F17CBC4c1133F25a20a52f":{name:"Governance OHM",logo:"gOHM.svg",erc20:!0,symbol:"gOHM",decimals:18},"0xDd1Ad9A21Ce722C151A836373baBe42c868cE9a4":{name:"Universal Basic Income",logo:"ubi.svg",erc20:!0,symbol:"UBI",decimals:18},"0xf293d23BF2CDc05411Ca0edDD588eb1977e8dcd4":{name:"Sylo",logo:"SYLO.svg",erc20:!0,symbol:"SYLO",decimals:18},"0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84":{name:"Liquid staked Ether 2.0",logo:"stETH.svg",erc20:!0,symbol:"stETH",decimals:18},"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0":{name:"Wrapped liquid staked Ether 2.0",logo:"wstETH.svg",erc20:!0,symbol:"wstETH",decimals:18},"0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32":{name:"Lido DAO Token",logo:"LDO.svg",erc20:!0,symbol:"LDO",decimals:18},"0xbd31EA8212119f94A611FA969881CBa3EA06Fa3d":{name:"LUNA Token",logo:"Luna.svg",erc20:!0,symbol:"LUNA",decimals:6},"0xa693B19d2931d498c5B318dF961919BB4aee87a5":{name:"UST Token",logo:"UST.svg",erc20:!0,symbol:"UST",decimals:6},"0xd2877702675e6cEb975b4A1dFf9fb7BAF4C91ea9":{name:"LUNA Token - Shuttle",logo:"lunc.svg",erc20:!0,symbol:"LUNC",decimals:18},"0xa47c8bf37f92aBed4A126BDA807A7b7498661acD":{name:"UST Token - Shuttle",logo:"ustc.svg",erc20:!0,symbol:"USTC",decimals:18},"0xcAAfF72A8CbBfc5Cf343BA4e26f65a257065bFF1":{name:"KRT Token - Shuttle",logo:"KRT.svg",erc20:!0,symbol:"KRT-S",decimals:18},"0x676Ad1b33ae6423c6618C1AEcf53BAa29cf39EE5":{name:"SDT Token - Shuttle",logo:"SDT.svg",erc20:!0,symbol:"SDT-S",decimals:18},"0x156B36ec68FdBF84a925230BA96cb1Ca4c4bdE45":{name:"MNT Token - Shuttle",logo:"MNT.svg",erc20:!0,symbol:"MNT-S",decimals:18},"0x09a3EcAFa817268f77BE1283176B946C4ff2E608":{name:"MIR Token - Shuttle",logo:"MIR.svg",erc20:!0,symbol:"MIR-S",decimals:18},"0xd36932143F6eBDEDD872D5Fb0651f4B72Fd15a84":{name:"Mirror AAPL Token - Shuttle",logo:"mAAPL.svg",erc20:!0,symbol:"mAAPL-S",decimals:18},"0x59A921Db27Dd6d4d974745B7FfC5c33932653442":{name:"Mirror GOOGL Token - Shuttle",logo:"mGOOGL.svg",erc20:!0,symbol:"mGOGL-S",decimals:18},"0x21cA39943E91d704678F5D00b6616650F066fD63":{name:"Mirror TSLA Token - Shuttle",logo:"mTSLA.svg",erc20:!0,symbol:"mTSLA-S",decimals:18},"0xC8d674114bac90148d11D3C1d33C61835a0F9DCD":{name:"Mirror NFLX Token - Shuttle",logo:"mNFLX.svg",erc20:!0,symbol:"mNFLX-S",decimals:18},"0x13B02c8dE71680e71F0820c996E4bE43c2F57d15":{name:"Mirror QQQ Token - Shuttle",logo:"mQQQ.svg",erc20:!0,symbol:"mQQQ-S",decimals:18},"0xEdb0414627E6f1e3F082DE65cD4F9C693D78CCA9":{name:"Mirror TWTR Token - Shuttle",logo:"mTWTR.svg",erc20:!0,symbol:"mTWTR-S",decimals:18},"0x41BbEDd7286dAab5910a1f15d12CBda839852BD7":{name:"Mirror MSFT Token - Shuttle",logo:"mMSFT.svg",erc20:!0,symbol:"mMSFT-S",decimals:18},"0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7":{name:"Mirror AMZN Token - Shuttle",logo:"mAMZN.svg",erc20:!0,symbol:"mAMZN-S",decimals:18},"0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72":{name:"Mirror BABA Token - Shuttle",logo:"mBABA.svg",erc20:!0,symbol:"mBABA-S",decimals:18},"0x1d350417d9787E000cc1b95d70E9536DcD91F373":{name:"Mirror IAU Token - Shuttle",logo:"mIAU.svg",erc20:!0,symbol:"mIAU-S",decimals:18},"0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676":{name:"Mirror SLV Token - Shuttle",logo:"mSLV.svg",erc20:!0,symbol:"mSLV-S",decimals:18},"0x31c63146a635EB7465e5853020b39713AC356991":{name:"Mirror USO Token - Shuttle",logo:"mUSO.svg",erc20:!0,symbol:"mUSO-S",decimals:18},"0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86":{name:"Mirror VIXY Token - Shuttle",logo:"mVIXY.svg",erc20:!0,symbol:"mVIXY-S",decimals:18},"0x21BfBDa47A0B4B5b1248c767Ee49F7caA9B23697":{name:"OVR",logo:"OVR.svg",erc20:!0,symbol:"OVR",decimals:18},"0x4691937a7508860F876c9c0a2a617E7d9E945D4B":{name:"Wootrade Network",logo:"wootrade.svg",erc20:!0,symbol:"WOO",decimals:18},"0xaf9f549774ecEDbD0966C52f250aCc548D3F36E5":{name:"RFUEL",logo:"RFUEL.svg",erc20:!0,symbol:"RFUEL",decimals:18},"0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC":{name:"JasmyCoin",logo:"JASMY.svg",erc20:!0,symbol:"JASMY",decimals:18},"0x947AEb02304391f8fbE5B25D7D98D649b57b1788":{name:"Mandala Exchange Token",logo:"mandala.svg",erc20:!0,symbol:"MDX",decimals:18},"0xCdeee767beD58c5325f68500115d4B722b3724EE":{name:"Carbon",logo:"CRBN.svg",erc20:!0,symbol:"CRBN",decimals:18},"0xA4EED63db85311E22dF4473f87CcfC3DaDCFA3E3":{name:"Rubic",logo:"Rubic.svg",erc20:!0,symbol:"RBC",decimals:18},"0x3A880652F47bFaa771908C07Dd8673A787dAEd3A":{name:"DerivaDAO",logo:"DDX.svg",erc20:!0,symbol:"DDX",decimals:18},"0xbC396689893D065F41bc2C6EcbeE5e0085233447":{name:"Perpetual",logo:"PERP.svg",erc20:!0,symbol:"PERP",decimals:18},"0xeca82185adCE47f39c684352B0439f030f860318":{name:"Perlin",logo:"PERL.svg",erc20:!0,symbol:"PERL",decimals:18},"0xA1AFFfE3F4D611d252010E3EAf6f4D77088b0cd7":{name:"Reflect Finance",logo:"RFI.svg",erc20:!0,symbol:"RFI",decimals:9},"0xC0bA369c8Db6eB3924965e5c4FD0b4C1B91e305F":{name:"DLP Duck Token",logo:"dlpducktoken.svg",erc20:!0,symbol:"DUCK",decimals:18},"0xFbEEa1C75E4c4465CB2FCCc9c6d6afe984558E20":{name:"DuckDaoDime",logo:"ddim.svg",erc20:!0,symbol:"DDIM",decimals:18},"0x745407c86DF8DB893011912d3aB28e68B62E49B0":{name:"MahaDAO",logo:"MAHA.svg",erc20:!0,symbol:"MAHA",decimals:18},"0x8CC0F052fff7eaD7f2EdCCcaC895502E884a8a71":{name:"ARTH Valuecoin",logo:"ARTH.svg",erc20:!0,symbol:"ARTH",decimals:18},"0x3231Cb76718CDeF2155FC47b5286d82e6eDA273f":{name:"Monerium EUR",logo:"EURe.svg",erc20:!0,symbol:"EURe",decimals:18},"0x7ba92741Bf2A568abC6f1D3413c58c6e0244F8fD":{name:"Monerium GBP",logo:"GBPe.svg",erc20:!0,symbol:"GBPe",decimals:18},"0xBc5142e0CC5eB16b47c63B0f033d4c2480853a52":{name:"Monerium USD",logo:"USDe.svg",erc20:!0,symbol:"USDe",decimals:18},"0xC642549743A93674cf38D6431f75d6443F88E3E2":{name:"Monerium ISK",logo:"ISKe.svg",erc20:!0,symbol:"ISKe",decimals:18},"0x66a0f676479Cee1d7373f3DC2e2952778BfF5bd6":{name:"WISE Token",logo:"wise.svg",erc20:!0,symbol:"WISE",decimals:18},"0x72F020f8f3E8fd9382705723Cd26380f8D0c66Bb":{name:"PlotX",logo:"plotx.svg",erc20:!0,symbol:"PLOT",decimals:18},"0x44197A4c44D6A059297cAf6be4F7e172BD56Caaf":{name:"ELTCOIN",logo:"ELTCOIN.svg",erc20:!0,symbol:"ELT",decimals:8},"0x6781a0F84c7E9e846DCb84A9a5bd49333067b104":{name:"ZAP TOKEN",logo:"zapicon.svg",erc20:!0,symbol:"ZAP",decimals:18},"0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7":{name:"SKALE",logo:"skl.svg",erc20:!0,symbol:"SKL",decimals:18},"0x674C6Ad92Fd080e4004b2312b45f796a192D27a0":{name:"Neutrino USD",logo:"usdn.svg",erc20:!0,symbol:"USDN",decimals:18},"0xE5CAeF4Af8780E59Df925470b050Fb23C43CA68C":{name:"Ferrum Network Token",logo:"frm.svg",erc20:!0,symbol:"FRM",decimals:6},"0x998FFE1E43fAcffb941dc337dD0468d52bA5b48A":{name:"Rupiah Token",logo:"idrt.svg",erc20:!0,symbol:"IDRT",decimals:2},"0x4E15361FD6b4BB609Fa63C81A2be19d873717870":{name:"Fantom",logo:"ftm.svg",erc20:!0,symbol:"FTM",decimals:18},"0x557B933a7C2c45672B610F8954A3deB39a51A8Ca":{name:"REVV",logo:"revv.svg",erc20:!0,symbol:"REVV",decimals:18},"0xFFC97d72E13E01096502Cb8Eb52dEe56f74DAD7B":{name:"Aave AAVE",logo:"aAAVE.svg",erc20:!0,symbol:"aAAVE",decimals:18},"0x05Ec93c0365baAeAbF7AefFb0972ea7ECdD39CF1":{name:"Aave BAT",logo:"aBAT.svg",erc20:!0,symbol:"aBAT",decimals:18},"0xA361718326c15715591c299427c62086F69923D9":{name:"Aave BUSD",logo:"aBUSD.svg",erc20:!0,symbol:"aBUSD",decimals:18},"0x028171bCA77440897B824Ca71D1c56caC55b68A3":{name:"Aave DAI",logo:"aDAI.svg",erc20:!0,symbol:"aDAI",decimals:18},"0xaC6Df26a590F08dcC95D5a4705ae8abbc88509Ef":{name:"Aave ENJ",logo:"aENJ.svg",erc20:!0,symbol:"aENJ",decimals:18},"0xD37EE7e4f452C6638c96536e68090De8cBcdb583":{name:"Aave GUSD",logo:"aGUSD.svg",erc20:!0,symbol:"aGUSD",decimals:2},"0x39C6b3e42d6A679d7D776778Fe880BC9487C2EDA":{name:"Aave KNC",logo:"aKNC.svg",erc20:!0,symbol:"aKNC",decimals:18},"0xa06bC25B5805d5F8d82847D191Cb4Af5A3e873E0":{name:"Aave LINK",logo:"aLINK.svg",erc20:!0,symbol:"aLINK",decimals:18},"0xa685a61171bb30d4072B338c80Cb7b2c865c873E":{name:"Aave MANA",logo:"aMANA.svg",erc20:!0,symbol:"aMANA",decimals:18},"0xc713e5E149D5D0715DcD1c156a020976e7E56B88":{name:"Aave MKR",logo:"aMKR.svg",erc20:!0,symbol:"aMKR",decimals:18},"0xCC12AbE4ff81c9378D670De1b57F8e0Dd228D77a":{name:"Aave REN",logo:"aREN.svg",erc20:!0,symbol:"aREN",decimals:18},"0x35f6B052C598d933D69A4EEC4D04c73A191fE6c2":{name:"Aave SNX",logo:"aSNX.svg",erc20:!0,symbol:"aSNX",decimals:18},"0x6C5024Cd4F8A59110119C56f8933403A539555EB":{name:"Aave SUSD",logo:"aSUSD.svg",erc20:!0,symbol:"aSUSD",decimals:18},"0x101cc05f4A51C0319f570d5E146a8C625198e636":{name:"Aave TUSD",logo:"aTUSD.svg",erc20:!0,symbol:"aTUSD",decimals:18},"0xB9D7CB55f463405CDfBe4E90a6D2Df01C2B92BF1":{name:"Aave UNI",logo:"aUNI.svg",erc20:!0,symbol:"aUNI",decimals:18},"0xBcca60bB61934080951369a648Fb03DF4F96263C":{name:"Aave USDC",logo:"aUSDC.svg",erc20:!0,symbol:"aUSDC",decimals:6},"0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811":{name:"Aave USDT",logo:"aUSDT.svg",erc20:!0,symbol:"aUSDT",decimals:6},"0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656":{name:"Aave WBTC",logo:"aWBTC.svg",erc20:!0,symbol:"aWBTC",decimals:8},"0x030bA81f1c18d280636F32af80b9AAd02Cf0854e":{name:"Aave WETH",logo:"aWETH.svg",erc20:!0,symbol:"aWETH",decimals:18},"0x5165d24277cD063F5ac44Efd447B27025e888f37":{name:"Aave YFI",logo:"aYFI.svg",erc20:!0,symbol:"aYFI",decimals:18},"0xdef1fac7Bf08f173D286BbBDcBeeADe695129840":{name:"Defi Factory Token",logo:"DEFT.svg",erc20:!0,symbol:"DEFT",decimals:18},"0xDf7FF54aAcAcbFf42dfe29DD6144A69b629f8C9e":{name:"Aave ZRX",logo:"aZRX.svg",erc20:!0,symbol:"aZRX",decimals:18},"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9":{name:"Aave",logo:"AAVE.svg",erc20:!0,symbol:"AAVE",decimals:18},"0x44e2deC86B9F0e0266E9AA66e10323A2bd69CF9A":{name:"Attrace",logo:"attr.svg",erc20:!0,symbol:"ATTR",decimals:18},"0x1Da87b114f35E1DC91F72bF57fc07A768Ad40Bb0":{name:"Equalizer",logo:"EQZ.svg",erc20:!0,symbol:"EQZ",decimals:18},"0x4da27a545c0c5B758a6BA100e3a049001de870f5":{name:"Staked Aave",logo:"stkAAVE.svg",erc20:!0,symbol:"stAAVE",decimals:18},"0xba9d4199faB4f26eFE3551D490E3821486f135Ba":{name:"SwissBorg",logo:"chsb.svg",erc20:!0,symbol:"CHSB",decimals:8},"0x7DD9c5Cba05E151C895FDe1CF355C9A1D5DA6429":{name:"Golem Network Token",logo:"glm.svg",erc20:!0,symbol:"GLM",decimals:18},"0x7240aC91f01233BaAf8b064248E80feaA5912BA3":{name:"OctoFi",logo:"octo.svg",erc20:!0,symbol:"OCTO",decimals:18},"0xff56Cc6b1E6dEd347aA0B7676C85AB0B3D08B0FA":{name:"Orbs",logo:"orbs.svg",erc20:!0,symbol:"ORBS",decimals:18},"0x63f88A2298a5c4AEE3c216Aa6D926B184a4b2437":{name:"GAME Credits",logo:"GAMECreditsLogo.svg",erc20:!0,symbol:"GAME",decimals:18},"0x5150956E082C748Ca837a5dFa0a7C10CA4697f9c":{name:"Zeedex",logo:"zdex.svg",erc20:!0,symbol:"ZDEX",decimals:18},"0x84cA8bc7997272c7CfB4D0Cd3D55cd942B3c9419":{name:"DIAdata",logo:"dia.svg",erc20:!0,symbol:"DIA",decimals:18},"0xb78B3320493a4EFaa1028130C5Ba26f0B6085Ef8":{name:"Dracula",logo:"dracula.svg",erc20:!0,symbol:"DRC",decimals:18},"0xF433089366899D83a9f26A773D59ec7eCF30355e":{name:"Metal",logo:"mtl.svg",erc20:!0,symbol:"MTL",decimals:8},"0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC":{name:"KEEP",logo:"keep.svg",erc20:!0,symbol:"KEEP",decimals:18},"0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa":{name:"tBTC",logo:"tbtc.svg",erc20:!0,symbol:"TBTC",decimals:18},"0xD7EFB00d12C2c13131FD319336Fdf952525dA2af":{name:"Proton",logo:"proton.svg",erc20:!0,symbol:"XPR",decimals:4},"0x178c820f862B14f316509ec36b13123DA19A6054":{name:"Energy Web Token Bridged",logo:"ewtb.svg",erc20:!0,symbol:"EWTB",decimals:18},"0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39":{name:"HEX",logo:"hex.svg",erc20:!0,symbol:"HEX",decimals:8},"0xFca59Cd816aB1eaD66534D82bc21E7515cE441CF":{name:"Rarible",logo:"rari.svg",erc20:!0,symbol:"RARI",decimals:18},"0x7865af71cf0b288b4E7F654f4F7851EB46a2B7F8":{name:"Sentivate",logo:"sentivate.svg",erc20:!0,symbol:"SNTVT",decimals:18},"0xa3d58c4E56fedCae3a7c43A725aeE9A71F0ece4e":{name:"Metronome",logo:"metronome.svg",erc20:!0,symbol:"MET",decimals:18},"0x49d716DFe60b37379010A75329ae09428f17118d":{name:"PoolTogether Dai",logo:"pldai.svg",erc20:!0,symbol:"PLDAI",decimals:18},"0xfE6892654CBB05eB73d28DCc1Ff938f59666Fe9f":{name:"PoolTogether Sai",logo:"plsai.svg",erc20:!0,symbol:"PLSAI",decimals:18},"0x5732046A883704404F284Ce41FfADd5b007FD668":{name:"Bluzelle Token",logo:"Bluzelle.svg",erc20:!0,symbol:"BLZ",decimals:18},"0xBD87447F48ad729C5c4b8bcb503e1395F62e8B98":{name:"PoolTogether USDC",logo:"plusdc.svg",erc20:!0,symbol:"PLUSDC",decimals:6},"0x69A95185ee2a045CDC4bCd1b1Df10710395e4e23":{name:"$Poolz Finance",logo:"Poolz.svg",erc20:!0,symbol:"POOLZ",decimals:18},"0x0adA190c81b814548ddC2F6AdC4a689ce7C1FE73":{name:"yAxis",logo:"yaxis.svg",erc20:!0,symbol:"YAXIS",decimals:18},"0xb1dC9124c395c1e97773ab855d66E879f053A289":{name:"yAxis",logo:"yaxis.svg",erc20:!0,symbol:"YAX",decimals:18},"0xeF31Cb88048416E301Fee1eA13e7664b887BA7e8":{name:"Staked yAxis",logo:"yaxis.svg",erc20:!0,symbol:"sYAX",decimals:18},"0x28cb7e841ee97947a86B06fA4090C8451f64c0be":{name:"YF Link",logo:"YFL.svg",erc20:!0,symbol:"YFL",decimals:18},"0x75D1aA733920b14fC74c9F6e6faB7ac1EcE8482E":{name:"YFLink Staking Share",logo:"YFL.svg",erc20:!0,symbol:"yYFL",decimals:18},"0x7b760D06E401f85545F3B50c44bf5B05308b7b62":{name:"YFLink USD",logo:"YFLUSD.svg",erc20:!0,symbol:"YFLUSD",decimals:18},"0x8282df223AC402d04B2097d16f758Af4F70e7Db0":{name:"YFLink Synthetic",logo:"sYFL.svg",erc20:!0,symbol:"sYFL",decimals:18},"0x008377EB0C62cE8e0BA3D7Bb4A5638591f21588E":{name:"YFLink Bond",logo:"bYFL.svg",erc20:!0,symbol:"bYFL",decimals:18},"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e":{name:"yearn.finance",logo:"yfi.svg",erc20:!0,symbol:"YFI",decimals:18},"0x261b45D85cCFeAbb11F022eBa346ee8D1cd488c0":{name:"rDAI",logo:"rdai.svg",erc20:!0,symbol:"rDAI",decimals:18},"0xea8b224eDD3e342DEb514C4176c2E72Bcce6fFF9":{name:"rSAI",logo:"rsai.svg",erc20:!0,symbol:"rSAI",decimals:18},"0x12B19D3e2ccc14Da04FAe33e63652ce469b3F2FD":{name:"GridPlus",logo:"GridPlus.svg",erc20:!0,symbol:"GRID",decimals:12},"0xDb05EA0877A2622883941b939f0bb11d1ac7c400":{name:"Opacity",logo:"opct.svg",erc20:!0,symbol:"OPCT",decimals:18},"0x4575f41308EC1483f3d399aa9a2826d74Da13Deb":{name:"Orchid",logo:"OXT.svg",erc20:!0,symbol:"OXT",decimals:18},"0x4CC19356f2D37338b9802aa8E8fc58B0373296E7":{name:"Selfkey",logo:"KEY.svg",erc20:!0,symbol:"KEY",decimals:18},"0x92A5B04D0ED5D94D7a193d1d334D3D16996f4E13":{name:"Eristica",logo:"Eristica.svg",erc20:!0,symbol:"ERT",decimals:18},"0xdAC17F958D2ee523a2206206994597C13D831ec7":{name:"Tether USD",logo:"usdt.svg",erc20:!0,symbol:"USDT",decimals:6},"0x06AF07097C9Eeb7fD685c692751D5C66dB49c215":{name:"Chai",logo:"CHAI.svg",erc20:!0,symbol:"CHAI",decimals:18},"0x04Fa0d235C4abf4BcF4787aF4CF447DE572eF828":{name:"UMA",logo:"uma.svg",erc20:!0,symbol:"UMA",decimals:18},"0x5f778ec4B31a506c1Dfd8b06F131E9B451a61D39":{name:"UPX Token",logo:"UPX.svg",erc20:!0,symbol:"UPX",decimals:18},"0xb1CD6e4153B2a390Cf00A6556b0fC1458C4A5533":{name:"ETHBNT Liquidity Pool",logo:"ETHBNT.svg",erc20:!0,symbol:"ETHBNT",decimals:18},"0xf0Ee6b27b759C9893Ce4f094b49ad28fd15A23e4":{name:"Enigma",logo:"enigma.svg",erc20:!0,symbol:"ENG",decimals:8},"0xaaAEBE6Fe48E54f431b0C390CfaF0b017d09D42d":{name:"Celsius",logo:"celsius.svg",erc20:!0,symbol:"CEL",decimals:4},"0xb683D83a532e2Cb7DFa5275eED3698436371cc9f":{name:"BTU",logo:"BTU.svg",erc20:!0,symbol:"BTU",decimals:18},"0x746DdA2ea243400D5a63e0700F190aB79f06489e":{name:"BOSAGORA",logo:"BOA.svg",erc20:!0,symbol:"BOA",decimals:7},"0x5D858bcd53E085920620549214a8b27CE2f04670":{name:"POP Network Token",logo:"POP.svg",erc20:!0,symbol:"POP",decimals:18},"0x048Fe49BE32adfC9ED68C37D32B5ec9Df17b3603":{name:"Skrumble Network V2",logo:"skm.svg",erc20:!0,symbol:"SKM",decimals:18},"0x16EA01aCB4b0Bca2000ee5473348B6937ee6f72F":{name:"Enecuum",logo:"ENQ-logo.svg",erc20:!0,symbol:"ENQ",decimals:10},"0xE5B826Ca2Ca02F09c1725e9bd98d9a8874C30532":{name:"ZEON Network",logo:"ZEON_logo.png",erc20:!0,symbol:"ZEON",decimals:18},"0x13cb85823f78Cff38f0B0E90D3e975b8CB3AAd64":{name:"REMIIT REMI Token",logo:"remi.svg",erc20:!0,symbol:"REMI",decimals:18},"0x93a7174dafd31d13400cD9fa01f4e5B5BAa00D39":{name:"Shaka",logo:"hak.svg",erc20:!0,symbol:"HAK",decimals:18},"0x6fB3e0A217407EFFf7Ca062D46c26E5d60a14d69":{name:"IoTeX",logo:"iotex.svg",erc20:!0,symbol:"IOTX",decimals:18},"0xE5a3229CCb22b6484594973A03a3851dCd948756":{name:"RAE Token",logo:"rae.svg",erc20:!0,symbol:"RAE",decimals:18},"0x4470BB87d77b963A013DB939BE332f927f2b992e":{name:"AdEx Legacy Token",logo:"adex.svg",erc20:!0,symbol:"ADXL",decimals:4},"0xADE00C28244d5CE17D72E40330B1c318cD12B7c3":{name:"AdEx Token",logo:"adex.svg",erc20:!0,symbol:"ADX",decimals:18},"0xDc5864eDe28BD4405aa04d93E05A0531797D9D59":{name:"Falcon",logo:"fnt.svg",erc20:!0,symbol:"FNT",decimals:6},"0x1966d718A565566e8E202792658D7b5Ff4ECe469":{name:"nDEX",logo:"nDEX.png",erc20:!0,symbol:"NDX",decimals:18},"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599":{name:"Wrapped BTC",logo:"wbtc.svg",erc20:!0,symbol:"WBTC",decimals:8},"0x150b0b96933B75Ce27af8b92441F8fB683bF9739":{name:"Dragonereum Gold",logo:"gold.svg",erc20:!0,symbol:"GOLD",decimals:18},"0x82f4dED9Cec9B5750FBFf5C2185AEe35AfC16587":{name:"DreamTeam Token",logo:"dream.svg",erc20:!0,symbol:"DREAM",decimals:6},"0x5d60d8d7eF6d37E16EBABc324de3bE57f135e0BC":{name:"MyBit",logo:"MYB.svg",erc20:!0,symbol:"MYB",decimals:18},"0x01FA555c97D7958Fa6f771f3BbD5CCD508f81e22":{name:"Civil Token",logo:"CVL_token.svg",erc20:!0,symbol:"CVL",decimals:18},"0x5adc961D6AC3f7062D2eA45FEFB8D8167d44b190":{name:"Dether",logo:"dether.svg",erc20:!0,symbol:"DTH",decimals:18},"0x3F17Dd476faF0a4855572F0B6ed5115D9bBA22AD":{name:"Wibson",logo:"wibson-logo.png",erc20:!0,symbol:"WIB",decimals:9},"0xDF347911910b6c9A4286bA8E2EE5ea4a39eB2134":{name:"Bob's Repair",logo:"bobsrepair.png",erc20:!0,symbol:"BOB",decimals:18},"0x3505F494c3f0fed0B594E01Fa41Dd3967645ca39":{name:"SWARM",logo:"swarm.svg",erc20:!0,symbol:"SWM",decimals:18},"0x6863bE0e7CF7ce860A574760e9020D519a8bDC47":{name:"On.Live",logo:"onlive.svg",erc20:!0,symbol:"ONL",decimals:18},"0xea5f88E54d982Cbb0c441cde4E79bC305e5b43Bc":{name:"Pareto",logo:"ParetoLogo.png",erc20:!0,symbol:"PARETO",decimals:18},"0x2e91E3e54C5788e9FdD6A181497FDcEa1De1bcc1":{name:"Hercules",logo:"herc.png",erc20:!0,symbol:"HERC",decimals:18},"0x4946Fcea7C692606e8908002e55A582af44AC121":{name:"FOAM",logo:"FOAM.svg",erc20:!0,symbol:"FOAM",decimals:18},"0x4D807509aECe24C0fa5A102b6a3B059Ec6E14392":{name:"Menlo One",logo:"Menlo_One.png",erc20:!0,symbol:"ONE",decimals:18},"0x27054b13b1B798B345b591a4d22e6562d47eA75a":{name:"AirSwap Token",logo:"AirSwapLogo.svg",erc20:!0,symbol:"AST",decimals:4},"0x8D5682941cE456900b12d47ac06a88b47C764CE1":{name:"RightMesh Token",logo:"Rmesh.png",erc20:!0,symbol:"RMESH",decimals:18},"0xDDe12a12A6f67156e0DA672be05c374e1B0a3e57":{name:"JOYSO",logo:"JOY.png",erc20:!0,symbol:"JOY",decimals:6},"0x0D262e5dC4A06a0F1c90cE79C7a60C09DfC884E4":{name:"JET8 Token",logo:"J8T.svg",erc20:!0,symbol:"J8T",decimals:8},"0x4a220E6096B25EADb88358cb44068A3248254675":{name:"Quant Network",logo:"quant-network.svg",erc20:!0,symbol:"QNT",decimals:18},"0xBC86727E770de68B1060C91f6BB6945c73e10388":{name:"Ink Protocol",logo:"ink_protocol.svg",erc20:!0,symbol:"XNK",decimals:18},"0xa95592DCFfA3C080B4B40E459c5f5692F67DB7F8":{name:"ELY Token",logo:"ely.png",erc20:!0,symbol:"ELY",decimals:18},"0x9E46A38F5DaaBe8683E10793b06749EEF7D733d1":{name:"PolySwarm Nectar",logo:"polyswarm_nectar.svg",erc20:!0,symbol:"NCT",decimals:18},"0xe1A178B681BD05964d3e3Ed33AE731577d9d96dD":{name:"BOX Token",logo:"box_token.png",erc20:!0,symbol:"BOX",decimals:18},"0x543Ff227F64Aa17eA132Bf9886cAb5DB55DCAddf":{name:"DAOstack",logo:"gen.svg",erc20:!0,symbol:"GEN",decimals:18},"0x6aEDbF8dFF31437220dF351950Ba2a3362168d1b":{name:"Dragonglass",logo:"dragonglass.svg",erc20:!0,symbol:"DGS",decimals:8},"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07":{name:"OmiseGO",logo:"omg.svg",erc20:!0,symbol:"OMG",decimals:18},"0x99ea4dB9EE77ACD40B119BD1dC4E33e1C070b80d":{name:"Quantstamp",logo:"qsp.svg",erc20:!0,symbol:"QSP",decimals:18},"0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC":{name:"Storj",logo:"storj.svg",erc20:!0,symbol:"STORJ",decimals:8},"0xD8E3FB3b08eBA982F2754988d70D57eDc0055ae6":{name:"Zoracles",logo:"zora.svg",erc20:!0,symbol:"ZORA",decimals:9},"0xF938424F7210f31dF2Aee3011291b658f872e91e":{name:"VISOR",logo:"VISR.svg",erc20:!0,symbol:"VISR",decimals:18},"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942":{name:"Decentraland",logo:"mana.svg",erc20:!0,symbol:"MANA",decimals:18},"0x0F513fFb4926ff82D7F60A05069047AcA295C413":{name:"CrowdstartCoin",logo:"XSC_Logo.svg",erc20:!0,symbol:"XSC",decimals:18},"0x5BC7e5f0Ab8b2E10D2D0a3F21739FCe62459aeF3":{name:"Hut34 Entropy Token",logo:"ENTRP.png",symbol:"ENTRP",erc20:!0,decimals:18},"0x946112efaB61C3636CBD52DE2E1392D7A75A6f01":{name:"HYDRO TOKEN",logo:"hydro.svg",erc20:!0,symbol:"HYDRO",decimals:18},"0x2604FA406Be957E542BEb89E6754fCdE6815e83f":{name:"Playkey Token",logo:"playkey.svg",erc20:!0,symbol:"PKT",decimals:18},"0xE41d2489571d322189246DaFA5ebDe1F4699F498":{name:"0x",logo:"zrx.svg",erc20:!0,symbol:"ZRX",decimals:18},"0x957c30aB0426e0C93CD8241E2c60392d08c6aC8e":{name:"Modum Token",logo:"modum.svg",erc20:!0,symbol:"MOD",decimals:0},"0x1a7a8BD9106F2B8D977E08582DC7d24c723ab0DB":{name:"AppCoins",logo:"appc.svg",erc20:!0,decimals:18,symbol:"APPC"},"0xdB25f211AB05b1c97D595516F45794528a807ad8":{name:"STASIS EURS Token",logo:"stasis-eurs.svg",erc20:!0,decimals:2,symbol:"EURS"},"0xCA0e7269600d353F70b14Ad118A49575455C0f2f":{name:"AMLT",logo:"amlt.png",erc20:!0,decimals:18,symbol:"AMLT"},"0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F":{name:"Synthetix Network Token",logo:"synthetix.svg",erc20:!0,decimals:18,symbol:"SNX"},"0x57Ab1ec28D129707052df4dF418D58a2D46d5f51":{name:"Synth sUSD",logo:"synthetix_susd.svg",erc20:!0,decimals:18,symbol:"SUSD"},"0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb":{name:"Synth sETH",logo:"synthetix_seth.svg",erc20:!0,decimals:18,symbol:"SETH"},"0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6":{name:"Synth sBTC",logo:"synthetix_sbtc.svg",erc20:!0,decimals:18,symbol:"SBTC"},"0x0DB8D8b76BC361bAcbB72E2C491E06085A97Ab31":{name:"IQeon",logo:"iqeon.svg",erc20:!0,decimals:18,symbol:"IQN"},"0x000C100050E98C91f9114fa5Dd75CE6869Bf4F53":{name:"CRYPTO10 Hedged",logo:"c10.svg",erc20:!0,symbol:"C10",decimals:18},"0x26E75307Fc0C021472fEb8F727839531F112f317":{name:"Crypto20",logo:"c20.svg",erc20:!0,symbol:"C20",decimals:18},"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d":{name:"Crypto Kitties",logo:"ck.svg",erc20:!1,erc721:!0,symbol:"CK",decimals:0},"0xE477292f1B3268687A29376116B0ED27A9c76170":{name:"Herocoin",logo:"herocoin_logo.png",erc20:!0,symbol:"PLAY",decimals:18},"0x4F4f0Db4de903B88f2B1a2847971E231D54F8fd3":{name:"Geens Platform Token",logo:"gee-icon.svg",erc20:!0,symbol:"GEE",decimals:8},"0xec67005c4E498Ec7f55E092bd1d35cbC47C91892":{name:"Enzyme Finance",logo:"mln.svg",erc20:!0,symbol:"MLN",decimals:18},"0xba2184520A1cC49a6159c57e61E1844E085615B6":{name:"HelloGold Token",logo:"hgt.png",erc20:!0,symbol:"HGT",decimals:8},"0xba358B6f5b4c0215650444B8C30D870B55050D2D":{name:"Hub Token",logo:"hub.svg",erc20:!0,symbol:"HUB",decimals:18},"0x8727c112C712c4a03371AC87a74dD6aB104Af768":{name:"Jetcoin Institute Token",logo:"JETCOIN28.png",erc20:!0,symbol:"JET",decimals:18},"0xf8e386EDa857484f5a12e4B5DAa9984E06E73705":{name:"Indorse Token",logo:"indorseLogo.jpg",erc20:!0,symbol:"IND",decimals:18},"0xA54ddC7B3CcE7FC8b1E3Fa0256D0DB80D2c10970":{name:"NEVERDIE Coin",logo:"ndc.png",erc20:!0,symbol:"NDC",decimals:18},"0x1c4481750daa5Ff521A2a7490d9981eD46465Dbd":{name:"BlockMason Credit Protocol Token",logo:"bcpt.svg",erc20:!0,symbol:"BCPT",decimals:18},"0x20F7A3DdF244dc9299975b4Da1C39F8D5D75f05A":{name:"Sapien Network Token",logo:"spn.svg",erc20:!0,symbol:"SPN",decimals:6},"0xA4e8C3Ec456107eA67d3075bF9e3DF3A75823DB0":{name:"Loom Token",logo:"loom.svg",erc20:!0,symbol:"LOOM",decimals:18},"0x42476F744292107e34519F9c357927074Ea3F75D":{name:"Loom",logo:"loom.svg",erc20:!0,symbol:"LOOM",decimals:18},"0x4F9254C83EB525f9FCf346490bbb3ed28a81C667":{name:"Celer Network Token",logo:"CELR.svg",erc20:!0,symbol:"CELR",decimals:18},"0x71D01dB8d6a2fBEa7f8d434599C237980C234e4C":{name:"Gladius",logo:"gladius.svg",erc20:!0,symbol:"GLA",decimals:8},"0xdd974D5C2e2928deA5F71b9825b8b646686BD200":{name:"Kyber Network Crystal",logo:"kyber.svg",erc20:!0,symbol:"KNC",decimals:18},"0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C":{name:"Bancor Network Token",logo:"bnt.svg",erc20:!0,symbol:"BNT",decimals:18},"0xfa05A73FfE78ef8f1a739473e462c54bae6567D9":{name:"Lunyr Token",logo:"lun.svg",erc20:!0,symbol:"LUN",decimals:18},"0xC741f06082AA47F93729070aD0dD95E223Bda091":{name:"LEDU Token",logo:"edu.svg",erc20:!0,symbol:"LEDU",decimals:8},"0x5c543e7AE0A1104f78406C340E9C64FD9fCE5170":{name:"vSlice",logo:"vslice.png",erc20:!0,symbol:"VSL",decimals:18},"0x1f41E42D0a9e3c0Dd3BA15B527342783B43200A9":{name:"Blockchain Capital",logo:"bcap.svg",erc20:!0,symbol:"BCAP",decimals:0},"0x6531f133e6DeeBe7F2dcE5A0441aA7ef330B4e53":{name:"Chronobank TIME",logo:"chronobank.png",erc20:!0,symbol:"TIME",decimals:8},"0xaAAf91D9b90dF800Df4F55c205fd6989c977E73a":{name:"Monolith TKN",logo:"tkn.svg",erc20:!0,symbol:"TKN",decimals:8},"0x08711D3B02C8758F2FB3ab4e80228418a7F8e39c":{name:"Edgeless",logo:"edg.svg",erc20:!0,symbol:"EDG",decimals:0},"0xf7B098298f7C69Fc14610bf71d5e02c60792894C":{name:"Guppy",logo:"guppy.png",erc20:!0,symbol:"GUP",decimals:3},"0x4DF812F6064def1e5e029f1ca858777CC98D2D81":{name:"Xaurum",logo:"xaurum_logo.svg",erc20:!0,symbol:"XAUR",decimals:8},"0xB9e7F8568e08d5659f5D29C4997173d84CdF2607":{name:"Swarm City Token",logo:"swt.svg",erc20:!0,symbol:"SWT",decimals:18},"0xCb94be6f13A1182E4A4B6140cb7bf2025d28e41B":{name:"Trustcoin",logo:"trst.svg",erc20:!0,symbol:"TRST",decimals:6},"0xCB56b52316041A62B6b5D0583DcE4A8AE7a3C629":{name:"Cigarettes",logo:"cig.svg",erc20:!0,symbol:"CIG",decimals:18},"0x960b236A07cf122663c4303350609A66A7B288C0":{name:"Aragon Network Token v1",logo:"antv1.svg",erc20:!0,symbol:"ANTv1",decimals:18},"0x667088b212ce3d06a1b553a7221E1fD19000d9aF":{name:"WINGS",logo:"wings_logo.svg",erc20:!0,symbol:"WINGS",decimals:18},"0x16484d73Ac08d2355F466d448D2b79D2039F6EBB":{name:"FortKnoxster",logo:"FortKnoxster.svg",erc20:!0,symbol:"FKX",decimals:18},"0xAf30D2a7E90d7DC361c8C4585e9BB7D2F6f15bc7":{name:"FirstBlood Token",logo:"1st.svg",erc20:!0,symbol:"1ST",decimals:18},"0x607F4C5BB672230e8672085532f7e901544a7375":{name:"iExec RLC Token",logo:"rlc.svg",erc20:!0,symbol:"RLC",decimals:9},"0xaeC2E87E0A235266D9C5ADc9DEb4b2E29b54D009":{name:"SingularDTV",logo:"singulardtv.svg",erc20:!0,symbol:"SNGLS",decimals:0},"0x888666CA69E0f178DED6D75b5726Cee99A87D698":{name:"ICONOMI",logo:"iconomi.png",erc20:!0,symbol:"ICN",decimals:18},"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2":{name:"Maker",logo:"mkr.svg",erc20:!0,symbol:"MKR",decimals:18},"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359":{name:"Sai Stablecoin v1.0",logo:"sai.svg",erc20:!0,symbol:"SAI",decimals:18},"0x6B175474E89094C44Da98b954EedeAC495271d0F":{name:"Dai Stablecoin",logo:"dai.svg",erc20:!0,symbol:"DAI",decimals:18},"0xC477D038d5420C6A9e0b031712f61c5120090de9":{name:"Boson Token",logo:"boson.svg",erc20:!0,symbol:"BOSON",decimals:18},"0xD46bA6D942050d489DBd938a2C909A5d5039A161":{name:"Ampleforth",logo:"ampl.svg",erc20:!0,symbol:"AMPL",decimals:9},"0x4b9278b94a1112cAD404048903b8d343a810B07e":{name:"Hifi Finance",logo:"hifi.svg",erc20:!0,symbol:"HIFI",decimals:18},"0x0D8775F648430679A709E98d2b0Cb6250d2887EF":{name:"Basic Attention Token",logo:"bat.svg",erc20:!0,symbol:"BAT",decimals:18},"0x4D8fc1453a0F359e99c9675954e656D80d996FbF":{name:"BEE Token",logo:"bee_token.svg",erc20:!0,symbol:"BEE",decimals:18},"0x6810e776880C02933D47DB1b9fc05908e5386b96":{name:"Gnosis Token",logo:"gnosis.svg",erc20:!0,symbol:"GNO",decimals:18},"0x514910771AF9Ca656af840dff83E8264EcF986CA":{name:"Chainlink Token",logo:"chainlink.svg",erc20:!0,symbol:"LINK",decimals:18},"0xD8912C10681D8B21Fd3742244f44658dBA12264E":{name:"Pluton",logo:"plutus-god.svg",erc20:!0,symbol:"PLU",decimals:18},"0x1985365e9f78359a9B6AD760e32412f4a445E862":{name:"Reputation Old",logo:"rep.svg",erc20:!0,symbol:"REP",decimals:18},"0x221657776846890989a759BA2973e427DfF5C9bB":{name:"Reputation",logo:"repv2.svg",erc20:!0,symbol:"REPv2",decimals:18},"0xd0929d411954c47438dc1d871dd6081F5C5e149c":{name:"Refereum",logo:"rfr.svg",erc20:!0,symbol:"RFR",decimals:4},"0xb0866289e870D2efc282406cF4123Df6E5BcB652":{name:"NoFakeCoin",logo:"nfticon.png",erc20:!0,symbol:"NFC",decimals:18},"0x2C4e8f2D746113d0696cE89B35F0d8bF88E0AEcA":{name:"Open Simple Token",logo:"OST.svg",erc20:!0,symbol:"OST",decimals:18},"0x408e41876cCCDC0F92210600ef50372656052a38":{name:"Republic Token",logo:"ren.svg",erc20:!0,symbol:"REN",decimals:18},"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D":{name:"renBTC",logo:"renBTC.svg",erc20:!0,symbol:"renBTC",decimals:8},"0x1C5db575E2Ff833E46a2E9864C22F4B22E0B37C2":{name:"renZEC",logo:"renZEC.svg",erc20:!0,symbol:"renZEC",decimals:8},"0x459086F2376525BdCebA5bDDA135e4E9d3FeF5bf":{name:"renBCH",logo:"renBCH.svg",erc20:!0,symbol:"renBCH",decimals:8},"0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5":{name:"renFIL",logo:"renFIL.svg",erc20:!0,symbol:"renFIL",decimals:18},"0xa74476443119A942dE498590Fe1f2454d7D4aC0d":{name:"Golem Network Token",logo:"golem.svg",erc20:!0,symbol:"GNT",decimals:18},"0x6888a16eA9792c15A4DCF2f6C623D055c8eDe792":{name:"Spectiv Signal Token",logo:"spectiv.svg",erc20:!0,symbol:"SIG",decimals:18},"0x9a642d6b3368ddc662CA244bAdf32cDA716005BC":{name:"Qtum",logo:"qtum.svg",erc20:!0,decimals:18,symbol:"QTUM"},"0x1234567461d3f8Db7496581774Bd869C83D51c93":{name:"BitClave",logo:"bitclave.svg",erc20:!0,decimals:18,symbol:"CAT"},"0x7d4b8Cce0591C9044a22ee543533b72E976E36C3":{name:"Change",logo:"change.svg",erc20:!0,decimals:18,symbol:"CAG"},"0x1d462414fe14cf489c7A21CaC78509f4bF8CD7c0":{name:"CanYaCoin",logo:"CanYa.svg",erc20:!0,decimals:6,symbol:"CAN"},"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72":{name:"Ethereum Name Service",logo:"ens.svg",erc20:!0,decimals:18,symbol:"ENS"},"0x3d1BA9be9f66B8ee101911bC36D3fB562eaC2244":{name:"Rivetz",logo:"rivetz.png",erc20:!0,decimals:18,symbol:"RVT"},"0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff":{name:"Project Wyvern Token",logo:"wyvern-logo.svg",erc20:!0,symbol:"WYV",decimals:18},"0xfec0cF7fE078a500abf15F1284958F22049c2C7e":{name:"Maecenas ART Token",logo:"art.svg",erc20:!0,symbol:"ART",decimals:18},"0x05f4a42e251f2d52b8ed15E9FEdAacFcEF1FAD27":{name:"Zilliqa",logo:"zilliqa.svg",erc20:!0,symbol:"ZIL",decimals:12},"0x986EE2B944c42D017F52Af21c4c69B84DBeA35d8":{name:"BitMartToken",logo:"bitmart.png",erc20:!0,symbol:"BMX",decimals:18},"0xF03f8D65BaFA598611C3495124093c56e8F638f0":{name:"Viewly",logo:"viewly.svg",erc20:!0,symbol:"VIEW",decimals:18},"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2":{name:"Wrapped Ether",logo:"weth.svg",erc20:!0,symbol:"WETH",decimals:18},"0xba5BDe662c17e2aDFF1075610382B9B691296350":{name:"SuperRare Token",logo:"rare.svg",erc20:!0,symbol:"RARE",decimals:18},"0x6C8c6b02E7b2BE14d4fA6022Dfd6d75921D90E4E":{name:"Compound Basic Attention Token",logo:"ctoken-bat.svg",erc20:!0,symbol:"cBAT",decimals:8},"0x70e36f6BF80a52b3B46b3aF8e106CC0ed743E8e4":{name:"Compound Collateral",logo:"ctoken-comp.svg",erc20:!0,symbol:"cCOMP",decimals:8},"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643":{name:"Compound Dai",logo:"ctoken-dai.svg",erc20:!0,symbol:"cDAI",decimals:8},"0xF5DCe57282A584D2746FaF1593d3121Fcac444dC":{name:"Compound Sai (Legacy Dai)",logo:"ctoken-sai.svg",erc20:!0,symbol:"cSAI",decimals:8},"0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5":{name:"Compound Ether",logo:"ctoken-eth.svg",erc20:!0,symbol:"cETH",decimals:8},"0x158079Ee67Fce2f58472A96584A73C7Ab9AC95c1":{name:"Compound Augur",logo:"ctoken-rep.svg",erc20:!0,symbol:"cREP",decimals:8},"0x39AA39c021dfbaE8faC545936693aC917d5E7563":{name:"Compound USD Coin",logo:"ctoken-usdc.svg",erc20:!0,symbol:"cUSDC",decimals:8},"0xf650C3d88D12dB855b8bf7D11Be6C55A4e07dCC9":{name:"Compound Tether",logo:"ctoken-usdt.svg",erc20:!0,symbol:"cUSDT",decimals:8},"0xC11b1268C1A384e55C48c2391d8d480264A3A7F4":{name:"Compound Wrapped BTC",logo:"ctoken-wbtc.svg",erc20:!0,symbol:"cWBTC",decimals:8},"0xB3319f5D18Bc0D84dD1b4825Dcde5d5f7266d407":{name:"Compound 0x",logo:"ctoken-zrx.svg",erc20:!0,symbol:"cZRX",decimals:8},"0xc00e94Cb662C3520282E6f5717214004A7f26888":{name:"Compound",logo:"comp.svg",erc20:!0,symbol:"COMP",decimals:18},"0xFFE02ee4C69eDf1b340fCaD64fbd6b37a7b9e265":{name:"NANJCOIN",logo:"nanjcoin.svg",erc20:!0,symbol:"NANJ",decimals:8},"0xB6eD7644C69416d67B522e20bC294A9a9B405B31":{name:"0xBitcoin Token",logo:"0xbitcoin.svg",erc20:!0,symbol:"0xBTC",decimals:8},"0x744d70FDBE2Ba4CF95131626614a1763DF805B9E":{name:"Status Network Token",logo:"snt.svg",erc20:!0,symbol:"SNT",decimals:18},"0x42d6622deCe394b54999Fbd73D108123806f6a18":{name:"SPANK",logo:"spank.svg",erc20:!0,symbol:"SPANK",decimals:18},"0x6B01c3170ae1EFEBEe1a3159172CB3F7A5ECf9E5":{name:"BOOTY",logo:"booty.png",erc20:!0,symbol:"BOOTY",decimals:18},"0x4a6058666cf1057eaC3CD3A5a614620547559fc9":{name:"Brickblock",logo:"Brickblock.svg",erc20:!0,symbol:"BBK",decimals:18},"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03":{name:"ETHLend Token",logo:"lend.svg",erc20:!0,symbol:"LEND",decimals:18},"0x48FF53777F747cFB694101222a944dE070c15D36":{name:"Ether Kingdoms Token",logo:"IMP.svg",erc20:!0,symbol:"IMP",decimals:7},"0x02F61Fd266DA6E8B102D4121f5CE7b992640CF98":{name:"LikeCoin",logo:"like.svg",erc20:!0,symbol:"LIKE",decimals:18},"0xB8c77482e45F1F44dE1745F52C74426C631bDD52":{name:"Binance Coin",logo:"bnb.png",erc20:!0,symbol:"BNB",decimals:18},"0xD850942eF8811f2A866692A623011bDE52a462C1":{name:"VeChain",logo:"ven.svg",erc20:!0,symbol:"VEN",decimals:18},"0x91Af0fBB28ABA7E31403Cb457106Ce79397FD4E6":{name:"Aergo",logo:"Aergo.svg",erc20:!0,symbol:"AERGO",decimals:18},"0x5CA9a71B1d01849C0a95490Cc00559717fCF0D1d":{name:"Aeternity",logo:"aeternity.svg",erc20:!0,symbol:"AE",decimals:18},"0xd4fa1460F537bb9085d22C7bcCB5DD450Ef28e3a":{name:"Populous",logo:"ppt.svg",erc20:!0,symbol:"PPT",decimals:8},"0xFA1a856Cfa3409CFa145Fa4e20Eb270dF3EB21ab":{name:"IOST",logo:"iost.png",erc20:!0,symbol:"IOST",decimals:18},"0x039B5649A59967e3e936D7471f9c3700100Ee1ab":{name:"Kucoin Shares",logo:"kucoin.svg",erc20:!0,symbol:"KCS",decimals:6},"0x3893b9422Cd5D70a81eDeFfe3d5A1c6A978310BB":{name:"Mithril",logo:"mith.svg",erc20:!0,symbol:"MITH",decimals:18},"0xb7cB1C96dB6B22b0D3d9536E0108d062BD488F74":{name:"Walton Token",logo:"wtc.svg",erc20:!0,symbol:"WTC",decimals:18},"0x1776e1F26f98b1A5dF9cD347953a26dd3Cb46671":{name:"Numeraire",logo:"nmr.png",erc20:!0,symbol:"NMR",decimals:18},"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd":{name:"Gemini Dollar",logo:"gusd.svg",erc20:!0,symbol:"GUSD",decimals:2},"0xA4Bdb11dc0a2bEC88d24A3aa1E6Bb17201112eBe":{name:"StableUSD",logo:"usds.svg",erc20:!0,symbol:"USDS",decimals:6},"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48":{name:"USDC",logo:"usdc.svg",erc20:!0,symbol:"USDC",decimals:6},"0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c":{name:"EURC",logo:"eurc.svg",erc20:!0,symbol:"EURC",decimals:6},"0x93ED3FBe21207Ec2E8f2d3c3de6e058Cb73Bc04d":{name:"Pinakion Token",logo:"pinakion.svg",erc20:!0,symbol:"PNK",decimals:18},"0x419D0d8BdD9aF5e606Ae2232ed285Aff190E711b":{name:"FunFair",logo:"fun.svg",erc20:!0,symbol:"FUN",decimals:8},"0xcA2796F9F61dc7b238Aab043971e49c6164DF375":{name:"YGGDRASH YEED Token",logo:"yggdrash.svg",erc20:!0,symbol:"YEED",decimals:18},"0x03e3f0c25965f13DbbC58246738C183E27b26a56":{name:"Disciplina Token",logo:"disciplina.svg",erc20:!0,symbol:"DSCP",decimals:18},"0xE814aeE960a85208C3dB542C53E7D4a6C8D5f60F":{name:"Chronologic DAY Token",logo:"DAY.png",erc20:!0,symbol:"DAY",decimals:18},"0x7E43581b19ab509BCF9397a2eFd1ab10233f27dE":{name:"PLATINUM",logo:"plat.png",erc20:!0,symbol:"PLAT",decimals:18},"0x8E870D67F660D95d5be530380D0eC0bd388289E1":{name:"Pax Dollar",logo:"usdp.svg",erc20:!0,symbol:"USDP",decimals:18},"0x45804880De22913dAFE09f4980848ECE6EcbAf78":{name:"PAX Gold",logo:"paxg.svg",erc20:!0,symbol:"PAXG",decimals:18},"0x0000000000085d4780B73119b644AE5ecd22b376":{name:"TrueUSD",logo:"TUSD.svg",erc20:!0,symbol:"TUSD",decimals:18},"0x00000000441378008EA67F4284A57932B1c000a5":{name:"TrueGBP",logo:"TGBP.svg",erc20:!0,symbol:"TGBP",decimals:18},"0x00006100F7090010005F1bd7aE6122c3C2CF0090":{name:"TrueAUD",logo:"TAUD.svg",erc20:!0,symbol:"TAUD",decimals:18},"0x00000100F2A2bd000715001920eB70D229700085":{name:"TrueCAD",logo:"TCAD.svg",erc20:!0,symbol:"TCAD",decimals:18},"0x0000852600CEB001E08e00bC008be620d60031F2":{name:"TrueHKD",logo:"THKD.svg",erc20:!0,symbol:"THKD",decimals:18},"0x4Fabb145d64652a948d72533023f6E7A623C7C53":{name:"Binance USD",logo:"busd.svg",erc20:!0,symbol:"BUSD",decimals:18},"0x23Ccc43365D9dD3882eab88F43d515208f832430":{name:"MidasProtocol",logo:"MAS.png",erc20:!0,symbol:"MAS",decimals:18},"0xC16b542ff490e01fcc0DC58a60e1EFdc3e357cA6":{name:"ICE ROCK MINING",logo:"rock2.png",erc20:!0,symbol:"ROCK2",decimals:0},"0x6758B7d441a9739b98552B373703d8d3d14f9e62":{name:"POA20 Token",logo:"POA20.png",erc20:!0,symbol:"POA20",decimals:18},"0x3DB6Ba6ab6F95efed1a6E794caD492fAAabF294D":{name:"LTO Network Token (old)",logo:"LTO.svg",erc20:!0,symbol:"LTOOLD",decimals:8},"0xd01409314aCb3b245CEa9500eCE3F6Fd4d70ea30":{name:"LTO Network Token",logo:"LTO.svg",erc20:!0,symbol:"LTO",decimals:8},"0xfeF4185594457050cC9c23980d301908FE057Bb1":{name:"VIDT Datalink",logo:"VIDT.svg",erc20:!0,symbol:"VIDT-OLD",decimals:18},"0x3BE7bF1A5F23BD8336787D0289B70602f1940875":{name:"VIDT DAO",logo:"VIDT.svg",erc20:!0,symbol:"VIDT",decimals:18},"0x7064aAb39A0Fcf7221c3396719D0917a65E35515":{name:"Cpollo",logo:"Cpollo.svg",erc20:!0,symbol:"CPLO",decimals:18},"0xd8446236FA95b9b5f9fd0f8E7Df1a944823c683d":{name:"NEEO",logo:"neeo.png",erc20:!0,symbol:"NEEO",decimals:18},"0xA823E6722006afe99E91c30FF5295052fe6b8E32":{name:"Neumark",logo:"neu.svg",erc20:!0,symbol:"NEU",decimals:18},"0x8f693ca8D21b157107184d29D398A8D082b38b76":{name:"Streamr",logo:"streamr.svg",erc20:!0,symbol:"DATA",decimals:18},"0x0Cf0Ee63788A0849fE5297F3407f701E122cC023":{name:"Streamr (old)",logo:"streamr_old.svg",erc20:!0,symbol:"XDATA",decimals:18},"0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b":{name:"Cronos",logo:"cro.svg",erc20:!0,symbol:"CRO",decimals:8},"0xF70a642bD387F94380fFb90451C2c81d4Eb82CBc":{name:"STAR",logo:"starbase.png",erc20:!0,symbol:"STAR",decimals:18},"0x7C5A0CE9267ED19B22F8cae653F198e3E8daf098":{name:"Santiment",logo:"santiment.svg",erc20:!0,symbol:"SAN",decimals:18},"0x58b6A8A3302369DAEc383334672404Ee733aB239":{name:"Livepeer",logo:"lpt.svg",erc20:!0,symbol:"LPT",decimals:18},"0x6fe56C0bcdD471359019FcBC48863d6c3e9d4F41":{name:"Props",logo:"props.png",erc20:!0,symbol:"PROPS",decimals:18},"0x6c6EE5e31d828De241282B9606C8e98Ea48526E2":{name:"HoloToken",logo:"hot.svg",erc20:!0,symbol:"HOT",decimals:18},"0xF629cBd94d3791C9250152BD8dfBDF380E2a3B9c":{name:"Enjin Coin",logo:"enj.svg",erc20:!0,symbol:"ENJ",decimals:18},"0xbf2179859fc6D5BEE9Bf9158632Dc51678a4100e":{name:"AELF",logo:"elf.svg",erc20:!0,symbol:"ELF",decimals:18},"0x39Bb259F66E1C59d5ABEF88375979b4D20D98022":{name:"WAX Token",logo:"wax.svg",erc20:!0,symbol:"WAX",decimals:8},"0x595832F8FC6BF59c85C527fEC3740A1b7a361269":{name:"PowerLedger",logo:"powr.svg",erc20:!0,symbol:"POWR",decimals:6},"0x28dee01D53FED0Edf5f6E310BF8Ef9311513Ae40":{name:"BlitzPredict",logo:"blitzpredict.svg",erc20:!0,symbol:"XBP",decimals:18},"0x33349B282065b0284d756F0577FB39c158F935e6":{name:"Maple Finance",logo:"maple-finance.svg",erc20:!0,erc721:!1,symbol:"MPL",decimals:18},"0xFBeef911Dc5821886e1dda71586d90eD28174B7d":{name:"KnownOrigin",logo:"knownorigin.svg",erc20:!0,symbol:"KODA",decimals:0},"0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26":{name:"Origin Protocol",logo:"ogn.svg",erc20:!0,symbol:"OGN",decimals:18},"0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86":{name:"Origin Dollar",logo:"ousd.svg",erc20:!0,symbol:"OUSD",decimals:18},"0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3":{name:"Origin Ether",logo:"oeth.svg",erc20:!0,symbol:"OETH",decimals:18},"0x9c354503C38481a7A7a51629142963F98eCC12D0":{name:"Origin DeFi Governance",logo:"ogv.svg",erc20:!0,symbol:"OGV",decimals:18},"0x0C4576Ca1c365868E162554AF8e385dc3e7C66D9":{name:"Vote Escrowed Origin DeFi Governance",logo:"veogv.svg",erc20:!0,symbol:"veOGV",decimals:18},"0x8f8221aFbB33998d8584A2B05749bA73c37a938a":{name:"Request",logo:"request.svg",erc20:!0,symbol:"REQ",decimals:18},"0x2aEa4Add166EBf38b63d09a75dE1a7b94Aa24163":{name:"Kudos",logo:"kudos.svg",erc20:!1,erc721:!0,symbol:"KDO",decimals:0},"0x14C926F2290044B647e1Bf2072e67B495eff1905":{name:"Bethereum",logo:"bether.jpg",erc20:!0,symbol:"BETHER",decimals:18},"0x9AAb071B4129B083B01cB5A0Cb513Ce7ecA26fa5":{name:"Hunt Token",logo:"hunt.png",erc20:!0,symbol:"HUNT",decimals:18},"0xFEF3884b603C33EF8eD4183346E093A173C94da6":{name:"Metamorph",logo:"metamorph.svg",erc20:!0,symbol:"METM",decimals:18},"0x0AbdAce70D3790235af448C88547603b945604ea":{name:"district0x",logo:"district0x.svg",erc20:!0,symbol:"DNT",decimals:18},"0xB26631c6dda06aD89B93C71400D25692de89c068":{name:"Minds",logo:"minds.svg",erc20:!0,symbol:"MINDS",decimals:18},"0xBb1f24C0c1554b9990222f036b0AaD6Ee4CAec29":{name:"CryptoSoul",logo:"SOUL.svg",erc20:!0,symbol:"SOUL",decimals:18},"0xFF0E5e014cf97e0615cb50F6f39Da6388E2FaE6E":{name:"Origo",logo:"origo.svg",erc20:!0,symbol:"OGO",decimals:18},"0x0cB8D0B37C7487b11d57F1f33dEfA2B1d3cFccfE":{name:"DANKToken",logo:"dank-logo.svg",erc20:!0,symbol:"DANK",decimals:18},"0x3a4f40631a4f906c2BaD353Ed06De7A5D3fCb430":{name:"PlayDapp Token",logo:"playdapp.svg",erc20:!0,symbol:"PLA",decimals:18},"0xE9e3F9cfc1A64DFca53614a0182CFAD56c10624F":{name:"Su Squares",logo:"Su-Squares.svg",erc20:!1,erc721:!0,symbol:"SU",decimals:0},"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a":{name:"ROOK",logo:"Rook.svg",erc20:!0,symbol:"ROOK",decimals:18},"0xa62cc35625B0C8dc1fAEA39d33625Bb4C15bD71C":{name:"StormX",logo:"stormx.svg",erc20:!0,symbol:"STMX",decimals:18},"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0":{name:"Matic Network Token",logo:"matic.svg",erc20:!0,symbol:"MATIC",decimals:18},"0x9992eC3cF6A55b00978cdDF2b27BC6882d88D1eC":{name:"Polymath",logo:"poly.svg",erc20:!0,symbol:"POLY",decimals:18},"0x0a50C93c762fDD6E56D86215C24AaAD43aB629aa":{name:"LGO Token",logo:"lgo.png",erc20:!0,symbol:"LGO",decimals:8},"0xc8Cac7672f4669685817cF332a33Eb249F085475":{name:"LivenCoin",logo:"LVN.svg",erc20:!0,symbol:"LVN",decimals:18},"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD":{name:"Loopring",logo:"LRC.svg",erc20:!0,symbol:"LRC",decimals:18},"0x255Aa6DF07540Cb5d3d297f0D0D4D84cb52bc8e6":{name:"Raiden Network Token",logo:"raiden.svg",erc20:!0,symbol:"RDN",decimals:18},"0x66fD97a78d8854fEc445cd1C80a07896B0b4851f":{name:"Lunch Money",logo:"LMY.svg",erc20:!0,symbol:"LMY",decimals:18},"0x679131F591B4f369acB8cd8c51E68596806c3916":{name:"Trustlines Network Token",logo:"TLN128.png",erc20:!0,symbol:"TLN",decimals:18},"0xdcD85914b8aE28c1E62f1C488E1D968D5aaFfE2b":{name:"TOP Network Token",logo:"TOP.svg",erc20:!0,symbol:"TOP",decimals:18},"0xaea46A60368A7bD060eec7DF8CBa43b7EF41Ad85":{name:"Fetch",logo:"fetch.svg",erc20:!0,symbol:"FET",decimals:18},"0x2e1E15C44Ffe4Df6a0cb7371CD00d5028e571d14":{name:"Mettalex",logo:"mettalex.svg",erc20:!0,symbol:"MTLX",decimals:18},"0xf21661D0D1d76d3ECb8e1B9F1c923DBfffAe4097":{name:"Realio Network",logo:"rio.svg",erc20:!0,symbol:"RIO",decimals:18},"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984":{name:"Uniswap",logo:"uni.svg",erc20:!0,symbol:"UNI",decimals:18},"0x2e6539edc3b76f1E21B71d214527FAbA875F70F3":{name:"Yearn Finance Dot",logo:"YFDOT.svg",erc20:!0,symbol:"YFDOT",decimals:18},"0x9F284E1337A815fe77D2Ff4aE46544645B20c5ff":{name:"Darwinia Commitment Token",logo:"kton.svg",erc20:!0,symbol:"KTON",decimals:18},"0xE48972fCd82a274411c01834e2f031D4377Fa2c0":{name:"TwoKeyEconomy",logo:"2key.svg",erc20:!0,symbol:"2KEY",decimals:18},"0x970B9bB2C0444F5E81e9d0eFb84C8ccdcdcAf84d":{name:"Fuse Token",logo:"fuse.svg",erc20:!0,symbol:"FUSE",decimals:18},"0x0Ae055097C6d159879521C384F1D2123D1f195e6":{name:"STAKE Token",logo:"stake.svg",erc20:!0,symbol:"STAKE",decimals:18},"0x5dc60C4D5e75D22588FA17fFEB90A63E535efCE0":{name:"dKargo",logo:"DKA.svg",erc20:!0,symbol:"DKA",decimals:18},"0x9469D013805bFfB7D3DEBe5E7839237e535ec483":{name:"Darwinia Network Native Token",logo:"ring.svg",erc20:!0,symbol:"RING",decimals:18},"0xA31B1767e09f842ECFd4bc471Fe44F830E3891AA":{name:"ROOBEE",logo:"ROOBEE.svg",erc20:!0,symbol:"ROOBEE",decimals:18},"0xC7e43A1c8E118aA2965F5EAbe0e718D83DB7A63C":{name:"ZCore Token",logo:"zcrt.svg",erc20:!0,symbol:"ZCRT",decimals:18},"0x08d32b0da63e2C3bcF8019c9c5d849d7a9d791e6":{name:"Dentacoin Token",logo:"dcn.svg",erc20:!0,symbol:"DCN",decimals:0},"0xe2f2a5C287993345a840Db3B0845fbC70f5935a5":{name:"mStable USD",logo:"mUSD.svg",erc20:!0,symbol:"mUSD",decimals:18},"0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2":{name:"Meta",logo:"MTA.svg",erc20:!0,symbol:"MTA",decimals:18},"0xe3818504c1B32bF1557b16C238B2E01Fd3149C17":{name:"Pillar",logo:"plr.svg",erc20:!0,symbol:"PLR",decimals:18},"0xba100000625a3754423978a60c9317c58a424e3D":{name:"Balancer (BAL)",logo:"balancer.svg",erc20:!0,symbol:"BAL",decimals:18},"0x8a854288a5976036A725879164Ca3e91d30c6A1B":{name:"Guaranteed Entrance Token",logo:"get-logo.svg",erc20:!0,symbol:"GET",decimals:18},"0x2781246fe707bB15CeE3e5ea354e2154a2877B16":{name:"Elysia",logo:"el.svg",erc20:!0,symbol:"EL",decimals:18},"0x4dA34f8264CB33A5c9F17081B9EF5Ff6091116f4":{name:"Elyfi",logo:"elyfi.svg",erc20:!0,symbol:"ELFI",decimals:18},"0xc12d099be31567add4e4e4d0D45691C3F58f5663":{name:"Auctus",logo:"auc.svg",erc20:!0,symbol:"AUC",decimals:18},"0xdF574c24545E5FfEcb9a659c229253D4111d87e1":{name:"HUSD",logo:"HUSD.svg",erc20:!0,symbol:"HUSD",decimals:8},"0x2ecB13A8c458c379c4d9a7259e202De03c8F3D19":{name:"Block-Chain.com Token",logo:"block-chain.svg",erc20:!0,symbol:"BC",decimals:18},"0x38e4adB44ef08F22F5B5b76A8f0c2d0dCbE7DcA1":{name:"Concentrated Voting Power",logo:"PowerPool.svg",erc20:!0,symbol:"CVP",decimals:18},"0xa117000000f279D81A1D3cc75430fAA017FA5A2e":{name:"Aragon Network Token",logo:"antv2.svg",erc20:!0,symbol:"ANT",decimals:18},"0xDecade1c6Bf2cD9fb89aFad73e4a519C867adcF5":{name:"Experty Wisdom Token",logo:"wisdom-token.svg",erc20:!0,symbol:"WIS",decimals:18},"0x7D85e23014F84E6E21d5663aCD8751bEF3562352":{name:"Axion Old",logo:"obsolete.svg",erc20:!0,symbol:"AXNv1",decimals:18},"0x358AA737e033F34df7c54306960a38d09AaBd523":{name:"Ares Token",logo:"ares.svg",erc20:!0,symbol:"ARES",decimals:18},"0xB62132e35a6c13ee1EE0f84dC5d40bad8d815206":{name:"NEXO",logo:"NEXO.svg",erc20:!0,symbol:"NEXO",decimals:18},"0x4612021C75809160Be60DB21fBc9D6adD0B32deF":{name:"BCP Coin",logo:"BCP.svg",erc20:!0,symbol:"BCP",decimals:18},"0xE9E73E1aE76D17A16cC53E3e87a9a7dA78834d37":{name:"Camp",logo:"Camp.svg",erc20:!0,symbol:"CAMP",decimals:18},"0xdacD69347dE42baBfAEcD09dC88958378780FB62":{name:"Atari Token",logo:"atrilast.svg",erc20:!0,symbol:"ATRI",decimals:0},"0x71F85B2E46976bD21302B64329868fd15eb0D127":{name:"Axion",logo:"axion.svg",erc20:!0,symbol:"AXN",decimals:18},"0xc944E90C64B2c07662A292be6244BDf05Cda44a7":{name:"Graph Token",logo:"graphToken.svg",erc20:!0,symbol:"GRT",decimals:18},"0xFE3E6a25e6b192A42a44ecDDCd13796471735ACf":{name:"Reef Finance",logo:"reef.svg",erc20:!0,symbol:"REEF",decimals:18},"0x43Dfc4159D86F3A37A5A4B3D4580b888ad7d4DDd":{name:"DODO bird",logo:"DODO.svg",erc20:!0,symbol:"DODO",decimals:18},"0x4a615bB7166210CCe20E6642a6f8Fb5d4D044496":{name:"NAOS Finance",logo:"naos.svg",erc20:!0,symbol:"NAOS",decimals:18},"0x111111111117dC0aa78b770fA6A738034120C302":{name:"1INCH Token",logo:"1inch.svg",erc20:!0,symbol:"1INCH",decimals:18},"0x27702a26126e0B3702af63Ee09aC4d1A084EF628":{name:"Aleph.im Token",logo:"aleph.svg",erc20:!0,symbol:"ALEPH",decimals:18},"0x32a7C02e79c4ea1008dD6564b35F131428673c41":{name:"CRUST",logo:"crust.svg",erc20:!0,symbol:"CRU",decimals:18},"0x3472A5A71965499acd81997a54BBA8D852C6E53d":{name:"BADGER",logo:"badger.svg",erc20:!0,symbol:"BADGER",decimals:18},"0x65Def5029A0e7591e46B38742bFEdd1Fb7b24436":{name:"Kanpeki",logo:"kanpeki-green.svg",erc20:!0,symbol:"KAE",decimals:18},"0xF94b5C5651c888d928439aB6514B93944eEE6F48":{name:"Yield App",logo:"yield-app.svg",erc20:!0,symbol:"YLD",decimals:18},"0xDcB01cc464238396E213a6fDd933E36796eAfF9f":{name:"Yield",logo:"yield-logo.svg",erc20:!0,symbol:"YLD",decimals:18},"0x968F6f898a6Df937fC1859b323aC2F14643e3fED":{name:"Newscrypto",logo:"NWC.svg",erc20:!0,symbol:"NWC",decimals:18},"0xeb269732ab75A6fD61Ea60b06fE994cD32a83549":{name:"dForce USDx",logo:"USDx.svg",erc20:!0,symbol:"USDx",decimals:18},"0x6e0daDE58D2d89eBBe7aFc384e3E4f15b70b14D8":{name:"QuiverX",logo:"quiverx.svg",erc20:!0,symbol:"QRX",decimals:18},"0x0beAD9a1bcc1b84D06E3f2df67E3549Fd55aB054":{name:"EURxb",logo:"eurxb.svg",erc20:!0,symbol:"EURxb",decimals:18},"0x9F9c8ec3534c3cE16F928381372BfbFBFb9F4D24":{name:"GraphLinq",logo:"glq.svg",erc20:!0,symbol:"GLQ",decimals:18},"0xEB58343b36C7528F23CAAe63a150240241310049":{name:"NBU",logo:"NBU.svg",erc20:!0,symbol:"NBU",decimals:18},"0x16ECCfDbb4eE1A85A33f3A9B21175Cd7Ae753dB4":{name:"Route",logo:"route.svg",erc20:!0,symbol:"ROUTE",decimals:18},"0x75739d5944534115d7C54ee8C73F186D793BAE02":{name:"Collective",logo:"CO2.svg",erc20:!0,symbol:"CO2",decimals:18},"0x35bD01FC9d6D5D81CA9E055Db88Dc49aa2c699A8":{name:"FWB Pro",logo:"FWB.svg",erc20:!0,symbol:"FWB",decimals:18},"0x9B99CcA871Be05119B2012fd4474731dd653FEBe":{name:"Antimatter",logo:"antimatter.svg",erc20:!0,symbol:"MATTER",decimals:18},"0x6De037ef9aD2725EB40118Bb1702EBb27e4Aeb24":{name:"Render Token",logo:"RNDR.svg",erc20:!0,symbol:"RNDR",decimals:18},"0xDf49C9f599A0A9049D97CFF34D0C30E468987389":{name:"SaTT",logo:"SaTT.svg",erc20:!0,symbol:"SATT",decimals:18},"0x431ad2ff6a9C365805eBaD47Ee021148d6f7DBe0":{name:"dForce",logo:"DF.svg",erc20:!0,symbol:"DF",decimals:18},"0x6e1A19F235bE7ED8E3369eF73b196C07257494DE":{name:"Wrapped Filecoin",logo:"WFIL.svg",erc20:!0,symbol:"WFIL",decimals:18},"0xE452E6Ea2dDeB012e20dB73bf5d3863A3Ac8d77a":{name:"Wrapped Celo",logo:"WCELO.svg",erc20:!0,symbol:"wCELO",decimals:18},"0x4A64515E5E1d1073e83f30cB97BEd20400b66E10":{name:"Wrapped ZEC",logo:"WZEC.svg",erc20:!0,symbol:"WZEC",decimals:18},"0xA3865E64121537b5b59B5e239Db4aCBe6F36aa74":{name:"Wrapped Tezos",logo:"WXTZ.svg",erc20:!0,symbol:"WXTZ",decimals:18},"0x53c4871322Bb47e7A24136fce291a6dcC832a294":{name:"Wrapped Litecoin",logo:"WLTC.svg",erc20:!0,symbol:"WLTC",decimals:18},"0xad3E3Fc59dff318BecEaAb7D00EB4F68b1EcF195":{name:"Wrapped Celo USD",logo:"WCUSD.svg",erc20:!0,symbol:"wCUSD",decimals:18},"0x85D7bdfc9c3426b33A684241eEEE70385Bc42820":{name:"Wrapped Kadena",logo:"WKDA.svg",erc20:!0,symbol:"WKDA",decimals:18},"0x39fBBABf11738317a448031930706cd3e612e1B9":{name:"Wrapped XRP",logo:"WXRP.svg",erc20:!0,symbol:"WXRP",decimals:18},"0xBBC7f7A6AADAc103769C66CBC69AB720f7F9Eae3":{name:"INX Token",logo:"INX.svg",erc20:!0,symbol:"INX",decimals:18},"0x1b40183EFB4Dd766f11bDa7A7c3AD8982e998421":{name:"Vesper",logo:"vsp.svg",erc20:!0,symbol:"VSP",decimals:18},"0x544c42fBB96B39B21DF61cf322b5EDC285EE7429":{name:"InsurAce",logo:"INSUR.svg",erc20:!0,symbol:"INSUR",decimals:18},"0xcC665390b03c5D324D8fAF81C15eCee29A73bCB4":{name:"ChainSwap.com Governance Token",logo:"chainswap.svg",erc20:!0,symbol:"ASAP",decimals:18},"0x182F4c4C97cd1c24E1Df8FC4c053E5C47bf53Bef":{name:"keyTango Token",logo:"keyTango.svg",erc20:!0,symbol:"TANGO",decimals:18},"0x0275E1001e293C46CFe158B3702AADe0B99f88a5":{name:"Oiler",logo:"oiler.svg",erc20:!0,symbol:"OIL",decimals:18},"0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F":{name:"Gitcoin",logo:"gtc.svg",erc20:!0,symbol:"GTC",decimals:18},"0x1796ae0b0fa4862485106a0de9b654eFE301D0b2":{name:"Polychain Monsters",logo:"PMON.svg",erc20:!0,symbol:"PMON",decimals:18},"0x8eEF5a82E6Aa222a60F009ac18c24EE12dBf4b41":{name:"Tixl",logo:"TXL.svg",erc20:!0,symbol:"TXL",decimals:18},"0x5218E472cFCFE0b64A064F055B43b4cdC9EfD3A6":{name:"unFederalReserve Token",logo:"eRSDL.svg",erc20:!0,symbol:"eRSDL",decimals:18},"0xE4cC5A22B39fFB0A56d67F94f9300db20D786a5F":{name:"unFederal eRSDL",logo:"uneRSDL.svg",erc20:!0,symbol:"uneRSDL",decimals:8},"0x2dbA05B51eF5A7DE3E7c3327201CA2F8a25C2414":{name:"unFederal DAI",logo:"unDAI.svg",erc20:!0,symbol:"unDAI",decimals:8},"0xFaCecE87e14B50eafc85C44C01702F5f485CA460":{name:"unFederal ETH",logo:"unETH.svg",erc20:!0,symbol:"unETH",decimals:8},"0x6b576972de33BebDe3A703BfF52a091e79f8c87A":{name:"unFederal USDC",logo:"unUSDC.svg",erc20:!0,symbol:"unUSDC",decimals:8},"0x6e2aA5bB90ac37D9006685AFc651ef067E1c7b44":{name:"unFederal USDT",logo:"unUSDT.svg",erc20:!0,symbol:"unUSDT",decimals:8},"0x5D446FC8DBd10EBAcfE9A427aB5402586af98cD4":{name:"unFederal WBTC",logo:"unWBTC.svg",erc20:!0,symbol:"unWBTC",decimals:8},"0xD837eCa6C91c67D98461A411BA2f00bdA9960a9D":{name:"unFederal AAVE",logo:"unAAVE.svg",erc20:!0,symbol:"unAAVE",decimals:8},"0x9e29Ce9cD25F4141dF6BB85b27Ef6933a16A5824":{name:"unFederal YFI",logo:"unYFI.svg",erc20:!0,symbol:"unYFI",decimals:8},"0x031002d15B0D0Cd7c9129d6F644446368deaE391":{name:"unFederal LINK",logo:"unLINK.svg",erc20:!0,symbol:"unLINK",decimals:8},"0xB8E2e2101eD11e9138803cd3e06e16dd19910647":{name:"ArdCoin",logo:"ardcoin.svg",erc20:!0,symbol:"ARDX",decimals:2},"0x6D0F5149c502faf215C89ab306ec3E50b15e2892":{name:"Portion Token",logo:"PRT.svg",erc20:!0,symbol:"PRT",decimals:18},"0xcc7ab8d78dBA187dC95bF3bB86e65E0C26d0041f":{name:"3SPACE ART",logo:"3SPACE.svg",erc20:!0,symbol:"PACE",decimals:18},"0x3845badAde8e6dFF049820680d1F14bD3903a5d0":{name:"SAND",logo:"SAND.svg",erc20:!0,symbol:"SAND",decimals:18},"0xcc7ab8d78dBA187dC95bF3bB86e65E0C26d0041f":{name:"Spacelens",logo:"SPACE.svg",erc20:!0,symbol:"SPACE",decimals:18},"0x50f5474724e0Ee42D9a4e711ccFB275809Fd6d4a":{name:"Sandbox's LANDs",logo:"SAND.svg",erc20:!1,erc721:!0,symbol:"LAND",decimals:0},"0x362bc847A3a9637d3af6624EeC853618a43ed7D2":{name:"PARSIQ",logo:"parsiq.svg",erc20:!0,symbol:"PRQ",decimals:18},"0x21381e026Ad6d8266244f2A583b35F9E4413FA2a":{name:"Formation Finance",logo:"form.svg",erc20:!0,symbol:"FORM",decimals:18},"0x2ba592F78dB6436527729929AAf6c908497cB200":{name:"Cream",logo:"cream.svg",erc20:!0,symbol:"CREAM",decimals:18},"0x46576e20EC5F25586A6Fa2E0d6B6058354B72E72":{name:"Cryptomind",logo:"CR.svg",erc20:!0,erc721:!1,symbol:"CR",decimals:8},"0x5ab21Ec0bfa0B29545230395e3Adaca7d552C948":{name:"PUNKS Comic",logo:"punks-comic.svg",erc20:!1,erc721:!0,symbol:"COMIC",decimals:0},"0x9C2dc0c3CC2BADdE84B0025Cf4df1c5aF288D835":{name:"Coreto",logo:"coreto.svg",erc20:!0,symbol:"COR",decimals:18},"0x0De05F6447ab4D22c8827449EE4bA2D5C288379B":{name:"OOKI",logo:"ooki.svg",erc20:!0,symbol:"OOKI",decimals:18},"0x6B4c7A5e3f0B99FCD83e9c089BDDD6c7FCe5c611":{name:"Million",logo:"million.svg",erc20:!0,symbol:"MM",decimals:18},"0x56d811088235F11C8920698a204A5010a788f4b3":{name:"bZx Protocol Token (BZRX)",logo:"ic_token_bzrx.svg",erc20:!0,symbol:"BZRX",decimals:18},"0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F":{name:"bZx Vesting Token (vBZRX)",logo:"ic_token_vbzrx.svg",erc20:!0,symbol:"vBZRX",decimals:18},"0x3085154623F51b00Dedfc6Ceeb5197277A66B17B":{name:"NIFTY",logo:"nfty.svg",erc20:!0,symbol:"NFTY",decimals:18},"0xB983E01458529665007fF7E0CDdeCDB74B967Eb6":{name:"Fulcrum ETH iToken (iETH)",logo:"ic_token_ieth.svg",erc20:!0,symbol:"iETH",decimals:18},"0x32E4c68B3A4a813b710595AebA7f6B7604Ab9c15":{name:"Fulcrum USDC iToken (iUSDC)",logo:"ic_token_iusdc.svg",erc20:!0,symbol:"iUSDC",decimals:6},"0x2ffa85f655752fB2aCB210287c60b9ef335f5b6E":{name:"Fulcrum WBTC iToken (iWBTC)",logo:"ic_token_ibtc.svg",erc20:!0,symbol:"iWBTC",decimals:8},"0x687642347a9282Be8FD809d8309910A3f984Ac5a":{name:"Fulcrum KNC iToken (iKNC)",logo:"ic_token_iknc.svg",erc20:!0,symbol:"iKNC",decimals:18},"0x463538705E7d22aA7f03Ebf8ab09B067e1001B54":{name:"Fulcrum LINK iToken (iLINK)",logo:"ic_token_ilink.svg",erc20:!0,symbol:"iLINK",decimals:18},"0x6b093998D36f2C7F0cc359441FBB24CC629D5FF0":{name:"Fulcrum DAI iToken (iDAI)",logo:"ic_token_idai.svg",erc20:!0,symbol:"iDAI",decimals:18},"0x7e9997a38A439b2be7ed9c9C4628391d3e055D48":{name:"Fulcrum USDT iToken (iUSDT)",logo:"ic_token_iusdt.svg",erc20:!0,symbol:"iUSDT",decimals:6},"0x9189c499727f88F8eCC7dC4EEA22c828E6AaC015":{name:"Fulcrum MKR iToken (iMKR)",logo:"ic_token_imkr.svg",erc20:!0,symbol:"iMKR",decimals:18},"0x18240BD9C07fA6156Ce3F3f61921cC82b2619157":{name:"Fulcrum BZRX iToken (iBZRX)",logo:"ic_token_ibzrx.svg",erc20:!0,symbol:"iBZRX",decimals:18},"0x7F3Fe9D492A9a60aEBb06d82cBa23c6F32CAd10b":{name:"Fulcrum YFI iToken (iYFI)",logo:"ic_token_iyfi.svg",erc20:!0,symbol:"iYFI",decimals:18},"0x0a625FceC657053Fe2D9FFFdeb1DBb4e412Cf8A8":{name:"Fulcrum UNI iToken (iUNI)",logo:"ic_token_iuni.svg",erc20:!0,symbol:"iUNI",decimals:18},"0x0cae8d91E0b1b7Bd00D906E990C3625b2c220db1":{name:"Fulcrum AAVE iToken (iAAVE)",logo:"ic_token_iaave.svg",erc20:!0,symbol:"iAAVE",decimals:18},"0x3dA0e01472Dee3746b4D324a65D7EdFaECa9Aa4f":{name:"Fulcrum LRC iToken (iLRC)",logo:"ic_token_ilrc.svg",erc20:!0,symbol:"iLRC",decimals:18},"0x6d29903BC2c4318b59B35d97Ab98ab9eC08Ed70D":{name:"Fulcrum COMP iToken (iCOMP)",logo:"ic_token_icomp.svg",erc20:!0,symbol:"iCOMP",decimals:18},"0x08c32b0726C5684024ea6e141C50aDe9690bBdcc":{name:"Stratos Token",logo:"stos.svg",erc20:!0,symbol:"STOS",decimals:18},"0xe28b3B32B6c345A34Ff64674606124Dd5Aceca30":{name:"Injective",logo:"inj.svg",erc20:!0,symbol:"INJ",decimals:18},"0xe516D78d784C77D479977BE58905B3f2b1111126":{name:"Bitspawn",logo:"spwn.svg",erc20:!0,symbol:"SPWN",decimals:18},"0xB16e967ff83DE3F1e9FCeAfbc2C28c1c5c56eF91":{name:"Polkadog",logo:"polkadog.svg",erc20:!0,symbol:"PDOG",decimals:18},"0x07c52c2537D84e532a9F15d32E152C8B94D2b232":{name:"ZkTube",logo:"ZKT.svg",erc20:!0,symbol:"ZKT",decimals:18},"0xF4d861575ecC9493420A3f5a14F85B13f0b50EB3":{name:"Fractal Protocol",logo:"fractal.svg",erc20:!0,symbol:"FCL",decimals:18},"0x3af33bEF05C2dCb3C7288b77fe1C8d2AeBA4d789":{name:"Kromatika",logo:"krom.svg",erc20:!0,symbol:"KROM",decimals:18},"0xA130E3a33a4d84b04c3918c4E5762223Ae252F80":{name:"Swash Token",logo:"swash.svg",erc20:!0,symbol:"SWASH",decimals:18},"0xea7Cc765eBC94C4805e3BFf28D7E4aE48D06468A":{name:"NearPad Token",logo:"nearpad.svg",erc20:!0,symbol:"PAD",decimals:18},"0x87C22615435998D69ACA34889D03155B694a94fc":{name:"DiemLibre",logo:"DLB.svg",erc20:!0,symbol:"DLB",decimals:18},"0x4d224452801ACEd8B2F0aebE155379bb5D594381":{name:"ApeCoin",logo:"APE.svg",erc20:!0,symbol:"APE",decimals:18},"0xCd1fAFf6e578Fa5cAC469d2418C95671bA1a62Fe":{name:"Torum Token",logo:"torum.svg",erc20:!0,symbol:"XTM",decimals:18},"0xcf0C122c6b73ff809C693DB761e7BaeBe62b6a2E":{name:"FLOKI",logo:"floki.svg",erc20:!0,symbol:"FLOKI",decimals:9},"0xe831F96A7a1DcE1aa2EB760b1e296c6A74CaA9d5":{name:"Nexum Coin",logo:"nexum.svg",erc20:!0,symbol:"Nexm",decimals:8},"0x6710c63432A2De02954fc0f851db07146a6c0312":{name:"MFG",logo:"mfg.svg",erc20:!0,symbol:"MFG",decimals:18},"0xae78736Cd615f374D3085123A210448E74Fc6393":{name:"Rocket Pool ETH",logo:"rETH.svg",erc20:!0,symbol:"rETH",decimals:18},"0x0C10bF8FcB7Bf5412187A595ab97a3609160b5c6":{name:"Decentralized USD",logo:"USDD.svg",erc20:!0,symbol:"USDD",decimals:18},"0xD33526068D116cE69F19A9ee46F0bd304F21A51f":{name:"Rocket Pool",logo:"rpl.svg",erc20:!0,symbol:"RPL",decimals:18},"0x9d38F670D15C14716BE1F109a4F453E966A2B6D4":{name:"Quid Ika",logo:"QuidIka.svg",erc20:!0,symbol:"QUID",decimals:9},"0xD3c625F54dec647DB8780dBBe0E880eF21BA4329":{name:"HollaEx Token",logo:"xht.svg",erc20:!0,symbol:"XHT",decimals:18},"0x01e0E2e61f554eCAaeC0cC933E739Ad90f24a86d":{name:"GTON",logo:"gton.svg",erc20:!0,symbol:"GTON",decimals:18},"0xeFF66B4A84C8a6b69b99EB1C5e39aF8fc35d13db":{name:"sGTON",logo:"sgton.svg",erc20:!0,symbol:"sGTON",decimals:18},"0x7659CE147D0e714454073a5dd7003544234b6Aa0":{name:"XCAD Token",logo:"xcad.svg",erc20:!0,symbol:"XCAD",decimals:18},"0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0":{name:"Tellor Tributes",logo:"TRB.svg",erc20:!0,symbol:"TRB",decimals:18},"0x8d96B4ab6C741a4C8679AE323a100d74f085BA8F":{name:"Bazaars",logo:"BZR.svg",erc20:!0,symbol:"BZR",decimals:18},"0x9ee91F9f426fA633d227f7a9b000E28b9dfd8599":{name:"Liquid staked MATIC",logo:"stMATIC.svg",erc20:!0,symbol:"stMATIC",decimals:18},"0x0d02755a5700414B26FF040e1dE35D337DF56218":{name:"Bend Token",logo:"BendDAO.svg",erc20:!0,symbol:"BEND",decimals:18},"0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5":{name:"BitDAO",logo:"BitDAO.svg",erc20:!0,erc721:!1,symbol:"BIT",decimals:18},"0xb8919522331C59f5C16bDfAA6A121a6E03A91F62":{name:"Home",logo:"home.svg",erc20:!0,erc721:!1,symbol:"HOME",decimals:6},"0xa54d2EBfD977ad836203c85F18db2F0a0cF88854":{name:"Bacon",logo:"bacon.svg",erc20:!0,erc721:!1,symbol:"BACON",decimals:18},"0x249cA82617eC3DfB2589c4c17ab7EC9765350a18":{name:"Verse",logo:"VERSE.svg",erc20:!0,erc721:!1,symbol:"VERSE",decimals:18},"0x317eb4ad9cfaC6232f0046831322E895507bcBeb":{name:"Tidex Token",logo:"tidex.svg",erc20:!0,symbol:"TDX",decimals:18},"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE":{name:"SHIBA INU",logo:"shib.svg",erc20:!0,symbol:"SHIB",decimals:18},"0x3506424F91fD33084466F402d5D97f05F8e3b4AF":{name:"chiliZ",logo:"chz.svg",erc20:!0,symbol:"CHZ",decimals:18},"0x15D4c048F83bd7e37d49eA4C83a07267Ec4203dA":{name:"Gala",logo:"gala.svg",erc20:!0,symbol:"GALA",decimals:8},"0x69af81e73A73B40adF4f3d4223Cd9b1ECE623074":{name:"Mask Network",logo:"mask.svg",erc20:!0,symbol:"MASK",decimals:18},"0xD533a949740bb3306d119CC777fa900bA034cd52":{name:"Curve DAO Token",logo:"crv.svg",erc20:!0,symbol:"CRV",decimals:18},"0x92D6C1e31e14520e676a687F0a93788B716BEff5":{name:"dYdX",logo:"dydx.svg",erc20:!0,symbol:"DYDX",decimals:18},"0x60bE1e1fE41c1370ADaF5d8e66f07Cf1C2Df2268":{name:"Perion Credits",logo:"perc.svg",erc20:!0,symbol:"PERC",decimals:18},"0x8971f9fd7196e5cEE2C1032B50F656855af7Dd26":{name:"Lambda",logo:"LAMB.svg",erc20:!0,symbol:"LAMB",decimals:18},"0x65514b352d1d4a17DE97f95C7faB177C625Bd6ff":{name:"KIBBLE Token",logo:"kibble.svg",erc20:!0,erc721:!1,symbol:"KBLE",decimals:18},"0xd9Fcd98c322942075A5C3860693e9f4f03AAE07b":{name:"Euler",logo:"eul.svg",erc20:!0,erc721:!1,symbol:"EUL",decimals:18},"0x777fD20c983d6658c1D50b3958B3A1733d1cd1E1":{name:"PUBLISH",logo:"publish.svg",erc20:!0,symbol:"NEWS",decimals:9},"0x19062190B1925b5b6689D7073fDfC8c2976EF8Cb":{name:"Swarm",logo:"ethswarm.svg",erc20:!0,symbol:"BZZ",decimals:16},"0x6aA030a9710CAD6E719A4EC0a85260Eb3F4F86c1":{name:"Real World Asset",logo:"rwa.svg",erc20:!0,symbol:"RWA",decimals:18},"0xde16Ce60804a881e9F8c4eBB3824646EDecd478D":{name:"MagicCraft",logo:"magiccraft.svg",erc20:!0,symbol:"MCRT",decimals:9},"0x7163436b8EfFfB469F6BB81cc908b1661d4795e6":{name:"Esco coin",logo:"escocoin.svg",erc20:!0,symbol:"ESCO",decimals:18},"0x9625cE7753ace1fa1865A47aAe2c5C2Ce4418569":{name:"KAP Games",logo:"kap-games.svg",erc20:!0,symbol:"KAP",decimals:18},"0x4FbB350052Bca5417566f188eB2EBCE5b19BC964":{name:"Rigo",logo:"grg.svg",erc20:!0,symbol:"GRG",decimals:18},"0xD8E163967FED76806Df0097B704bA721B9b37656":{name:"Cope",logo:"cope.svg",erc20:!0,symbol:"COPE",decimals:18},"0xdfbc9050F5B01DF53512DCC39B4f2B2BBaCD517A":{name:"Jobchain",logo:"job.svg",erc20:!0,symbol:"JOB",decimals:8},"0x083D41d6DD21EE938f0c055CA4fb12268DF0EfaC":{name:"GogolCoin",logo:"gol.svg",erc20:!0,symbol:"GOL",decimals:4},"0x9B4a69dE6CA0deFDD02c0c4ce6Cb84de5202944E":{name:"PROOF Platform",erc20:!0,symbol:"PROOF",decimals:9,logo:"proof-platform.svg"},"0x4507cEf57C46789eF8d1a19EA45f4216bae2B528":{name:"TokenFi",logo:"tokenfi.svg",erc20:!0,symbol:"TOKEN",decimals:9},"0x8B39B70E39Aa811b69365398e0aACe9bee238AEb":{name:"PolkaFoundry",logo:"pkf.svg",erc20:!0,symbol:"PKF",decimals:18},"0x2c95D751DA37A5C1d9c5a7Fd465c1d50F3d96160":{name:"WASSIE",logo:"wassie.svg",erc20:!0,symbol:"WASSIE",decimals:18},"0x06325440D014e39736583c165C2963BA99fAf14E":{name:"Curve.fi",logo:"steCRV.png",erc20:!0,symbol:"steCRV",decimals:18},"0x4E241A9EC66832a16bceaeB9156E524487f061D7":{name:"ETF Rocks",logo:"etf.svg",erc20:!0,symbol:"ETF",decimals:18},"0xA849EaaE994fb86Afa73382e9Bd88c2B6b18Dc71":{name:"Mass Vehicle Ledger",logo:"mvl.svg",erc20:!0,symbol:"MVL",decimals:18},"0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa":{name:"Mantle Staked Ether",logo:"mETH.svg",erc20:!0,erc721:!1,symbol:"mETH",decimals:18}}}}},{package:"@metamask/contract-metadata",file:"node_modules/@metamask/contract-metadata/contract-map.json"}],[1465,{"./contract-map.json":1464},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){t.exports=e("./contract-map.json")}}},{package:"@metamask/contract-metadata",file:"node_modules/@metamask/contract-metadata/index.js"}],[1466,{"./types.cjs":1471},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP=s.ApprovalType=s.ORIGIN_METAMASK=s.NFT_API_TIMEOUT=s.NFT_API_VERSION=s.NFT_API_BASE_URL=s.OPENSEA_PROXY_URL=s.BUILT_IN_NETWORKS=s.BUILT_IN_CUSTOM_NETWORKS_RPC=s.TESTNET_TICKER_SYMBOLS=s.ASSET_TYPES=s.GWEI=s.ERC1155_TOKEN_RECEIVER_INTERFACE_ID=s.ERC1155_METADATA_URI_INTERFACE_ID=s.ERC1155_INTERFACE_ID=s.ERC721_ENUMERABLE_INTERFACE_ID=s.ERC721_METADATA_INTERFACE_ID=s.ERC721_INTERFACE_ID=s.ERC20=s.ERC1155=s.ERC721=s.MAX_SAFE_CHAIN_ID=s.GANACHE_CHAIN_ID=s.IPFS_DEFAULT_GATEWAY_URL=s.FALL_BACK_VS_CURRENCY=s.RPC=void 0;const a=e("./types.cjs");var n;s.RPC="rpc",s.FALL_BACK_VS_CURRENCY="ETH",s.IPFS_DEFAULT_GATEWAY_URL="https://cloudflare-ipfs.com/ipfs/",s.GANACHE_CHAIN_ID="0x539",s.MAX_SAFE_CHAIN_ID=0xfffffffffffec,s.ERC721="ERC721",s.ERC1155="ERC1155",s.ERC20="ERC20",s.ERC721_INTERFACE_ID="0x80ac58cd",s.ERC721_METADATA_INTERFACE_ID="0x5b5e139f",s.ERC721_ENUMERABLE_INTERFACE_ID="0x780e9d63",s.ERC1155_INTERFACE_ID="0xd9b67a26",s.ERC1155_METADATA_URI_INTERFACE_ID="0x0e89341c",s.ERC1155_TOKEN_RECEIVER_INTERFACE_ID="0x4e2312e0",s.GWEI="gwei",s.ASSET_TYPES={NATIVE:"NATIVE",TOKEN:"TOKEN",NFT:"NFT",UNKNOWN:"UNKNOWN"},s.TESTNET_TICKER_SYMBOLS={GOERLI:"GoerliETH",SEPOLIA:"SepoliaETH",LINEA_GOERLI:"LineaETH",LINEA_SEPOLIA:"LineaETH",MEGAETH_TESTNET:"MegaETH"},s.BUILT_IN_CUSTOM_NETWORKS_RPC={MEGAETH_TESTNET:"https://carrot.megaeth.com/rpc"},s.BUILT_IN_NETWORKS={[a.NetworkType.goerli]:{chainId:a.ChainId.goerli,ticker:a.NetworksTicker.goerli,rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl.goerli}},[a.NetworkType.sepolia]:{chainId:a.ChainId.sepolia,ticker:a.NetworksTicker.sepolia,rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl.sepolia}},[a.NetworkType.mainnet]:{chainId:a.ChainId.mainnet,ticker:a.NetworksTicker.mainnet,rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl.mainnet}},[a.NetworkType["linea-goerli"]]:{chainId:a.ChainId["linea-goerli"],ticker:a.NetworksTicker["linea-goerli"],rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl["linea-goerli"]}},[a.NetworkType["linea-sepolia"]]:{chainId:a.ChainId["linea-sepolia"],ticker:a.NetworksTicker["linea-sepolia"],rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl["linea-sepolia"]}},[a.NetworkType["linea-mainnet"]]:{chainId:a.ChainId["linea-mainnet"],ticker:a.NetworksTicker["linea-mainnet"],rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl["linea-mainnet"]}},[a.NetworkType["megaeth-testnet"]]:{chainId:a.ChainId["megaeth-testnet"],ticker:a.NetworksTicker["megaeth-testnet"],rpcPrefs:{blockExplorerUrl:a.BlockExplorerUrl["megaeth-testnet"]}},[a.NetworkType.rpc]:{chainId:undefined,blockExplorerUrl:undefined,ticker:undefined,rpcPrefs:undefined}},s.OPENSEA_PROXY_URL="https://proxy.api.cx.metamask.io/opensea/v1/api/v2",s.NFT_API_BASE_URL="https://nft.api.cx.metamask.io",s.NFT_API_VERSION="1",s.NFT_API_TIMEOUT=15e3,s.ORIGIN_METAMASK="metamask",function(e){e.AddEthereumChain="wallet_addEthereumChain",e.ConnectAccounts="connect_accounts",e.EthDecrypt="eth_decrypt",e.EthGetEncryptionPublicKey="eth_getEncryptionPublicKey",e.EthSignTypedData="eth_signTypedData",e.PersonalSign="personal_sign",e.ResultError="result_error",e.ResultSuccess="result_success",e.SnapDialogAlert="snap_dialog:alert",e.SnapDialogConfirmation="snap_dialog:confirmation",e.SnapDialogPrompt="snap_dialog:prompt",e.SnapDialogDefault="snap_dialog",e.SwitchEthereumChain="wallet_switchEthereumChain",e.Transaction="transaction",e.Unlock="unlock",e.WalletConnect="wallet_connect",e.WalletRequestPermissions="wallet_requestPermissions",e.WatchAsset="wallet_watchAsset"}(n||(s.ApprovalType=n={})),s.CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP={[a.ChainId.goerli]:a.BuiltInNetworkName.Goerli,[a.ChainId.sepolia]:a.BuiltInNetworkName.Sepolia,[a.ChainId.mainnet]:a.BuiltInNetworkName.Mainnet,[a.ChainId["linea-goerli"]]:a.BuiltInNetworkName.LineaGoerli,[a.ChainId["linea-sepolia"]]:a.BuiltInNetworkName.LineaSepolia,[a.ChainId["linea-mainnet"]]:a.BuiltInNetworkName.LineaMainnet,[a.ChainId.aurora]:a.BuiltInNetworkName.Aurora}}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/constants.cjs"}],[1467,{cockatiel:3992},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createServicePolicy=s.DEFAULT_DEGRADED_THRESHOLD=s.DEFAULT_CIRCUIT_BREAK_DURATION=s.DEFAULT_MAX_CONSECUTIVE_FAILURES=s.DEFAULT_MAX_RETRIES=s.handleWhen=s.handleAll=s.ExponentialBackoff=s.ConstantBackoff=s.CircuitState=s.BrokenCircuitError=void 0;const a=e("cockatiel");Object.defineProperty(s,"BrokenCircuitError",{enumerable:!0,get:function(){return a.BrokenCircuitError}}),Object.defineProperty(s,"CircuitState",{enumerable:!0,get:function(){return a.CircuitState}}),Object.defineProperty(s,"ExponentialBackoff",{enumerable:!0,get:function(){return a.ExponentialBackoff}}),Object.defineProperty(s,"ConstantBackoff",{enumerable:!0,get:function(){return a.ConstantBackoff}}),Object.defineProperty(s,"handleAll",{enumerable:!0,get:function(){return a.handleAll}}),Object.defineProperty(s,"handleWhen",{enumerable:!0,get:function(){return a.handleWhen}}),s.DEFAULT_MAX_RETRIES=3,s.DEFAULT_MAX_CONSECUTIVE_FAILURES=3*(1+s.DEFAULT_MAX_RETRIES),s.DEFAULT_CIRCUIT_BREAK_DURATION=18e5,s.DEFAULT_DEGRADED_THRESHOLD=5e3,s.createServicePolicy=function(e={}){const{maxRetries:t=s.DEFAULT_MAX_RETRIES,retryFilterPolicy:n=a.handleAll,maxConsecutiveFailures:r=s.DEFAULT_MAX_CONSECUTIVE_FAILURES,circuitBreakDuration:o=s.DEFAULT_CIRCUIT_BREAK_DURATION,degradedThreshold:i=s.DEFAULT_DEGRADED_THRESHOLD,backoff:c=new a.ExponentialBackoff}=e,l=(0,a.retry)(n,{maxAttempts:t,backoff:c}),d=l.onRetry.bind(l),m=(0,a.circuitBreaker)(a.handleAll,{halfOpenAfter:o,breaker:new a.ConsecutiveBreaker(r)}),u=m.onBreak.bind(m),p=new a.EventEmitter;l.onGiveUp((()=>{m.state===a.CircuitState.Closed&&p.emit()})),l.onSuccess((({duration:e})=>{m.state===a.CircuitState.Closed&&e>i&&p.emit()}));const h=p.addListener;return{...(0,a.wrap)(l,m),circuitBreakerPolicy:m,retryPolicy:l,onBreak:u,onDegraded:h,onRetry:d}}}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/create-service-policy.cjs"}],[1468,{"./constants.cjs":1466,"./create-service-policy.cjs":1467,"./siwe.cjs":1470,"./types.cjs":1471,"./util.cjs":1472},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),s.isEqualCaseInsensitive=s.weiHexToGweiDec=s.toHex=s.toChecksumHexAddress=s.timeoutFetch=s.successfulFetch=s.safelyExecuteWithTimeout=s.safelyExecute=s.query=s.normalizeEnsName=s.isValidHexAddress=s.isValidJson=s.isSmartContractCode=s.isSafeDynamicKey=s.isSafeChainId=s.isPlainObject=s.isNonEmptyArray=s.hexToText=s.hexToBN=s.handleFetch=s.gweiDecToWEIBN=s.getBuyURL=s.fromHex=s.fractionBN=s.fetchWithErrorHandling=s.convertHexToDecimal=s.BNToHex=s.handleWhen=s.handleAll=s.createServicePolicy=s.ExponentialBackoff=s.DEFAULT_MAX_RETRIES=s.DEFAULT_MAX_CONSECUTIVE_FAILURES=s.DEFAULT_DEGRADED_THRESHOLD=s.DEFAULT_CIRCUIT_BREAK_DURATION=s.ConstantBackoff=s.CircuitState=s.BrokenCircuitError=void 0;var r=e("./create-service-policy.cjs");Object.defineProperty(s,"BrokenCircuitError",{enumerable:!0,get:function(){return r.BrokenCircuitError}}),Object.defineProperty(s,"CircuitState",{enumerable:!0,get:function(){return r.CircuitState}}),Object.defineProperty(s,"ConstantBackoff",{enumerable:!0,get:function(){return r.ConstantBackoff}}),Object.defineProperty(s,"DEFAULT_CIRCUIT_BREAK_DURATION",{enumerable:!0,get:function(){return r.DEFAULT_CIRCUIT_BREAK_DURATION}}),Object.defineProperty(s,"DEFAULT_DEGRADED_THRESHOLD",{enumerable:!0,get:function(){return r.DEFAULT_DEGRADED_THRESHOLD}}),Object.defineProperty(s,"DEFAULT_MAX_CONSECUTIVE_FAILURES",{enumerable:!0,get:function(){return r.DEFAULT_MAX_CONSECUTIVE_FAILURES}}),Object.defineProperty(s,"DEFAULT_MAX_RETRIES",{enumerable:!0,get:function(){return r.DEFAULT_MAX_RETRIES}}),Object.defineProperty(s,"ExponentialBackoff",{enumerable:!0,get:function(){return r.ExponentialBackoff}}),Object.defineProperty(s,"createServicePolicy",{enumerable:!0,get:function(){return r.createServicePolicy}}),Object.defineProperty(s,"handleAll",{enumerable:!0,get:function(){return r.handleAll}}),Object.defineProperty(s,"handleWhen",{enumerable:!0,get:function(){return r.handleWhen}}),n(e("./constants.cjs"),s);var o=e("./util.cjs");Object.defineProperty(s,"BNToHex",{enumerable:!0,get:function(){return o.BNToHex}}),Object.defineProperty(s,"convertHexToDecimal",{enumerable:!0,get:function(){return o.convertHexToDecimal}}),Object.defineProperty(s,"fetchWithErrorHandling",{enumerable:!0,get:function(){return o.fetchWithErrorHandling}}),Object.defineProperty(s,"fractionBN",{enumerable:!0,get:function(){return o.fractionBN}}),Object.defineProperty(s,"fromHex",{enumerable:!0,get:function(){return o.fromHex}}),Object.defineProperty(s,"getBuyURL",{enumerable:!0,get:function(){return o.getBuyURL}}),Object.defineProperty(s,"gweiDecToWEIBN",{enumerable:!0,get:function(){return o.gweiDecToWEIBN}}),Object.defineProperty(s,"handleFetch",{enumerable:!0,get:function(){return o.handleFetch}}),Object.defineProperty(s,"hexToBN",{enumerable:!0,get:function(){return o.hexToBN}}),Object.defineProperty(s,"hexToText",{enumerable:!0,get:function(){return o.hexToText}}),Object.defineProperty(s,"isNonEmptyArray",{enumerable:!0,get:function(){return o.isNonEmptyArray}}),Object.defineProperty(s,"isPlainObject",{enumerable:!0,get:function(){return o.isPlainObject}}),Object.defineProperty(s,"isSafeChainId",{enumerable:!0,get:function(){return o.isSafeChainId}}),Object.defineProperty(s,"isSafeDynamicKey",{enumerable:!0,get:function(){return o.isSafeDynamicKey}}),Object.defineProperty(s,"isSmartContractCode",{enumerable:!0,get:function(){return o.isSmartContractCode}}),Object.defineProperty(s,"isValidJson",{enumerable:!0,get:function(){return o.isValidJson}}),Object.defineProperty(s,"isValidHexAddress",{enumerable:!0,get:function(){return o.isValidHexAddress}}),Object.defineProperty(s,"normalizeEnsName",{enumerable:!0,get:function(){return o.normalizeEnsName}}),Object.defineProperty(s,"query",{enumerable:!0,get:function(){return o.query}}),Object.defineProperty(s,"safelyExecute",{enumerable:!0,get:function(){return o.safelyExecute}}),Object.defineProperty(s,"safelyExecuteWithTimeout",{enumerable:!0,get:function(){return o.safelyExecuteWithTimeout}}),Object.defineProperty(s,"successfulFetch",{enumerable:!0,get:function(){return o.successfulFetch}}),Object.defineProperty(s,"timeoutFetch",{enumerable:!0,get:function(){return o.timeoutFetch}}),Object.defineProperty(s,"toChecksumHexAddress",{enumerable:!0,get:function(){return o.toChecksumHexAddress}}),Object.defineProperty(s,"toHex",{enumerable:!0,get:function(){return o.toHex}}),Object.defineProperty(s,"weiHexToGweiDec",{enumerable:!0,get:function(){return o.weiHexToGweiDec}}),Object.defineProperty(s,"isEqualCaseInsensitive",{enumerable:!0,get:function(){return o.isEqualCaseInsensitive}}),n(e("./types.cjs"),s),n(e("./siwe.cjs"),s)}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/index.cjs"}],[1469,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.projectLogger=void 0;const a=e("@metamask/utils");Object.defineProperty(s,"createModuleLogger",{enumerable:!0,get:function(){return a.createModuleLogger}}),s.projectLogger=(0,a.createProjectLogger)("controller-utils")}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/logger.cjs"}],[1470,{"./logger.cjs":1469,"@metamask/utils":2815,"@spruceid/siwe-parser":3110,buffer:3936},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){Object.defineProperty(s,"__esModule",{value:!0}),s.detectSIWE=s.isValidSIWEOrigin=s.parseDomainParts=void 0;const a=e("@metamask/utils"),n=e("@spruceid/siwe-parser"),r=e("./logger.cjs"),o=(0,r.createModuleLogger)(r.projectLogger,"detect-siwe");function i(e){try{const n="string"!=typeof(s=e)?s:(0,a.remove0x)(s),r=t.from(n,"hex");return 32===r.length?e:r.toString("utf8")}catch(t){return o(t),e}var s}const c={"http:":"80","https:":"443"};s.parseDomainParts=(e,t)=>e.match(/^[^/:]*:\/\//u)?new URL(e):new URL(`${t}//${e}`);s.isValidSIWEOrigin=e=>{try{const{origin:t,siwe:a}=e;if(!t||!a?.parsedMessage?.domain)return!1;const n=new URL(t),r=(0,s.parseDomainParts)(a.parsedMessage.domain,n.protocol);return 0===r.hostname.localeCompare(n.hostname,undefined,{sensitivity:"accent"})&&(""!==r.port&&r.port!==n.port?""===n.port&&r.port===c[n.protocol]:""===r.username||r.username===n.username)}catch(e){return o(e),!1}};s.detectSIWE=e=>{try{const{data:t}=e,s=i(t);return{isSIWEMessage:!0,parsedMessage:new n.ParsedMessage(s)}}catch(e){return{isSIWEMessage:!1,parsedMessage:null}}}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/siwe.cjs"}],[1471,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n;Object.defineProperty(s,"__esModule",{value:!0}),s.NetworkNickname=s.BlockExplorerUrl=s.NetworksTicker=s.ChainId=s.BuiltInNetworkName=s.isInfuraNetworkType=s.isNetworkType=s.NetworkType=s.CustomNetworkType=s.InfuraNetworkType=void 0,s.InfuraNetworkType={mainnet:"mainnet",goerli:"goerli",sepolia:"sepolia","linea-goerli":"linea-goerli","linea-sepolia":"linea-sepolia","linea-mainnet":"linea-mainnet"},s.CustomNetworkType={"megaeth-testnet":"megaeth-testnet"},s.NetworkType={...s.InfuraNetworkType,...s.CustomNetworkType,rpc:"rpc"},s.isNetworkType=function(e){return Object.values(s.NetworkType).includes(e)},s.isInfuraNetworkType=function(e){return Object.keys(s.InfuraNetworkType).includes(e)},function(e){e.Mainnet="mainnet",e.Goerli="goerli",e.Sepolia="sepolia",e.LineaGoerli="linea-goerli",e.LineaSepolia="linea-sepolia",e.LineaMainnet="linea-mainnet",e.Aurora="aurora",e.MegaETHTestnet="megaeth-testnet"}(a||(s.BuiltInNetworkName=a={})),s.ChainId={[a.Mainnet]:"0x1",[a.Goerli]:"0x5",[a.Sepolia]:"0xaa36a7",[a.Aurora]:"0x4e454152",[a.LineaGoerli]:"0xe704",[a.LineaSepolia]:"0xe705",[a.LineaMainnet]:"0xe708",[a.MegaETHTestnet]:"0x18c6"},function(e){e.mainnet="ETH",e.goerli="GoerliETH",e.sepolia="SepoliaETH",e["linea-goerli"]="LineaETH",e["linea-sepolia"]="LineaETH",e["linea-mainnet"]="ETH",e["megaeth-testnet"]="MegaETH",e.rpc=""}(n||(s.NetworksTicker=n={})),s.BlockExplorerUrl={[a.Mainnet]:"https://etherscan.io",[a.Goerli]:"https://goerli.etherscan.io",[a.Sepolia]:"https://sepolia.etherscan.io",[a.LineaGoerli]:"https://goerli.lineascan.build",[a.LineaSepolia]:"https://sepolia.lineascan.build",[a.LineaMainnet]:"https://lineascan.build",[a.MegaETHTestnet]:"https://megaexplorer.xyz"},s.NetworkNickname={[a.Mainnet]:"Ethereum Mainnet",[a.Goerli]:"Goerli",[a.Sepolia]:"Sepolia",[a.LineaGoerli]:"Linea Goerli",[a.LineaSepolia]:"Linea Sepolia",[a.LineaMainnet]:"Linea",[a.MegaETHTestnet]:"Mega Testnet"}}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/types.cjs"}],[1472,{"./constants.cjs":1466,"@ethereumjs/util":477,"@metamask/ethjs-unit":1893,"@metamask/utils":2815,"bn.js":3888,buffer:3936,"eth-ens-namehash":4142,"fast-deep-equal":4290},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.isEqualCaseInsensitive=s.isValidJson=s.isNonEmptyArray=s.isPlainObject=s.convertHexToDecimal=s.query=s.normalizeEnsName=s.timeoutFetch=s.fetchWithErrorHandling=s.handleFetch=s.successfulFetch=s.isSmartContractCode=s.isValidHexAddress=s.toChecksumHexAddress=s.safelyExecuteWithTimeout=s.safelyExecute=s.toHex=s.fromHex=s.hexToText=s.hexToBN=s.getBuyURL=s.weiHexToGweiDec=s.gweiDecToWEIBN=s.fractionBN=s.BNToHex=s.isSafeChainId=s.isSafeDynamicKey=s.PROTOTYPE_POLLUTION_BLOCKLIST=void 0;const n=e("@ethereumjs/util"),r=e("@metamask/ethjs-unit"),o=e("@metamask/utils"),i=a(e("bn.js")),c=a(e("eth-ens-namehash")),l=a(e("fast-deep-equal")),d=e("./constants.cjs"),m=new Error("timeout");function u(e){return e?new i.default((0,o.remove0x)(e),16):new i.default(0)}async function p(e,t){const s=await fetch(e,t);if(!s.ok)throw new Error(`Fetch failed with status '${s.status}' for request '${String(e)}'`);return s}async function h(e,t){const s=await p(e,t);return await s.json()}s.PROTOTYPE_POLLUTION_BLOCKLIST=["__proto__","constructor","prototype"],s.isSafeDynamicKey=function(e){return"string"==typeof e&&!s.PROTOTYPE_POLLUTION_BLOCKLIST.some((t=>e===t))},s.isSafeChainId=function(e){if(!(0,o.isHexString)(e))return!1;const t=Number.parseInt(e,(0,o.isStrictHexString)(e)?16:10);return Number.isSafeInteger(t)&&t>0&&t<=d.MAX_SAFE_CHAIN_ID},s.BNToHex=function(e){return(0,o.add0x)(e.toString(16))},s.fractionBN=function(e,t,s){const a=new i.default(t),n=new i.default(s);return e.mul(a).div(n)},s.gweiDecToWEIBN=function(e){if(Number.isNaN(e))return new i.default(0);const t=e.toString().split("."),s=t[0]||"0";let a=t[1]||"";if(!a)return(0,r.toWei)(s,"gwei");if(a.length<=9)return(0,r.toWei)(`${s}.${a}`,"gwei");const n=a.slice(9)[0];a=a.slice(0,9);let o=(0,r.toWei)(`${s}.${a}`,"gwei");return Number(n)>=5&&(o=o.add(new i.default(1))),o},s.weiHexToGweiDec=function(e){const t=new i.default((0,o.remove0x)(e),16);return(0,r.fromWei)(t,"gwei")},s.getBuyURL=function(e="1",t,s=5){switch(e){case"1":return`https://buy.coinbase.com/?code=9ec56d01-7e81-5017-930c-513daa27bb6a&amount=${s}&address=${t}&crypto_currency=ETH`;case"5":return"https://goerli-faucet.slock.it/";case"11155111":return"https://sepoliafaucet.net/";default:return undefined}},s.hexToBN=u,s.hexToText=function(e){try{const s=(0,o.remove0x)(e);return t.from(s,"hex").toString("utf8")}catch(t){return e}},s.fromHex=function(e){return i.default.isBN(e)?e:new i.default(u(e).toString(10))},s.toHex=function(e){return"string"==typeof e&&(0,o.isStrictHexString)(e)?e:`0x${i.default.isBN(e)||"bigint"==typeof e?e.toString(16):new i.default(e.toString(),10).toString(16)}`},s.safelyExecute=async function(e,t=!1){try{return await e()}catch(e){return t&&console.error(e),undefined}},s.safelyExecuteWithTimeout=async function(e,t=!1,s=500){try{return await Promise.race([e(),new Promise(((e,t)=>setTimeout((()=>{t(m)}),s)))])}catch(e){return t&&console.error(e),undefined}},s.toChecksumHexAddress=function(e){if("string"!=typeof e)return e;const t=(0,o.add0x)(e);return(0,o.isHexString)(t)?(0,n.toChecksumAddress)(t):t},s.isValidHexAddress=function(e,{allowNonPrefixed:t=!0}={}){const s=t?(0,o.add0x)(e):e;return!!(0,o.isStrictHexString)(s)&&(0,n.isValidAddress)(s)},s.isSmartContractCode=function(e){return!!e&&("0x"!==e&&"0x0"!==e)},s.successfulFetch=p,s.handleFetch=h,s.fetchWithErrorHandling=async function({url:e,options:t,timeout:s,errorCodesToCatch:a}){let n;try{n=s?Promise.race([await h(e,t),new Promise(((e,t)=>setTimeout((()=>{t(m)}),s)))]):await h(e,t)}catch(e){!function(e,t=[]){if(!e)return;if(!(e instanceof Error))throw e;if(!t.some((t=>e.message.includes(`Fetch failed with status '${t}'`)))&&!e.message.includes("Failed to fetch")&&e!==m)throw e;console.error(e)}(e,a)}return n},s.timeoutFetch=async function(e,t,s=500){return Promise.race([p(e,t),new Promise(((e,t)=>setTimeout((()=>{t(m)}),s)))])},s.normalizeEnsName=function(e){if("."===e)return e;if(e&&"string"==typeof e)try{const t=c.default.normalize(e.trim());if(t.match(/^(([\w\d-]+)\.)*[\w\d-]{7,}\.(eth|test)$/u))return t}catch(e){}return null},s.query=function(e,t,s=[]){return new Promise(((a,n)=>{const r=(e,t)=>{e?n(e):a(t)};t in e&&"function"==typeof e[t]?e[t](...s,r):e.sendAsync({method:t,params:s},r)}))};s.convertHexToDecimal=(e="0x0")=>(0,o.isStrictHexString)(e)?parseInt(e,16):Number(e)?Number(e):0,s.isPlainObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)},s.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},s.isValidJson=function(e){try{return(0,l.default)(e,JSON.parse(JSON.stringify(e)))}catch(e){return!1}},s.isEqualCaseInsensitive=function(e,t){return"string"==typeof e&&"string"==typeof t&&e.toLowerCase()===t.toLowerCase()}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/controller-utils",file:"node_modules/@metamask/controller-utils/dist/util.cjs"}],[1498,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0})}}},{package:"@metamask/eth-token-tracker>@metamask/eth-block-tracker",file:"node_modules/@metamask/eth-block-tracker/dist/BlockTracker.js"}],[1499,{"./logging-utils":1502,"@metamask/safe-event-emitter":2406,"@metamask/utils":2815,"json-rpc-random-id":4550},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.PollingBlockTracker=void 0;const u=m(e("@metamask/safe-event-emitter")),p=e("@metamask/utils"),h=m(e("json-rpc-random-id")),g=e("./logging-utils"),f=(0,g.createModuleLogger)(g.projectLogger,"polling-block-tracker"),b=(0,h.default)(),y=["sync","latest"];class w extends u.default{constructor(e={}){if(!e.provider)throw new Error("PollingBlockTracker - no provider specified.");super(),a.add(this),n.set(this,[]),r.set(this,void 0),this._blockResetDuration=e.blockResetDuration||2e4,this._usePastBlocks=e.usePastBlocks||!1,this._currentBlock=null,this._isRunning=!1,this._onNewListener=this._onNewListener.bind(this),this._onRemoveListener=this._onRemoveListener.bind(this),this._resetCurrentBlock=this._resetCurrentBlock.bind(this),this._setupInternalEvents(),this._provider=e.provider,this._pollingInterval=e.pollingInterval||2e4,this._retryTimeout=e.retryTimeout||this._pollingInterval/10,this._keepEventLoopActive=e.keepEventLoopActive===undefined||e.keepEventLoopActive,this._setSkipCacheFlag=e.setSkipCacheFlag||!1}async destroy(){this._cancelBlockResetTimeout(),this._maybeEnd(),super.removeAllListeners(),l(this,a,"m",c).call(this,new Error("Block tracker destroyed"))}isRunning(){return this._isRunning}getCurrentBlock(){return this._currentBlock}async getLatestBlock(){if(this._currentBlock)return this._currentBlock;if(l(this,r,"f"))return await l(this,r,"f").promise;const{promise:e,resolve:t,reject:s}=(0,p.createDeferredPromise)({suppressUnhandledRejection:!0});d(this,r,{reject:s,promise:e},"f");const n=e=>{l(this,a,"m",i).call(this,n),t(e),d(this,r,undefined,"f")};return l(this,a,"m",o).call(this,n),this.once("latest",n),await e}removeAllListeners(e){return e?super.removeAllListeners(e):super.removeAllListeners(),this._setupInternalEvents(),this._onRemoveListener(),this}_setupInternalEvents(){this.removeListener("newListener",this._onNewListener),this.removeListener("removeListener",this._onRemoveListener),this.on("newListener",this._onNewListener),this.on("removeListener",this._onRemoveListener)}_onNewListener(e){y.includes(e)&&this._maybeStart()}_onRemoveListener(){this._getBlockTrackerEventCount()>0||this._maybeEnd()}_maybeStart(){this._isRunning||(this._isRunning=!0,this._cancelBlockResetTimeout(),this._start(),this.emit("_started"))}_maybeEnd(){this._isRunning&&(this._isRunning=!1,this._setupBlockResetTimeout(),this._end(),this.emit("_ended"))}_getBlockTrackerEventCount(){return y.map((e=>this.listeners(e))).flat().filter((e=>l(this,n,"f").every((t=>!Object.is(t,e))))).length}_shouldUseNewBlock(e){const t=this._currentBlock;if(!t)return!0;const s=k(e),a=k(t);return this._usePastBlocks&&s<a||s>a}_newPotentialLatest(e){this._shouldUseNewBlock(e)&&this._setCurrentBlock(e)}_setCurrentBlock(e){const t=this._currentBlock;this._currentBlock=e,this.emit("latest",e),this.emit("sync",{oldBlock:t,newBlock:e})}_setupBlockResetTimeout(){this._cancelBlockResetTimeout(),this._blockResetTimeout=setTimeout(this._resetCurrentBlock,this._blockResetDuration),this._blockResetTimeout.unref&&this._blockResetTimeout.unref()}_cancelBlockResetTimeout(){this._blockResetTimeout&&clearTimeout(this._blockResetTimeout)}_resetCurrentBlock(){this._currentBlock=null}async checkForLatestBlock(){return await this._updateLatestBlock(),await this.getLatestBlock()}_start(){this._updateAndQueue()}_end(){this._clearPollingTimeout()}async _updateLatestBlock(){const e=await this._fetchLatestBlock();this._newPotentialLatest(e)}async _fetchLatestBlock(){const e={jsonrpc:"2.0",id:b(),method:"eth_blockNumber",params:[]};this._setSkipCacheFlag&&(e.skipCache=!0),f("Making request",e);try{const t=await this._provider.request(e);return f("Got result",t),t}catch(e){throw f("Encountered error fetching block",(0,p.getErrorMessage)(e)),e}}async _updateAndQueue(){var e;let t=this._pollingInterval;try{await this._updateLatestBlock()}catch(s){const a=new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\n${null!==(e=s.stack)&&void 0!==e?e:s}`);try{this.emit("error",a)}catch(e){console.error(a)}t=this._retryTimeout}if(!this._isRunning)return;this._clearPollingTimeout();const s=setTimeout((()=>{this._updateAndQueue()}),t);s.unref&&!this._keepEventLoopActive&&s.unref(),this._pollingTimeout=s,this.emit("_waitingForNextIteration")}_clearPollingTimeout(){this._pollingTimeout&&(clearTimeout(this._pollingTimeout),this._pollingTimeout=undefined)}}function k(e){return Number.parseInt(e,16)}s.PollingBlockTracker=w,n=new WeakMap,r=new WeakMap,a=new WeakSet,o=function(e){l(this,n,"f").push(e)},i=function(e){l(this,n,"f").splice(l(this,n,"f").indexOf(e),1)},c=function(e){var t;null===(t=l(this,r,"f"))||void 0===t||t.reject(e),d(this,r,undefined,"f")}}}},{package:"@metamask/eth-token-tracker>@metamask/eth-block-tracker",file:"node_modules/@metamask/eth-block-tracker/dist/PollingBlockTracker.js"}],[1500,{"@metamask/safe-event-emitter":2406,"@metamask/utils":2815,"json-rpc-random-id":4550},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a,n,r,o,i,c,l=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)},d=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},m=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.SubscribeBlockTracker=void 0;const u=m(e("@metamask/safe-event-emitter")),p=e("@metamask/utils"),h=(0,m(e("json-rpc-random-id")).default)(),g=["sync","latest"];class f extends u.default{constructor(e={}){if(!e.provider)throw new Error("SubscribeBlockTracker - no provider specified.");super(),a.add(this),n.set(this,[]),r.set(this,void 0),this._blockResetDuration=e.blockResetDuration||2e4,this._usePastBlocks=e.usePastBlocks||!1,this._currentBlock=null,this._isRunning=!1,this._onNewListener=this._onNewListener.bind(this),this._onRemoveListener=this._onRemoveListener.bind(this),this._resetCurrentBlock=this._resetCurrentBlock.bind(this),this._setupInternalEvents(),this._provider=e.provider,this._subscriptionId=null}async destroy(){this._cancelBlockResetTimeout(),await this._maybeEnd(),super.removeAllListeners(),l(this,a,"m",c).call(this,new Error("Block tracker destroyed"))}isRunning(){return this._isRunning}getCurrentBlock(){return this._currentBlock}async getLatestBlock(){if(this._currentBlock)return this._currentBlock;if(l(this,r,"f"))return await l(this,r,"f").promise;const{resolve:e,reject:t,promise:s}=(0,p.createDeferredPromise)({suppressUnhandledRejection:!0});d(this,r,{reject:t,promise:s},"f");const n=t=>{l(this,a,"m",i).call(this,n),e(t),d(this,r,undefined,"f")};return l(this,a,"m",o).call(this,n),this.once("latest",n),await s}removeAllListeners(e){return e?super.removeAllListeners(e):super.removeAllListeners(),this._setupInternalEvents(),this._onRemoveListener(),this}_setupInternalEvents(){this.removeListener("newListener",this._onNewListener),this.removeListener("removeListener",this._onRemoveListener),this.on("newListener",this._onNewListener),this.on("removeListener",this._onRemoveListener)}_onNewListener(e){g.includes(e)&&this._maybeStart()}_onRemoveListener(){this._getBlockTrackerEventCount()>0||this._maybeEnd()}async _maybeStart(){this._isRunning||(this._isRunning=!0,this._cancelBlockResetTimeout(),await this._start(),this.emit("_started"))}async _maybeEnd(){this._isRunning&&(this._isRunning=!1,this._setupBlockResetTimeout(),await this._end(),this.emit("_ended"))}_getBlockTrackerEventCount(){return g.map((e=>this.listeners(e))).flat().filter((e=>l(this,n,"f").every((t=>!Object.is(t,e))))).length}_shouldUseNewBlock(e){const t=this._currentBlock;if(!t)return!0;const s=b(e),a=b(t);return this._usePastBlocks&&s<a||s>a}_newPotentialLatest(e){this._shouldUseNewBlock(e)&&this._setCurrentBlock(e)}_setCurrentBlock(e){const t=this._currentBlock;this._currentBlock=e,this.emit("latest",e),this.emit("sync",{oldBlock:t,newBlock:e})}_setupBlockResetTimeout(){this._cancelBlockResetTimeout(),this._blockResetTimeout=setTimeout(this._resetCurrentBlock,this._blockResetDuration),this._blockResetTimeout.unref&&this._blockResetTimeout.unref()}_cancelBlockResetTimeout(){this._blockResetTimeout&&clearTimeout(this._blockResetTimeout)}_resetCurrentBlock(){this._currentBlock=null}async checkForLatestBlock(){return await this.getLatestBlock()}async _start(){if(this._subscriptionId===undefined||null===this._subscriptionId)try{const e=await this._call("eth_blockNumber");this._subscriptionId=await this._call("eth_subscribe","newHeads"),this._provider.on("data",this._handleSubData.bind(this)),this._newPotentialLatest(e)}catch(e){this.emit("error",e),l(this,a,"m",c).call(this,e)}}async _end(){if(null!==this._subscriptionId&&this._subscriptionId!==undefined)try{await this._call("eth_unsubscribe",this._subscriptionId),this._subscriptionId=null}catch(e){this.emit("error",e),l(this,a,"m",c).call(this,e)}}async _call(e,...t){return this._provider.request({id:h(),method:e,params:t,jsonrpc:"2.0"})}_handleSubData(e,t){var s;"eth_subscription"===t.method&&(null===(s=t.params)||void 0===s?void 0:s.subscription)===this._subscriptionId&&this._newPotentialLatest(t.params.result.number)}}function b(e){return Number.parseInt(e,16)}s.SubscribeBlockTracker=f,n=new WeakMap,r=new WeakMap,a=new WeakSet,o=function(e){l(this,n,"f").push(e)},i=function(e){l(this,n,"f").splice(l(this,n,"f").indexOf(e),1)},c=function(e){var t;null===(t=l(this,r,"f"))||void 0===t||t.reject(e),d(this,r,undefined,"f")}}}},{package:"@metamask/eth-token-tracker>@metamask/eth-block-tracker",file:"node_modules/@metamask/eth-block-tracker/dist/SubscribeBlockTracker.js"}],[1501,{"./BlockTracker":1498,"./PollingBlockTracker":1499,"./SubscribeBlockTracker":1500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./PollingBlockTracker"),s),n(e("./SubscribeBlockTracker"),s),n(e("./BlockTracker"),s)}}},{package:"@metamask/eth-token-tracker>@metamask/eth-block-tracker",file:"node_modules/@metamask/eth-block-tracker/dist/index.js"}],[1502,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.createModuleLogger=s.projectLogger=void 0;const a=e("@metamask/utils");Object.defineProperty(s,"createModuleLogger",{enumerable:!0,get:function(){return a.createModuleLogger}}),s.projectLogger=(0,a.createProjectLogger)("eth-block-tracker")}}},{package:"@metamask/eth-token-tracker>@metamask/eth-block-tracker",file:"node_modules/@metamask/eth-block-tracker/dist/logging-utils.js"}],[1503,{"@ethereumjs/util":477,"@metamask/eth-sig-util":1526,"@metamask/key-tree":1932,"@metamask/scure-bip39":2407,"@metamask/scure-bip39/dist/wordlists/english.js":2408,"@metamask/utils":2815,buffer:3936,"ethereum-cryptography/hdkey":4162,"ethereum-cryptography/keccak":4163},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){(function(t){(function(){var a,n,r,o,i,c,l,d,m,u,p,h=this&&this.__classPrivateFieldSet||function(e,t,s,a,n){if("m"===a)throw new TypeError("Private method is not writable");if("a"===a&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===a?n.call(e,s):n?n.value=s:t.set(e,s),s},g=this&&this.__classPrivateFieldGet||function(e,t,s,a){if("a"===s&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?a:"a"===s?a.call(e):a?a.value:t.get(e)};Object.defineProperty(s,"__esModule",{value:!0}),s.HdKeyring=void 0;const f=e("@ethereumjs/util"),b=e("@metamask/eth-sig-util"),y=e("@metamask/key-tree"),w=e("@metamask/scure-bip39"),k=e("@metamask/scure-bip39/dist/wordlists/english.js"),A=e("@metamask/utils"),E=e("ethereum-cryptography/hdkey"),S=e("ethereum-cryptography/keccak"),C="m/44'/60'/0'/0",v="HD Key Tree";class T{constructor(e={}){a.add(this),this.type=v,this.hdPath=C,n.set(this,[]),r.set(this,void 0),h(this,r,e.cryptographicFunctions,"f")}async generateRandomMnemonic(){await g(this,a,"m",m).call(this,(0,w.generateMnemonic)(k.wordlist))}async serialize(){let e=[];if(this.mnemonic){const t=g(this,a,"m",o).call(this,this.mnemonic);e=Array.from((new TextEncoder).encode(t))}return{mnemonic:e,numberOfAccounts:g(this,n,"f").length,hdPath:this.hdPath}}async deserialize(e={}){if(e.numberOfAccounts&&!e.mnemonic)throw new Error("Eth-Hd-Keyring: Deserialize method cannot be called with an opts value for numberOfAccounts and no menmonic");if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");return h(this,n,[],"f"),this.mnemonic=null,this.seed=null,this.root=null,this.hdPath=e.hdPath??C,e.mnemonic&&await g(this,a,"m",m).call(this,e.mnemonic),e.numberOfAccounts?this.addAccounts(e.numberOfAccounts):[]}async addAccounts(e=1){if(!this.root)throw new Error("Eth-Hd-Keyring: No secret recovery phrase provided");const t=g(this,n,"f").length,s=[];for(let a=t;a<e+t;a++){const e=this.root.deriveChild(a);s.push(e),g(this,n,"f").push(e)}const r=s.map((e=>((0,A.assert)(e.publicKey,"Expected public key to be set"),g(this,a,"m",u).call(this,e.publicKey))));return Promise.resolve(r)}getAccounts(){return g(this,n,"f").map((e=>((0,A.assert)(e.publicKey,"Expected public key to be set"),g(this,a,"m",u).call(this,e.publicKey))))}async getAppKeyAddress(e,t){if(!t||"string"!=typeof t)throw new Error("'origin' must be a non-empty string");const s=g(this,a,"m",d).call(this,e,{withAppKeyOrigin:t});(0,A.assert)(s.publicKey,"Expected public key to be set");return g(this,a,"m",p).call(this,(0,A.bytesToHex)((0,f.publicToAddress)(s.publicKey)))}async exportAccount(e,t){const s=t?g(this,a,"m",d).call(this,e,t):g(this,a,"m",d).call(this,e),{privateKey:n}=s;return(0,A.assert)(n instanceof Uint8Array,"Expected private key to be of type Uint8Array"),(0,A.remove0x)((0,A.bytesToHex)(n))}async signTransaction(e,s,n={}){const r=g(this,a,"m",l).call(this,e,n);return s.sign(t.from(r))??s}async signMessage(e,s,n={}){(0,A.assertIsHexString)(s);const r=(0,A.remove0x)(s),o=g(this,a,"m",l).call(this,e,n),i=(0,f.ecsign)(t.from(r,"hex"),t.from(o));return(0,b.concatSig)(t.from((0,A.bigIntToBytes)(i.v)),t.from(i.r),t.from(i.s))}async signPersonalMessage(e,s,n={}){const r=g(this,a,"m",l).call(this,e,n),o=t.from(r);return(0,b.personalSign)({privateKey:o,data:s})}async decryptMessage(e,s){const n=g(this,a,"m",d).call(this,e),{privateKey:r}=n;(0,A.assert)(r,"Expected private key to be set");const o=t.from(r).toString("hex");return(0,b.decrypt)({privateKey:o,encryptedData:s})}async signTypedData(e,s,n={version:b.SignTypedDataVersion.V1}){const r=Object.keys(b.SignTypedDataVersion).includes(n.version)?n.version:b.SignTypedDataVersion.V1,o=g(this,a,"m",l).call(this,e,n);return(0,b.signTypedData)({privateKey:t.from(o),data:s,version:r})}async signEip7702Authorization(e,s,n){const r=g(this,a,"m",l).call(this,e,n);return(0,b.signEIP7702Authorization)({privateKey:t.from(r),authorization:s})}removeAccount(e){const t=g(this,a,"m",p).call(this,e);if(!g(this,n,"f").map((({publicKey:e})=>e&&g(this,a,"m",u).call(this,e))).includes(t))throw new Error(`Address ${t} not found in this keyring`);h(this,n,g(this,n,"f").filter((({publicKey:e})=>e&&g(this,a,"m",u).call(this,e)!==t)),"f")}async getEncryptionPublicKey(e,t={}){const s=g(this,a,"m",l).call(this,e,t);return(0,b.getEncryptionPublicKey)((0,A.remove0x)((0,A.bytesToHex)(s)))}}s.HdKeyring=T,n=new WeakMap,r=new WeakMap,a=new WeakSet,o=function(e){return Array.from(new Uint16Array(new Uint8Array(e).buffer)).map((e=>k.wordlist[e])).join(" ")},i=function(e){const t=e.split(" ").map((e=>k.wordlist.indexOf(e)));return new Uint8Array(new Uint16Array(t).buffer)},c=function(e){let s=e;var n;if("object"==typeof(n=e)&&null!==n&&"type"in n&&"Buffer"===n.type&&"data"in n&&Array.isArray(n.data)&&(s=e.data),"string"==typeof s||t.isBuffer(s)||Array.isArray(s)){let e;return e=Array.isArray(s)?t.from(s).toString():t.isBuffer(s)?s.toString():s,g(this,a,"m",i).call(this,e)}return s instanceof Object&&!(s instanceof Uint8Array)?Uint8Array.from(Object.values(s)):((0,A.assert)(s instanceof Uint8Array,"Expected Uint8Array mnemonic"),s)},l=function(e,t){if(!e)throw new Error("Must specify address.");const s=g(this,a,"m",d).call(this,e,t);return(0,A.assert)(s.privateKey,"Missing private key"),s.privateKey},d=function(e,{withAppKeyOrigin:s}={}){const r=g(this,a,"m",p).call(this,e),o=g(this,n,"f").find((({publicKey:e})=>e&&g(this,a,"m",u).call(this,e)===r));if(!o)throw new Error("HD Keyring - Unable to find matching address.");if(s){const{privateKey:e}=o;(0,A.assert)(e,"Expected private key to be set");const a=t.from(s,"utf8"),n=t.concat([e,a]),r=t.from((0,S.keccak256)(n));return{privateKey:r,publicKey:t.from((0,f.privateToPublic)(r))}}return o},m=async function(e){if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");this.mnemonic=g(this,a,"m",c).call(this,e),this.seed=await(0,y.mnemonicToSeed)(this.mnemonic,"",g(this,r,"f")),this.hdWallet=E.HDKey.fromMasterSeed(this.seed),this.root=this.hdWallet.derive(this.hdPath)},u=function(e){return(0,A.add0x)((0,A.bytesToHex)((0,f.publicToAddress)(t.from(e),!0)).toLowerCase())},p=function(e){const t=(0,b.normalize)(e);return(0,A.assert)(t,"Expected address to be set"),(0,A.add0x)(t)},T.type=v}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring",file:"node_modules/@metamask/eth-hd-keyring/dist/hd-keyring.cjs"}],[1504,{"./hd-keyring.cjs":1503},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.HdKeyring=void 0;var a=e("./hd-keyring.cjs");Object.defineProperty(s,"HdKeyring",{enumerable:!0,get:function(){return a.HdKeyring}})}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring",file:"node_modules/@metamask/eth-hd-keyring/dist/index.cjs"}],[1505,{"./errors":1506,"./packer":1509,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.decodeSingle=s.decode=s.encodePacked=s.encodeSingle=s.encode=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./packer");s.encode=(e,t,s,a)=>{try{return(0,r.pack)({types:e,values:t,packed:s,tight:a})}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to encode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.encodeSingle=(e,t)=>(0,s.encode)([e],[t]);s.encodePacked=(e,t,a)=>(0,s.encode)(e,t,!0,a);s.decode=(e,t)=>{const s=(0,a.createBytes)(t);try{return(0,r.unpack)(e,s)}catch(e){if(e instanceof n.ParserError)throw new n.ParserError(`Unable to decode value: ${e.message}`,e);throw new n.ParserError(`An unexpected error occurred: ${(0,n.getErrorMessage)(e)}`,e)}};s.decodeSingle=(e,t)=>{const r=(0,s.decode)([e],t);return(0,a.assert)(1===r.length,new n.ParserError("Decoded value array has unexpected length.")),r[0]}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/abi.js"}],[1506,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.ParserError=s.getErrorStack=s.getErrorMessage=void 0;const a=e("@metamask/utils");s.getErrorMessage=e=>"string"==typeof e?e:e instanceof Error||(0,a.isObject)(e)&&(0,a.hasProperty)(e,"message")&&"string"==typeof e.message?e.message:"Unknown error.";s.getErrorStack=e=>e instanceof Error?e.stack:undefined;class n extends Error{constructor(e,t){super(e),this.name="ParserError";const a=(0,s.getErrorStack)(t);a&&(this.stack=a)}}s.ParserError=n}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/errors.js"}],[1507,{"./abi":1505,"./errors":1506,"./types":1522},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./abi"),s),n(e("./errors"),s),n(e("./types"),s)}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/index.js"}],[1508,{"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.iterate=void 0;const a=e("@metamask/utils");s.iterate=function*(e,t=32){for(let s=0;s<e.length;s+=t){const n=e=>{(0,a.assert)(e>=0,"Cannot skip a negative number of bytes."),(0,a.assert)(e%t==0,"Length must be a multiple of the size."),s+=e},r=e.subarray(s);yield{skip:n,value:r}}return{skip:()=>undefined,value:new Uint8Array}}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/iterator.js"}],[1509,{"./errors":1506,"./iterator":1508,"./parsers":1516,"./utils":1524,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.unpack=s.pack=s.isDynamicParser=s.getParser=void 0;const a=e("@metamask/utils"),n=e("./errors"),r=e("./iterator"),o=e("./parsers"),i=e("./utils");s.getParser=e=>{const t={address:o.address,array:o.array,bool:o.bool,bytes:o.bytes,fixedBytes:o.fixedBytes,function:o.fn,number:o.number,string:o.string,tuple:o.tuple},s=t[e];if(s)return s;const a=Object.values(t).find((t=>t.isType(e)));if(a)return a;throw new n.ParserError(`The type "${e}" is not supported.`)};s.isDynamicParser=(e,t)=>{const{isDynamic:s}=e;return"function"==typeof s?s(t):s};s.pack=({types:e,values:t,packed:r=!1,tight:o=!1,arrayPacked:c=!1,byteArray:l=new Uint8Array})=>{(0,a.assert)(e.length===t.length,new n.ParserError(`The number of types (${e.length}) does not match the number of values (${t.length}).`));const{staticBuffer:d,dynamicBuffer:m,pointers:u}=e.reduce((({staticBuffer:e,dynamicBuffer:n,pointers:i},l,d)=>{const m=(0,s.getParser)(l),u=t[d];if(r||c||!(0,s.isDynamicParser)(m,l))return{staticBuffer:m.encode({buffer:e,value:u,type:l,packed:r,tight:o}),dynamicBuffer:n,pointers:i};return{staticBuffer:(0,a.concatBytes)([e,new Uint8Array(32)]),dynamicBuffer:m.encode({buffer:n,value:u,type:l,packed:r,tight:o}),pointers:[...i,{position:e.length,pointer:n.length}]}}),{staticBuffer:new Uint8Array,dynamicBuffer:new Uint8Array,pointers:[]});(0,a.assert)(!r&&!c||0===m.length,new n.ParserError("Invalid pack state."));const p=d.length,h=u.reduce(((e,{pointer:t,position:s})=>{const n=(0,i.padStart)((0,a.numberToBytes)(p+t));return(0,i.set)(e,n,s)}),d);return(0,a.concatBytes)([l,h,m])};s.unpack=(e,t)=>{const o=(0,r.iterate)(t);return e.map((e=>{const{value:{value:r,skip:i},done:c}=o.next();(0,a.assert)(!c,new n.ParserError(`The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse "${e}".`));const l=(0,s.getParser)(e);if((0,s.isDynamicParser)(l,e)){const s=(0,a.bytesToNumber)(r.subarray(0,32)),n=t.subarray(s);return l.decode({type:e,value:n,skip:i})}return l.decode({type:e,value:r,skip:i})}))}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/packer.js"}],[1510,{"../errors":1506,"../utils":1524,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.address=s.getAddress=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils");s.getAddress=e=>{const t=(0,a.createBytes)(e);return(0,a.assert)(t.length<=20,new n.ParserError(`Invalid address value. Expected address to be 20 bytes long, but received ${t.length} bytes.`)),(0,r.padStart)(t,20)},s.address={isDynamic:!1,isType:e=>"address"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:n}){const o=(0,s.getAddress)(t);if(n)return(0,a.concatBytes)([e,o]);const i=(0,r.padStart)(o);return(0,a.concatBytes)([e,i])},decode:({value:e})=>(0,a.add0x)((0,a.bytesToHex)(e.slice(12,32)))}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/address.js"}],[1511,{"../errors":1506,"../packer":1509,"../utils":1524,"./fixed-bytes":1514,"./tuple":1520,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.array=s.getTupleType=s.getArrayType=s.isArrayType=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../packer"),o=e("../utils"),i=e("./fixed-bytes"),c=e("./tuple"),l=/^(?<type>.*)\[(?<length>\d*?)\]$/u;s.isArrayType=e=>l.test(e);s.getArrayType=e=>{const t=e.match(l);return(0,a.assert)(t?.groups?.type,new n.ParserError(`Invalid array type. Expected an array type, but received "${e}".`)),[t.groups.type,t.groups.length?parseInt(t.groups.length,10):undefined]};s.getTupleType=(e,t)=>`(${new Array(t).fill(e).join(",")})`,s.array={isDynamic(e){const[t,a]=(0,s.getArrayType)(e);return a===undefined||(0,r.isDynamicParser)((0,r.getParser)(t),t)},isType:e=>(0,s.isArrayType)(e),getByteLength(e){(0,a.assert)((0,s.isArrayType)(e),new n.ParserError(`Expected an array type, but received "${e}".`));const[t,o]=(0,s.getArrayType)(e);return(0,r.isDynamicParser)(this,e)||o===undefined?32:c.tuple.getByteLength((0,s.getTupleType)(t,o))},encode({type:e,buffer:t,value:l,packed:d,tight:m}){const[u,p]=(0,s.getArrayType)(e);if((0,a.assert)(!d||!(0,s.isArrayType)(u),new n.ParserError("Cannot pack nested arrays.")),d&&(0,r.isDynamicParser)((0,r.getParser)(u),u))return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:t,packed:d,arrayPacked:!0,tight:m});if(p)return(0,a.assert)(p===l.length,new n.ParserError(`Array length does not match type length. Expected a length of ${p}, but received ${l.length}.`)),c.tuple.encode({type:(0,s.getTupleType)(u,p),buffer:t,value:l,packed:i.fixedBytes.isType(u)&&m,tight:m});if(d)return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:t,packed:i.fixedBytes.isType(u)&&m,arrayPacked:!0,tight:m});const h=(0,o.padStart)((0,a.numberToBytes)(l.length));return(0,r.pack)({types:new Array(l.length).fill(u),values:l,byteArray:(0,a.concatBytes)([t,h]),packed:d,tight:m})},decode({type:e,value:t,...o}){const[i,l]=(0,s.getArrayType)(e);if(l){const e=c.tuple.decode({type:(0,s.getTupleType)(i,l),value:t,...o});return(0,a.assert)(e.length===l,new n.ParserError(`Array length does not match type length. Expected a length of ${l}, but received ${e.length}.`)),e}const d=(0,a.bytesToNumber)(t.subarray(0,32));return(0,r.unpack)(new Array(d).fill(i),t.subarray(32))}}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/array.js"}],[1512,{"../errors":1506,"./number":1517,"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bool=s.getBooleanValue=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),o=e("./number"),i=(0,a.coerce)((0,a.boolean)(),(0,a.union)([(0,a.literal)("true"),(0,a.literal)("false")]),(e=>"true"===e));s.getBooleanValue=e=>{try{return(0,a.create)(e,i)?BigInt(1):BigInt(0)}catch{throw new r.ParserError(`Invalid boolean value. Expected a boolean literal, or the string "true" or "false", but received "${e}".`)}},s.bool={isDynamic:!1,isType:e=>"bool"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:r}){const i=(0,s.getBooleanValue)(t);return a?(0,n.concatBytes)([e,(0,n.bigIntToBytes)(i)]):o.number.encode({type:"uint256",buffer:e,value:i,packed:a,tight:r})},decode:e=>o.number.decode({...e,type:"uint256"})===BigInt(1)}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/bool.js"}],[1513,{"../utils":1524,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.bytes=void 0;const a=e("@metamask/utils"),n=e("../utils");s.bytes={isDynamic:!0,isType:e=>"bytes"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:s}){const r=(0,a.createBytes)(t);if(s)return(0,a.concatBytes)([e,r]);const o=32*Math.ceil(r.byteLength/32);return(0,a.concatBytes)([e,(0,n.padStart)((0,a.numberToBytes)(r.byteLength)),(0,n.padEnd)(r,o)])},decode({value:e}){const t=e.subarray(0,32),s=(0,a.bytesToNumber)(t);return e.slice(32,32+s)}}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/bytes.js"}],[1514,{"../errors":1506,"../utils":1524,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fixedBytes=s.getByteLength=void 0;const a=e("@metamask/utils"),n=e("../errors"),r=e("../utils"),o=/^bytes([0-9]{1,2})$/u;s.getByteLength=e=>{const t=e.match(o)?.[1];(0,a.assert)(t,`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`);const s=Number(t);return(0,a.assert)(s>0&&s<=32,new n.ParserError(`Invalid byte length. Expected a number between 1 and 32, but received "${e}".`)),s},s.fixedBytes={isDynamic:!1,isType:e=>o.test(e),getByteLength:()=>32,encode({type:e,buffer:t,value:o,packed:i}){const c=(0,s.getByteLength)(e),l=(0,a.createBytes)(o);return(0,a.assert)(l.length<=c,new n.ParserError(`Expected a value of length ${c}, but received a value of length ${l.length}.`)),i?(0,a.concatBytes)([t,(0,r.padEnd)(l,c)]):(0,a.concatBytes)([t,(0,r.padEnd)(l)])},decode({type:e,value:t}){const a=(0,s.getByteLength)(e);return t.slice(0,a)}}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/fixed-bytes.js"}],[1515,{"../errors":1506,"./fixed-bytes":1514,"@metamask/superstruct":2737,"@metamask/utils":2815},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){Object.defineProperty(s,"__esModule",{value:!0}),s.fn=s.getFunction=void 0;const a=e("@metamask/superstruct"),n=e("@metamask/utils"),r=e("../errors"),o=e("./fixed-bytes"),i=(0,a.coerce)((0,a.object)({address:n.StrictHexStruct,selector:n.StrictHexStruct}),(0,a.union)([n.StrictHexStruct,(0,a.instance)(Uint8Array)]),(e=>{const t=(0,n.createBytes)(e);return(0,n.assert)(24===t.length,new r.ParserError(`Invalid Solidity function. Expected function to be 24 bytes long, but received ${t.length} bytes.`)),{address:(0,n.bytesToHex)(t.subarray(0,20)),selector:(0,n.bytesToHex)(t.subarray(20,24))}}));s.getFunction=e=>{const t=(0,a.create)(e,i);return(0,n.concatBytes)([(0,n.hexToBytes)(t.address),(0,n.hexToBytes)(t.selector)])},s.fn={isDynamic:!1,isType:e=>"function"===e,getByteLength:()=>32,encode({buffer:e,value:t,packed:a,tight:n}){const r=(0,s.getFunction)(t);return o.fixedBytes.encode({type:"bytes24",buffer:e,value:r,packed:a,tight:n})},decode:({value:e})=>({address:(0,n.bytesToHex)(e.slice(0,20)),selector:(0,n.bytesToHex)(e.slice(20,24))})}}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/function.js"}],[1516,{"./address":1510,"./array":1511,"./bool":1512,"./bytes":1513,"./fixed-bytes":1514,"./function":1515,"./number":1517,"./parser":1518,"./string":1519,"./tuple":1520},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,s){var a=this&&this.__createBinding||(Object.create?function(e,t,s,a){a===undefined&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){a===undefined&&(a=s),e[a]=t[s]}),n=this&&this.__exportStar||function(e,t){for(var s in e)"default"===s||Object.prototype.hasOwnProperty.call(t,s)||a(t,e,s)};Object.defineProperty(s,"__esModule",{value:!0}),n(e("./address"),s),n(e("./array"),s),n(e("./bool"),s),n(e("./bytes"),s),n(e("./fixed-bytes"),s),n(e("./function"),s),n(e("./number"),s),n(e("./parser"),s),n(e("./string"),s),n(e("./tuple"),s)}}},{package:"@metamask/keyring-controller>@metamask/eth-hd-keyring>@metamask/eth-sig-util>@metamask/abi-utils",file:"node_modules/@metamask/eth-hd-keyring/node_modules/@metamask/abi-utils/dist/parsers/index.js"}]],[],{});